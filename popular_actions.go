// Code generated by actionlint/scripts/generate-popular-actions. DO NOT EDIT.

package actionlint

// PopularActions is data set of known popular actions. Keys are specs (owner/repo@ref) of actions
// and values are their metadata.
var PopularActions = map[string]*ActionMetadata{
	"8398a7/action-slack@v1": {
		Name: "action-slack",
		Inputs: ActionMetadataInputs{
			"failedmention": {"failedMention", false},
			"payload":       {"payload", false},
			"text":          {"text", false},
			"type":          {"type", false},
		},
	},
	"8398a7/action-slack@v2": {
		Name: "action-slack",
		Inputs: ActionMetadataInputs{
			"author_name":       {"author_name", false},
			"channel":           {"channel", false},
			"icon_emoji":        {"icon_emoji", false},
			"icon_url":          {"icon_url", false},
			"mention":           {"mention", false},
			"only_mention_fail": {"only_mention_fail", false},
			"payload":           {"payload", false},
			"status":            {"status", false},
			"text":              {"text", false},
			"username":          {"username", false},
		},
	},
	"8398a7/action-slack@v3": {
		Name: "action-slack",
		Inputs: ActionMetadataInputs{
			"author_name":     {"author_name", false},
			"channel":         {"channel", false},
			"custom_payload":  {"custom_payload", false},
			"fields":          {"fields", false},
			"github_base_url": {"github_base_url", false},
			"github_token":    {"github_token", false},
			"icon_emoji":      {"icon_emoji", false},
			"icon_url":        {"icon_url", false},
			"if_mention":      {"if_mention", false},
			"job_name":        {"job_name", false},
			"mention":         {"mention", false},
			"status":          {"status", true},
			"text":            {"text", false},
			"username":        {"username", false},
		},
	},
	"Azure/container-scan@v0": {
		Name: "Container image scan",
		Inputs: ActionMetadataInputs{
			"image-name":         {"image-name", true},
			"password":           {"password", false},
			"run-quality-checks": {"run-quality-checks", false},
			"severity-threshold": {"severity-threshold", false},
			"token":              {"token", false},
			"trivy-version":      {"trivy-version", false},
			"username":           {"username", false},
		},
		Outputs: ActionMetadataOutputs{
			"check-run-url":    {"check-run-url"},
			"scan-report-path": {"scan-report-path"},
		},
	},
	"Azure/functions-action@v1": {
		Name: "Azure Functions Action",
		Inputs: ActionMetadataInputs{
			"app-name":                       {"app-name", true},
			"enable-oryx-build":              {"enable-oryx-build", false},
			"package":                        {"package", false},
			"publish-profile":                {"publish-profile", false},
			"respect-funcignore":             {"respect-funcignore", false},
			"respect-pom-xml":                {"respect-pom-xml", false},
			"scm-do-build-during-deployment": {"scm-do-build-during-deployment", false},
			"slot-name":                      {"slot-name", false},
		},
		Outputs: ActionMetadataOutputs{
			"app-url":     {"app-url"},
			"package-url": {"package-url"},
		},
	},
	"EnricoMi/publish-unit-test-result-action@v1": {
		Name: "Publish Test Results",
		Inputs: ActionMetadataInputs{
			"check_name":                       {"check_name", false},
			"check_run_annotations":            {"check_run_annotations", false},
			"check_run_annotations_branch":     {"check_run_annotations_branch", false},
			"comment_mode":                     {"comment_mode", false},
			"comment_on_pr":                    {"comment_on_pr", false},
			"comment_title":                    {"comment_title", false},
			"commit":                           {"commit", false},
			"compare_to_earlier_commit":        {"compare_to_earlier_commit", false},
			"deduplicate_classes_by_file_name": {"deduplicate_classes_by_file_name", false},
			"event_file":                       {"event_file", false},
			"event_name":                       {"event_name", false},
			"fail_on":                          {"fail_on", false},
			"files":                            {"files", true},
			"github_retries":                   {"github_retries", false},
			"github_token":                     {"github_token", false},
			"hide_comments":                    {"hide_comments", false},
			"ignore_runs":                      {"ignore_runs", false},
			"job_summary":                      {"job_summary", false},
			"json_file":                        {"json_file", false},
			"json_thousands_separator":         {"json_thousands_separator", false},
			"pull_request_build":               {"pull_request_build", false},
			"report_individual_runs":           {"report_individual_runs", false},
			"seconds_between_github_reads":     {"seconds_between_github_reads", false},
			"seconds_between_github_writes":    {"seconds_between_github_writes", false},
			"test_changes_limit":               {"test_changes_limit", false},
			"time_unit":                        {"time_unit", false},
		},
		Outputs: ActionMetadataOutputs{
			"json": {"json"},
		},
	},
	"EnricoMi/publish-unit-test-result-action@v2": {
		Name: "Publish Test Results",
		Inputs: ActionMetadataInputs{
			"action_fail":                       {"action_fail", false},
			"action_fail_on_inconclusive":       {"action_fail_on_inconclusive", false},
			"check_name":                        {"check_name", false},
			"check_run_annotations":             {"check_run_annotations", false},
			"check_run_annotations_branch":      {"check_run_annotations_branch", false},
			"comment_mode":                      {"comment_mode", false},
			"comment_title":                     {"comment_title", false},
			"commit":                            {"commit", false},
			"compare_to_earlier_commit":         {"compare_to_earlier_commit", false},
			"deduplicate_classes_by_file_name":  {"deduplicate_classes_by_file_name", false},
			"event_file":                        {"event_file", false},
			"event_name":                        {"event_name", false},
			"fail_on":                           {"fail_on", false},
			"files":                             {"files", false},
			"github_retries":                    {"github_retries", false},
			"github_token":                      {"github_token", false},
			"github_token_actor":                {"github_token_actor", false},
			"ignore_runs":                       {"ignore_runs", false},
			"job_summary":                       {"job_summary", false},
			"json_file":                         {"json_file", false},
			"json_suite_details":                {"json_suite_details", false},
			"json_test_case_results":            {"json_test_case_results", false},
			"json_thousands_separator":          {"json_thousands_separator", false},
			"junit_files":                       {"junit_files", false},
			"large_files":                       {"large_files", false},
			"nunit_files":                       {"nunit_files", false},
			"pull_request_build":                {"pull_request_build", false},
			"report_individual_runs":            {"report_individual_runs", false},
			"report_suite_logs":                 {"report_suite_logs", false},
			"search_pull_requests":              {"search_pull_requests", false},
			"secondary_rate_limit_wait_seconds": {"secondary_rate_limit_wait_seconds", false},
			"seconds_between_github_reads":      {"seconds_between_github_reads", false},
			"seconds_between_github_writes":     {"seconds_between_github_writes", false},
			"test_changes_limit":                {"test_changes_limit", false},
			"test_file_prefix":                  {"test_file_prefix", false},
			"time_unit":                         {"time_unit", false},
			"trx_files":                         {"trx_files", false},
			"xunit_files":                       {"xunit_files", false},
		},
		Outputs: ActionMetadataOutputs{
			"json": {"json"},
		},
	},
	"JamesIves/github-pages-deploy-action@releases/v3": {
		Name: "Deploy to GitHub Pages",
		Inputs: ActionMetadataInputs{
			"access_token":     {"ACCESS_TOKEN", false},
			"base_branch":      {"BASE_BRANCH", false},
			"branch":           {"BRANCH", true},
			"clean":            {"CLEAN", false},
			"clean_exclude":    {"CLEAN_EXCLUDE", false},
			"commit_message":   {"COMMIT_MESSAGE", false},
			"folder":           {"FOLDER", true},
			"git_config_email": {"GIT_CONFIG_EMAIL", false},
			"git_config_name":  {"GIT_CONFIG_NAME", false},
			"github_token":     {"GITHUB_TOKEN", false},
			"lfs":              {"LFS", false},
			"preserve":         {"PRESERVE", false},
			"repository_name":  {"REPOSITORY_NAME", false},
			"silent":           {"SILENT", false},
			"single_commit":    {"SINGLE_COMMIT", false},
			"ssh":              {"SSH", false},
			"target_folder":    {"TARGET_FOLDER", false},
			"workspace":        {"WORKSPACE", false},
		},
		Outputs: ActionMetadataOutputs{
			"deployment_status": {"DEPLOYMENT_STATUS"},
		},
	},
	"JamesIves/github-pages-deploy-action@releases/v4": {
		Name: "Deploy to GitHub Pages",
		Inputs: ActionMetadataInputs{
			"branch":           {"branch", false},
			"clean":            {"clean", false},
			"clean-exclude":    {"clean-exclude", false},
			"commit-message":   {"commit-message", false},
			"dry-run":          {"dry-run", false},
			"folder":           {"folder", true},
			"force":            {"force", false},
			"git-config-email": {"git-config-email", false},
			"git-config-name":  {"git-config-name", false},
			"repository-name":  {"repository-name", false},
			"silent":           {"silent", false},
			"single-commit":    {"single-commit", false},
			"ssh-key":          {"ssh-key", false},
			"tag":              {"tag", false},
			"target-folder":    {"target-folder", false},
			"token":            {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"deployment-status": {"deployment-status"},
		},
	},
	"ReactiveCircus/android-emulator-runner@v1": {
		Name: "Android Emulator Runner",
		Inputs: ActionMetadataInputs{
			"api-level":          {"api-level", true},
			"arch":               {"arch", false},
			"disable-animations": {"disable-animations", false},
			"headless":           {"headless", false},
			"profile":            {"profile", false},
			"script":             {"script", true},
			"target":             {"target", false},
		},
	},
	"ReactiveCircus/android-emulator-runner@v2": {
		Name: "Android Emulator Runner",
		Inputs: ActionMetadataInputs{
			"api-level":                  {"api-level", true},
			"arch":                       {"arch", false},
			"avd-name":                   {"avd-name", false},
			"channel":                    {"channel", false},
			"cmake":                      {"cmake", false},
			"cores":                      {"cores", false},
			"disable-animations":         {"disable-animations", false},
			"disable-linux-hw-accel":     {"disable-linux-hw-accel", false},
			"disable-spellchecker":       {"disable-spellchecker", false},
			"disk-size":                  {"disk-size", false},
			"emulator-boot-timeout":      {"emulator-boot-timeout", false},
			"emulator-build":             {"emulator-build", false},
			"emulator-options":           {"emulator-options", false},
			"enable-hw-keyboard":         {"enable-hw-keyboard", false},
			"force-avd-creation":         {"force-avd-creation", false},
			"heap-size":                  {"heap-size", false},
			"ndk":                        {"ndk", false},
			"pre-emulator-launch-script": {"pre-emulator-launch-script", false},
			"profile":                    {"profile", false},
			"ram-size":                   {"ram-size", false},
			"script":                     {"script", true},
			"sdcard-path-or-size":        {"sdcard-path-or-size", false},
			"target":                     {"target", false},
			"working-directory":          {"working-directory", false},
		},
	},
	"Swatinem/rust-cache@v1": {
		Name: "Rust Cache",
		Inputs: ActionMetadataInputs{
			"cache-on-failure":  {"cache-on-failure", false},
			"key":               {"key", false},
			"sharedkey":         {"sharedKey", false},
			"target-dir":        {"target-dir", false},
			"working-directory": {"working-directory", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"Swatinem/rust-cache@v2": {
		Name: "Rust Cache",
		Inputs: ActionMetadataInputs{
			"cache-all-crates":  {"cache-all-crates", false},
			"cache-directories": {"cache-directories", false},
			"cache-on-failure":  {"cache-on-failure", false},
			"cache-provider":    {"cache-provider", false},
			"cache-targets":     {"cache-targets", false},
			"env-vars":          {"env-vars", false},
			"key":               {"key", false},
			"prefix-key":        {"prefix-key", false},
			"save-if":           {"save-if", false},
			"shared-key":        {"shared-key", false},
			"workspaces":        {"workspaces", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions-cool/issues-helper@v1": {
		Name: "Issues Helper",
		Inputs: ActionMetadataInputs{
			"actions":         {"actions", false},
			"assignees":       {"assignees", false},
			"body":            {"body", false},
			"body-includes":   {"body-includes", false},
			"comment-auth":    {"comment-auth", false},
			"comment-id":      {"comment-id", false},
			"contents":        {"contents", false},
			"direction":       {"direction", false},
			"inactive-day":    {"inactive-day", false},
			"inactive-label":  {"inactive-label", false},
			"issue-assignee":  {"issue-assignee", false},
			"issue-creator":   {"issue-creator", false},
			"issue-mentioned": {"issue-mentioned", false},
			"issue-number":    {"issue-number", false},
			"issue-state":     {"issue-state", false},
			"labels":          {"labels", false},
			"state":           {"state", false},
			"title":           {"title", false},
			"title-includes":  {"title-includes", false},
			"token":           {"token", false},
			"update-mode":     {"update-mode", false},
		},
		Outputs: ActionMetadataOutputs{
			"comment-id":   {"comment-id"},
			"comments":     {"comments"},
			"issue-number": {"issue-number"},
		},
	},
	"actions-cool/issues-helper@v2": {
		Name: "Issues Helper",
		Inputs: ActionMetadataInputs{
			"actions":            {"actions", false},
			"assignee-includes":  {"assignee-includes", false},
			"assignees":          {"assignees", false},
			"body":               {"body", false},
			"body-includes":      {"body-includes", false},
			"close-issue":        {"close-issue", false},
			"comment-auth":       {"comment-auth", false},
			"comment-id":         {"comment-id", false},
			"contents":           {"contents", false},
			"count-comments":     {"count-comments", false},
			"count-lables":       {"count-lables", false},
			"direction":          {"direction", false},
			"duplicate-command":  {"duplicate-command", false},
			"duplicate-labels":   {"duplicate-labels", false},
			"exclude-labels":     {"exclude-labels", false},
			"inactive-day":       {"inactive-day", false},
			"inactive-label":     {"inactive-label", false},
			"issue-assignee":     {"issue-assignee", false},
			"issue-contents":     {"issue-contents", false},
			"issue-creator":      {"issue-creator", false},
			"issue-mentioned":    {"issue-mentioned", false},
			"issue-number":       {"issue-number", false},
			"issue-state":        {"issue-state", false},
			"label-color":        {"label-color", false},
			"label-desc":         {"label-desc", false},
			"label-name":         {"label-name", false},
			"labels":             {"labels", false},
			"lock-reason":        {"lock-reason", false},
			"out-comments":       {"out-comments", false},
			"random-to":          {"random-to", false},
			"remove-labels":      {"remove-labels", false},
			"repo":               {"repo", false},
			"require-permission": {"require-permission", false},
			"state":              {"state", false},
			"title":              {"title", false},
			"title-excludes":     {"title-excludes", false},
			"title-includes":     {"title-includes", false},
			"token":              {"token", false},
			"update-mode":        {"update-mode", false},
		},
		Outputs: ActionMetadataOutputs{
			"check-result": {"check-result"},
			"comment-id":   {"comment-id"},
			"comments":     {"comments"},
			"issue-number": {"issue-number"},
		},
	},
	"actions-cool/issues-helper@v3": {
		Name: "Issues Helper",
		Inputs: ActionMetadataInputs{
			"actions":            {"actions", false},
			"assign-command":     {"assign-command", false},
			"assignee-includes":  {"assignee-includes", false},
			"assignees":          {"assignees", false},
			"body":               {"body", false},
			"body-includes":      {"body-includes", false},
			"close-issue":        {"close-issue", false},
			"close-reason":       {"close-reason", false},
			"comment-auth":       {"comment-auth", false},
			"comment-id":         {"comment-id", false},
			"direction":          {"direction", false},
			"duplicate-command":  {"duplicate-command", false},
			"duplicate-labels":   {"duplicate-labels", false},
			"emoji":              {"emoji", false},
			"exclude-labels":     {"exclude-labels", false},
			"inactive-day":       {"inactive-day", false},
			"inactive-label":     {"inactive-label", false},
			"inactive-mode":      {"inactive-mode", false},
			"issue-assignee":     {"issue-assignee", false},
			"issue-creator":      {"issue-creator", false},
			"issue-emoji":        {"issue-emoji", false},
			"issue-mentioned":    {"issue-mentioned", false},
			"issue-number":       {"issue-number", false},
			"issue-state":        {"issue-state", false},
			"label-color":        {"label-color", false},
			"label-desc":         {"label-desc", false},
			"label-name":         {"label-name", false},
			"labels":             {"labels", false},
			"lock-reason":        {"lock-reason", false},
			"random-to":          {"random-to", false},
			"remove-labels":      {"remove-labels", false},
			"repo":               {"repo", false},
			"require-permission": {"require-permission", false},
			"state":              {"state", false},
			"title":              {"title", false},
			"title-excludes":     {"title-excludes", false},
			"title-includes":     {"title-includes", false},
			"token":              {"token", false},
			"update-mode":        {"update-mode", false},
		},
		Outputs: ActionMetadataOutputs{
			"check-result":    {"check-result"},
			"comment-id":      {"comment-id"},
			"comments":        {"comments"},
			"issue-assignees": {"issue-assignees"},
			"issue-body":      {"issue-body"},
			"issue-labels":    {"issue-labels"},
			"issue-number":    {"issue-number"},
			"issue-state":     {"issue-state"},
			"issue-title":     {"issue-title"},
			"issues":          {"issues"},
		},
	},
	"actions-rs/audit-check@v1": {
		Name: "rust-audit-check",
		Inputs: ActionMetadataInputs{
			"token": {"token", true},
		},
	},
	"actions-rs/cargo@v1": {
		Name: "rust-cargo",
		Inputs: ActionMetadataInputs{
			"args":      {"args", false},
			"command":   {"command", true},
			"toolchain": {"toolchain", false},
			"use-cross": {"use-cross", false},
		},
	},
	"actions-rs/clippy-check@v1": {
		Name: "rust-clippy-check",
		Inputs: ActionMetadataInputs{
			"args":      {"args", false},
			"name":      {"name", false},
			"token":     {"token", true},
			"toolchain": {"toolchain", false},
			"use-cross": {"use-cross", false},
		},
	},
	"actions-rs/toolchain@v1": {
		Name: "rust-toolchain",
		Inputs: ActionMetadataInputs{
			"components": {"components", false},
			"default":    {"default", false},
			"override":   {"override", false},
			"profile":    {"profile", false},
			"target":     {"target", false},
			"toolchain":  {"toolchain", false},
		},
		Outputs: ActionMetadataOutputs{
			"cargo":      {"cargo"},
			"rustc":      {"rustc"},
			"rustc_hash": {"rustc_hash"},
			"rustup":     {"rustup"},
		},
	},
	"actions/cache@v1": {
		Name: "Cache",
		Inputs: ActionMetadataInputs{
			"key":          {"key", true},
			"path":         {"path", true},
			"restore-keys": {"restore-keys", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions/cache@v2": {
		Name: "Cache",
		Inputs: ActionMetadataInputs{
			"key":               {"key", true},
			"path":              {"path", true},
			"restore-keys":      {"restore-keys", false},
			"upload-chunk-size": {"upload-chunk-size", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions/cache@v3": {
		Name: "Cache",
		Inputs: ActionMetadataInputs{
			"enablecrossosarchive": {"enableCrossOsArchive", false},
			"fail-on-cache-miss":   {"fail-on-cache-miss", false},
			"key":                  {"key", true},
			"lookup-only":          {"lookup-only", false},
			"path":                 {"path", true},
			"restore-keys":         {"restore-keys", false},
			"upload-chunk-size":    {"upload-chunk-size", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions/checkout@v1": {
		Name: "Checkout",
		Inputs: ActionMetadataInputs{
			"clean":       {"clean", false},
			"fetch-depth": {"fetch-depth", false},
			"lfs":         {"lfs", false},
			"path":        {"path", false},
			"ref":         {"ref", false},
			"repository":  {"repository", false},
			"submodules":  {"submodules", false},
			"token":       {"token", false},
		},
	},
	"actions/checkout@v2": {
		Name: "Checkout",
		Inputs: ActionMetadataInputs{
			"clean":               {"clean", false},
			"fetch-depth":         {"fetch-depth", false},
			"lfs":                 {"lfs", false},
			"path":                {"path", false},
			"persist-credentials": {"persist-credentials", false},
			"ref":                 {"ref", false},
			"repository":          {"repository", false},
			"set-safe-directory":  {"set-safe-directory", false},
			"ssh-key":             {"ssh-key", false},
			"ssh-known-hosts":     {"ssh-known-hosts", false},
			"ssh-strict":          {"ssh-strict", false},
			"submodules":          {"submodules", false},
			"token":               {"token", false},
		},
	},
	"actions/checkout@v3": {
		Name: "Checkout",
		Inputs: ActionMetadataInputs{
			"clean":                     {"clean", false},
			"fetch-depth":               {"fetch-depth", false},
			"fetch-tags":                {"fetch-tags", false},
			"github-server-url":         {"github-server-url", false},
			"lfs":                       {"lfs", false},
			"path":                      {"path", false},
			"persist-credentials":       {"persist-credentials", false},
			"ref":                       {"ref", false},
			"repository":                {"repository", false},
			"set-safe-directory":        {"set-safe-directory", false},
			"sparse-checkout":           {"sparse-checkout", false},
			"sparse-checkout-cone-mode": {"sparse-checkout-cone-mode", false},
			"ssh-key":                   {"ssh-key", false},
			"ssh-known-hosts":           {"ssh-known-hosts", false},
			"ssh-strict":                {"ssh-strict", false},
			"submodules":                {"submodules", false},
			"token":                     {"token", false},
		},
	},
	"actions/checkout@v4": {
		Name: "Checkout",
		Inputs: ActionMetadataInputs{
			"clean":                     {"clean", false},
			"fetch-depth":               {"fetch-depth", false},
			"fetch-tags":                {"fetch-tags", false},
			"filter":                    {"filter", false},
			"github-server-url":         {"github-server-url", false},
			"lfs":                       {"lfs", false},
			"path":                      {"path", false},
			"persist-credentials":       {"persist-credentials", false},
			"ref":                       {"ref", false},
			"repository":                {"repository", false},
			"set-safe-directory":        {"set-safe-directory", false},
			"show-progress":             {"show-progress", false},
			"sparse-checkout":           {"sparse-checkout", false},
			"sparse-checkout-cone-mode": {"sparse-checkout-cone-mode", false},
			"ssh-key":                   {"ssh-key", false},
			"ssh-known-hosts":           {"ssh-known-hosts", false},
			"ssh-strict":                {"ssh-strict", false},
			"submodules":                {"submodules", false},
			"token":                     {"token", false},
		},
	},
	"actions/configure-pages@v1": {
		Name: "Configure GitHub Pages",
		Inputs: ActionMetadataInputs{
			"enablement":            {"enablement", false},
			"generator_config_file": {"generator_config_file", false},
			"static_site_generator": {"static_site_generator", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"base_path": {"base_path"},
			"base_url":  {"base_url"},
			"host":      {"host"},
			"origin":    {"origin"},
		},
	},
	"actions/configure-pages@v2": {
		Name: "Configure GitHub Pages",
		Inputs: ActionMetadataInputs{
			"enablement":            {"enablement", false},
			"generator_config_file": {"generator_config_file", false},
			"static_site_generator": {"static_site_generator", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"base_path": {"base_path"},
			"base_url":  {"base_url"},
			"host":      {"host"},
			"origin":    {"origin"},
		},
	},
	"actions/configure-pages@v3": {
		Name: "Configure GitHub Pages",
		Inputs: ActionMetadataInputs{
			"enablement":            {"enablement", false},
			"generator_config_file": {"generator_config_file", false},
			"static_site_generator": {"static_site_generator", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"base_path": {"base_path"},
			"base_url":  {"base_url"},
			"host":      {"host"},
			"origin":    {"origin"},
		},
	},
	"actions/delete-package-versions@v1": {
		Name: "Delete Package Versions",
		Inputs: ActionMetadataInputs{
			"num-old-versions-to-delete": {"num-old-versions-to-delete", false},
			"owner":                      {"owner", false},
			"package-name":               {"package-name", false},
			"package-version-ids":        {"package-version-ids", false},
			"repo":                       {"repo", false},
			"token":                      {"token", false},
		},
	},
	"actions/delete-package-versions@v2": {
		Name: "Delete Package Versions",
		Inputs: ActionMetadataInputs{
			"delete-only-pre-release-versions": {"delete-only-pre-release-versions", false},
			"ignore-versions":                  {"ignore-versions", false},
			"min-versions-to-keep":             {"min-versions-to-keep", false},
			"num-old-versions-to-delete":       {"num-old-versions-to-delete", false},
			"owner":                            {"owner", false},
			"package-name":                     {"package-name", false},
			"package-version-ids":              {"package-version-ids", false},
			"repo":                             {"repo", false},
			"token":                            {"token", false},
		},
	},
	"actions/delete-package-versions@v3": {
		Name: "Delete Package Versions",
		Inputs: ActionMetadataInputs{
			"delete-only-pre-release-versions": {"delete-only-pre-release-versions", false},
			"ignore-versions":                  {"ignore-versions", false},
			"min-versions-to-keep":             {"min-versions-to-keep", false},
			"num-old-versions-to-delete":       {"num-old-versions-to-delete", false},
			"owner":                            {"owner", false},
			"package-name":                     {"package-name", false},
			"package-version-ids":              {"package-version-ids", false},
			"repo":                             {"repo", false},
			"token":                            {"token", false},
		},
	},
	"actions/delete-package-versions@v4": {
		Name: "Delete Package Versions",
		Inputs: ActionMetadataInputs{
			"delete-only-pre-release-versions": {"delete-only-pre-release-versions", false},
			"delete-only-untagged-versions":    {"delete-only-untagged-versions", false},
			"ignore-versions":                  {"ignore-versions", false},
			"min-versions-to-keep":             {"min-versions-to-keep", false},
			"num-old-versions-to-delete":       {"num-old-versions-to-delete", false},
			"owner":                            {"owner", false},
			"package-name":                     {"package-name", true},
			"package-type":                     {"package-type", true},
			"package-version-ids":              {"package-version-ids", false},
			"token":                            {"token", false},
		},
	},
	"actions/dependency-review-action@v3": {
		Name: "Dependency Review",
		Inputs: ActionMetadataInputs{
			"allow-dependencies-licenses":        {"allow-dependencies-licenses", false},
			"allow-ghsas":                        {"allow-ghsas", false},
			"allow-licenses":                     {"allow-licenses", false},
			"base-ref":                           {"base-ref", false},
			"comment-summary-in-pr":              {"comment-summary-in-pr", false},
			"config-file":                        {"config-file", false},
			"deny-groups":                        {"deny-groups", false},
			"deny-licenses":                      {"deny-licenses", false},
			"deny-packages":                      {"deny-packages", false},
			"external-repo-token":                {"external-repo-token", false},
			"fail-on-scopes":                     {"fail-on-scopes", false},
			"fail-on-severity":                   {"fail-on-severity", false},
			"head-ref":                           {"head-ref", false},
			"license-check":                      {"license-check", false},
			"repo-token":                         {"repo-token", false},
			"retry-on-snapshot-warnings":         {"retry-on-snapshot-warnings", false},
			"retry-on-snapshot-warnings-timeout": {"retry-on-snapshot-warnings-timeout", false},
			"vulnerability-check":                {"vulnerability-check", false},
		},
	},
	"actions/deploy-pages@v1": {
		Name: "Deploy GitHub Pages site",
		Inputs: ActionMetadataInputs{
			"artifact_name":      {"artifact_name", false},
			"conclusion":         {"conclusion", false},
			"emit_telemetry":     {"emit_telemetry", false},
			"error_count":        {"error_count", false},
			"preview":            {"preview", false},
			"reporting_interval": {"reporting_interval", false},
			"timeout":            {"timeout", false},
			"token":              {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"page_url": {"page_url"},
		},
	},
	"actions/deploy-pages@v2": {
		Name: "Deploy GitHub Pages site",
		Inputs: ActionMetadataInputs{
			"artifact_name":      {"artifact_name", false},
			"error_count":        {"error_count", false},
			"preview":            {"preview", false},
			"reporting_interval": {"reporting_interval", false},
			"timeout":            {"timeout", false},
			"token":              {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"page_url": {"page_url"},
		},
	},
	"actions/download-artifact@v1": {
		Name: "Download a Build Artifact",
		Inputs: ActionMetadataInputs{
			"name": {"name", true},
			"path": {"path", false},
		},
	},
	"actions/download-artifact@v2": {
		Name: "Download a Build Artifact",
		Inputs: ActionMetadataInputs{
			"name": {"name", false},
			"path": {"path", false},
		},
	},
	"actions/download-artifact@v3": {
		Name: "Download a Build Artifact",
		Inputs: ActionMetadataInputs{
			"name": {"name", false},
			"path": {"path", false},
		},
	},
	"actions/first-interaction@v1": {
		Name: "First interaction",
		Inputs: ActionMetadataInputs{
			"issue-message": {"issue-message", false},
			"pr-message":    {"pr-message", false},
			"repo-token":    {"repo-token", true},
		},
	},
	"actions/github-script@v1": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"debug":           {"debug", false},
			"github-token":    {"github-token", false},
			"previews":        {"previews", false},
			"result-encoding": {"result-encoding", false},
			"script":          {"script", true},
			"user-agent":      {"user-agent", false},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/github-script@v2": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"debug":           {"debug", false},
			"github-token":    {"github-token", false},
			"previews":        {"previews", false},
			"result-encoding": {"result-encoding", false},
			"script":          {"script", true},
			"user-agent":      {"user-agent", false},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/github-script@v3": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"debug":           {"debug", false},
			"github-token":    {"github-token", false},
			"previews":        {"previews", false},
			"result-encoding": {"result-encoding", false},
			"script":          {"script", true},
			"user-agent":      {"user-agent", false},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/github-script@v4": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"debug":           {"debug", false},
			"github-token":    {"github-token", false},
			"previews":        {"previews", false},
			"result-encoding": {"result-encoding", false},
			"script":          {"script", true},
			"user-agent":      {"user-agent", false},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/github-script@v5": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"debug":           {"debug", false},
			"github-token":    {"github-token", false},
			"previews":        {"previews", false},
			"result-encoding": {"result-encoding", false},
			"script":          {"script", true},
			"user-agent":      {"user-agent", false},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/github-script@v6": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"debug":                     {"debug", false},
			"github-token":              {"github-token", false},
			"previews":                  {"previews", false},
			"result-encoding":           {"result-encoding", false},
			"retries":                   {"retries", false},
			"retry-exempt-status-codes": {"retry-exempt-status-codes", false},
			"script":                    {"script", true},
			"user-agent":                {"user-agent", false},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/labeler@v2": {
		Name: "Pull Request Labeler",
		Inputs: ActionMetadataInputs{
			"configuration-path": {"configuration-path", false},
			"repo-token":         {"repo-token", false},
			"sync-labels":        {"sync-labels", false},
		},
	},
	"actions/labeler@v3": {
		Name: "Labeler",
		Inputs: ActionMetadataInputs{
			"configuration-path": {"configuration-path", false},
			"repo-token":         {"repo-token", false},
			"sync-labels":        {"sync-labels", false},
		},
	},
	"actions/labeler@v4": {
		Name: "Labeler",
		Inputs: ActionMetadataInputs{
			"configuration-path": {"configuration-path", false},
			"dot":                {"dot", false},
			"pr-number":          {"pr-number", false},
			"repo-token":         {"repo-token", false},
			"sync-labels":        {"sync-labels", false},
		},
		Outputs: ActionMetadataOutputs{
			"all-labels": {"all-labels"},
			"new-labels": {"new-labels"},
		},
	},
	"actions/setup-dotnet@v1": {
		Name: "Setup .NET Core SDK",
		Inputs: ActionMetadataInputs{
			"config-file":        {"config-file", false},
			"dotnet-version":     {"dotnet-version", false},
			"include-prerelease": {"include-prerelease", false},
			"owner":              {"owner", false},
			"source-url":         {"source-url", false},
		},
	},
	"actions/setup-dotnet@v2": {
		Name: "Setup .NET Core SDK",
		Inputs: ActionMetadataInputs{
			"config-file":        {"config-file", false},
			"dotnet-version":     {"dotnet-version", false},
			"global-json-file":   {"global-json-file", false},
			"include-prerelease": {"include-prerelease", false},
			"owner":              {"owner", false},
			"source-url":         {"source-url", false},
		},
	},
	"actions/setup-dotnet@v3": {
		Name: "Setup .NET Core SDK",
		Inputs: ActionMetadataInputs{
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"config-file":           {"config-file", false},
			"dotnet-quality":        {"dotnet-quality", false},
			"dotnet-version":        {"dotnet-version", false},
			"global-json-file":      {"global-json-file", false},
			"owner":                 {"owner", false},
			"source-url":            {"source-url", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"dotnet-version": {"dotnet-version"},
		},
	},
	"actions/setup-go@v1": {
		Name: "Setup Go environment",
		Inputs: ActionMetadataInputs{
			"go-version": {"go-version", false},
			"version":    {"version", false},
		},
	},
	"actions/setup-go@v2": {
		Name: "Setup Go environment",
		Inputs: ActionMetadataInputs{
			"check-latest": {"check-latest", false},
			"go-version":   {"go-version", false},
			"stable":       {"stable", false},
			"token":        {"token", false},
		},
	},
	"actions/setup-go@v3": {
		Name: "Setup Go environment",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"check-latest":          {"check-latest", false},
			"go-version":            {"go-version", false},
			"go-version-file":       {"go-version-file", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":  {"cache-hit"},
			"go-version": {"go-version"},
		},
	},
	"actions/setup-go@v4": {
		Name: "Setup Go environment",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"check-latest":          {"check-latest", false},
			"go-version":            {"go-version", false},
			"go-version-file":       {"go-version-file", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":  {"cache-hit"},
			"go-version": {"go-version"},
		},
	},
	"actions/setup-java@v1": {
		Name: "Setup Java JDK",
		Inputs: ActionMetadataInputs{
			"architecture":    {"architecture", false},
			"gpg-passphrase":  {"gpg-passphrase", false},
			"gpg-private-key": {"gpg-private-key", false},
			"java-package":    {"java-package", false},
			"java-version":    {"java-version", true},
			"jdkfile":         {"jdkFile", false},
			"server-id":       {"server-id", false},
			"server-password": {"server-password", false},
			"server-username": {"server-username", false},
			"settings-path":   {"settings-path", false},
		},
		Outputs: ActionMetadataOutputs{
			"path":    {"path"},
			"version": {"version"},
		},
	},
	"actions/setup-java@v2": {
		Name: "Setup Java JDK",
		Inputs: ActionMetadataInputs{
			"architecture":       {"architecture", false},
			"cache":              {"cache", false},
			"check-latest":       {"check-latest", false},
			"distribution":       {"distribution", true},
			"gpg-passphrase":     {"gpg-passphrase", false},
			"gpg-private-key":    {"gpg-private-key", false},
			"java-package":       {"java-package", false},
			"java-version":       {"java-version", true},
			"jdkfile":            {"jdkFile", false},
			"job-status":         {"job-status", false},
			"overwrite-settings": {"overwrite-settings", false},
			"server-id":          {"server-id", false},
			"server-password":    {"server-password", false},
			"server-username":    {"server-username", false},
			"settings-path":      {"settings-path", false},
		},
		Outputs: ActionMetadataOutputs{
			"distribution": {"distribution"},
			"path":         {"path"},
			"version":      {"version"},
		},
	},
	"actions/setup-java@v3": {
		Name: "Setup Java JDK",
		Inputs: ActionMetadataInputs{
			"architecture":         {"architecture", false},
			"cache":                {"cache", false},
			"check-latest":         {"check-latest", false},
			"distribution":         {"distribution", true},
			"gpg-passphrase":       {"gpg-passphrase", false},
			"gpg-private-key":      {"gpg-private-key", false},
			"java-package":         {"java-package", false},
			"java-version":         {"java-version", false},
			"java-version-file":    {"java-version-file", false},
			"jdkfile":              {"jdkFile", false},
			"job-status":           {"job-status", false},
			"mvn-toolchain-id":     {"mvn-toolchain-id", false},
			"mvn-toolchain-vendor": {"mvn-toolchain-vendor", false},
			"overwrite-settings":   {"overwrite-settings", false},
			"server-id":            {"server-id", false},
			"server-password":      {"server-password", false},
			"server-username":      {"server-username", false},
			"settings-path":        {"settings-path", false},
			"token":                {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"distribution": {"distribution"},
			"path":         {"path"},
			"version":      {"version"},
		},
	},
	"actions/setup-node@v1": {
		Name: "Setup Node.js environment",
		Inputs: ActionMetadataInputs{
			"always-auth":  {"always-auth", false},
			"node-version": {"node-version", false},
			"registry-url": {"registry-url", false},
			"scope":        {"scope", false},
			"version":      {"version", false},
		},
	},
	"actions/setup-node@v2": {
		Name: "Setup Node.js environment",
		Inputs: ActionMetadataInputs{
			"always-auth":           {"always-auth", false},
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"check-latest":          {"check-latest", false},
			"node-version":          {"node-version", false},
			"node-version-file":     {"node-version-file", false},
			"registry-url":          {"registry-url", false},
			"scope":                 {"scope", false},
			"token":                 {"token", false},
			"version":               {"version", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions/setup-node@v3": {
		Name: "Setup Node.js environment",
		Inputs: ActionMetadataInputs{
			"always-auth":           {"always-auth", false},
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"check-latest":          {"check-latest", false},
			"node-version":          {"node-version", false},
			"node-version-file":     {"node-version-file", false},
			"registry-url":          {"registry-url", false},
			"scope":                 {"scope", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"node-version": {"node-version"},
		},
	},
	"actions/setup-python@v1": {
		Name: "Setup Python",
		Inputs: ActionMetadataInputs{
			"architecture":   {"architecture", false},
			"python-version": {"python-version", false},
		},
		Outputs: ActionMetadataOutputs{
			"python-version": {"python-version"},
		},
	},
	"actions/setup-python@v2": {
		Name: "Setup Python",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"python-version":        {"python-version", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"python-version": {"python-version"},
		},
	},
	"actions/setup-python@v3": {
		Name: "Setup Python",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"python-version":        {"python-version", false},
			"token":                 {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"python-version": {"python-version"},
		},
	},
	"actions/setup-python@v4": {
		Name: "Setup Python",
		Inputs: ActionMetadataInputs{
			"allow-prereleases":     {"allow-prereleases", false},
			"architecture":          {"architecture", false},
			"cache":                 {"cache", false},
			"cache-dependency-path": {"cache-dependency-path", false},
			"check-latest":          {"check-latest", false},
			"python-version":        {"python-version", false},
			"python-version-file":   {"python-version-file", false},
			"token":                 {"token", false},
			"update-environment":    {"update-environment", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"python-path":    {"python-path"},
			"python-version": {"python-version"},
		},
	},
	"actions/stale@v1": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"days-before-close":   {"days-before-close", false},
			"days-before-stale":   {"days-before-stale", false},
			"exempt-issue-label":  {"exempt-issue-label", false},
			"exempt-pr-label":     {"exempt-pr-label", false},
			"operations-per-run":  {"operations-per-run", false},
			"repo-token":          {"repo-token", true},
			"stale-issue-label":   {"stale-issue-label", false},
			"stale-issue-message": {"stale-issue-message", false},
			"stale-pr-label":      {"stale-pr-label", false},
			"stale-pr-message":    {"stale-pr-message", false},
		},
	},
	"actions/stale@v2": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"days-before-close":   {"days-before-close", false},
			"days-before-stale":   {"days-before-stale", false},
			"debug-only":          {"debug-only", false},
			"exempt-issue-labels": {"exempt-issue-labels", false},
			"exempt-pr-labels":    {"exempt-pr-labels", false},
			"only-labels":         {"only-labels", false},
			"operations-per-run":  {"operations-per-run", false},
			"repo-token":          {"repo-token", true},
			"stale-issue-label":   {"stale-issue-label", false},
			"stale-issue-message": {"stale-issue-message", false},
			"stale-pr-label":      {"stale-pr-label", false},
			"stale-pr-message":    {"stale-pr-message", false},
		},
	},
	"actions/stale@v3": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false},
			"any-of-labels":                   {"any-of-labels", false},
			"any-of-pr-labels":                {"any-of-pr-labels", false},
			"ascending":                       {"ascending", false},
			"close-issue-label":               {"close-issue-label", false},
			"close-issue-message":             {"close-issue-message", false},
			"close-pr-label":                  {"close-pr-label", false},
			"close-pr-message":                {"close-pr-message", false},
			"days-before-close":               {"days-before-close", false},
			"days-before-issue-close":         {"days-before-issue-close", false},
			"days-before-issue-stale":         {"days-before-issue-stale", false},
			"days-before-pr-close":            {"days-before-pr-close", false},
			"days-before-pr-stale":            {"days-before-pr-stale", false},
			"days-before-stale":               {"days-before-stale", false},
			"debug-only":                      {"debug-only", false},
			"delete-branch":                   {"delete-branch", false},
			"enable-statistics":               {"enable-statistics", false},
			"exempt-all-assignees":            {"exempt-all-assignees", false},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false},
			"exempt-all-milestones":           {"exempt-all-milestones", false},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false},
			"exempt-assignees":                {"exempt-assignees", false},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false},
			"exempt-issue-labels":             {"exempt-issue-labels", false},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false},
			"exempt-milestones":               {"exempt-milestones", false},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false},
			"exempt-pr-labels":                {"exempt-pr-labels", false},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false},
			"only-issue-labels":               {"only-issue-labels", false},
			"only-labels":                     {"only-labels", false},
			"only-pr-labels":                  {"only-pr-labels", false},
			"operations-per-run":              {"operations-per-run", false},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false},
			"repo-token":                      {"repo-token", false},
			"skip-stale-issue-message":        {"skip-stale-issue-message", false},
			"skip-stale-pr-message":           {"skip-stale-pr-message", false},
			"stale-issue-label":               {"stale-issue-label", false},
			"stale-issue-message":             {"stale-issue-message", false},
			"stale-pr-label":                  {"stale-pr-label", false},
			"stale-pr-message":                {"stale-pr-message", false},
			"start-date":                      {"start-date", false},
		},
	},
	"actions/stale@v4": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false},
			"any-of-labels":                   {"any-of-labels", false},
			"any-of-pr-labels":                {"any-of-pr-labels", false},
			"ascending":                       {"ascending", false},
			"close-issue-label":               {"close-issue-label", false},
			"close-issue-message":             {"close-issue-message", false},
			"close-pr-label":                  {"close-pr-label", false},
			"close-pr-message":                {"close-pr-message", false},
			"days-before-close":               {"days-before-close", false},
			"days-before-issue-close":         {"days-before-issue-close", false},
			"days-before-issue-stale":         {"days-before-issue-stale", false},
			"days-before-pr-close":            {"days-before-pr-close", false},
			"days-before-pr-stale":            {"days-before-pr-stale", false},
			"days-before-stale":               {"days-before-stale", false},
			"debug-only":                      {"debug-only", false},
			"delete-branch":                   {"delete-branch", false},
			"enable-statistics":               {"enable-statistics", false},
			"exempt-all-assignees":            {"exempt-all-assignees", false},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false},
			"exempt-all-milestones":           {"exempt-all-milestones", false},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false},
			"exempt-assignees":                {"exempt-assignees", false},
			"exempt-draft-pr":                 {"exempt-draft-pr", false},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false},
			"exempt-issue-labels":             {"exempt-issue-labels", false},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false},
			"exempt-milestones":               {"exempt-milestones", false},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false},
			"exempt-pr-labels":                {"exempt-pr-labels", false},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false},
			"ignore-issue-updates":            {"ignore-issue-updates", false},
			"ignore-pr-updates":               {"ignore-pr-updates", false},
			"ignore-updates":                  {"ignore-updates", false},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false},
			"only-issue-labels":               {"only-issue-labels", false},
			"only-labels":                     {"only-labels", false},
			"only-pr-labels":                  {"only-pr-labels", false},
			"operations-per-run":              {"operations-per-run", false},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false},
			"repo-token":                      {"repo-token", false},
			"stale-issue-label":               {"stale-issue-label", false},
			"stale-issue-message":             {"stale-issue-message", false},
			"stale-pr-label":                  {"stale-pr-label", false},
			"stale-pr-message":                {"stale-pr-message", false},
			"start-date":                      {"start-date", false},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/stale@v5": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false},
			"any-of-labels":                   {"any-of-labels", false},
			"any-of-pr-labels":                {"any-of-pr-labels", false},
			"ascending":                       {"ascending", false},
			"close-issue-label":               {"close-issue-label", false},
			"close-issue-message":             {"close-issue-message", false},
			"close-issue-reason":              {"close-issue-reason", false},
			"close-pr-label":                  {"close-pr-label", false},
			"close-pr-message":                {"close-pr-message", false},
			"days-before-close":               {"days-before-close", false},
			"days-before-issue-close":         {"days-before-issue-close", false},
			"days-before-issue-stale":         {"days-before-issue-stale", false},
			"days-before-pr-close":            {"days-before-pr-close", false},
			"days-before-pr-stale":            {"days-before-pr-stale", false},
			"days-before-stale":               {"days-before-stale", false},
			"debug-only":                      {"debug-only", false},
			"delete-branch":                   {"delete-branch", false},
			"enable-statistics":               {"enable-statistics", false},
			"exempt-all-assignees":            {"exempt-all-assignees", false},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false},
			"exempt-all-milestones":           {"exempt-all-milestones", false},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false},
			"exempt-assignees":                {"exempt-assignees", false},
			"exempt-draft-pr":                 {"exempt-draft-pr", false},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false},
			"exempt-issue-labels":             {"exempt-issue-labels", false},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false},
			"exempt-milestones":               {"exempt-milestones", false},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false},
			"exempt-pr-labels":                {"exempt-pr-labels", false},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false},
			"ignore-issue-updates":            {"ignore-issue-updates", false},
			"ignore-pr-updates":               {"ignore-pr-updates", false},
			"ignore-updates":                  {"ignore-updates", false},
			"include-only-assigned":           {"include-only-assigned", false},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false},
			"only-issue-labels":               {"only-issue-labels", false},
			"only-labels":                     {"only-labels", false},
			"only-pr-labels":                  {"only-pr-labels", false},
			"operations-per-run":              {"operations-per-run", false},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false},
			"repo-token":                      {"repo-token", false},
			"stale-issue-label":               {"stale-issue-label", false},
			"stale-issue-message":             {"stale-issue-message", false},
			"stale-pr-label":                  {"stale-pr-label", false},
			"stale-pr-message":                {"stale-pr-message", false},
			"start-date":                      {"start-date", false},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/stale@v6": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false},
			"any-of-labels":                   {"any-of-labels", false},
			"any-of-pr-labels":                {"any-of-pr-labels", false},
			"ascending":                       {"ascending", false},
			"close-issue-label":               {"close-issue-label", false},
			"close-issue-message":             {"close-issue-message", false},
			"close-issue-reason":              {"close-issue-reason", false},
			"close-pr-label":                  {"close-pr-label", false},
			"close-pr-message":                {"close-pr-message", false},
			"days-before-close":               {"days-before-close", false},
			"days-before-issue-close":         {"days-before-issue-close", false},
			"days-before-issue-stale":         {"days-before-issue-stale", false},
			"days-before-pr-close":            {"days-before-pr-close", false},
			"days-before-pr-stale":            {"days-before-pr-stale", false},
			"days-before-stale":               {"days-before-stale", false},
			"debug-only":                      {"debug-only", false},
			"delete-branch":                   {"delete-branch", false},
			"enable-statistics":               {"enable-statistics", false},
			"exempt-all-assignees":            {"exempt-all-assignees", false},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false},
			"exempt-all-milestones":           {"exempt-all-milestones", false},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false},
			"exempt-assignees":                {"exempt-assignees", false},
			"exempt-draft-pr":                 {"exempt-draft-pr", false},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false},
			"exempt-issue-labels":             {"exempt-issue-labels", false},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false},
			"exempt-milestones":               {"exempt-milestones", false},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false},
			"exempt-pr-labels":                {"exempt-pr-labels", false},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false},
			"ignore-issue-updates":            {"ignore-issue-updates", false},
			"ignore-pr-updates":               {"ignore-pr-updates", false},
			"ignore-updates":                  {"ignore-updates", false},
			"include-only-assigned":           {"include-only-assigned", false},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false},
			"only-issue-labels":               {"only-issue-labels", false},
			"only-labels":                     {"only-labels", false},
			"only-pr-labels":                  {"only-pr-labels", false},
			"operations-per-run":              {"operations-per-run", false},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false},
			"repo-token":                      {"repo-token", false},
			"stale-issue-label":               {"stale-issue-label", false},
			"stale-issue-message":             {"stale-issue-message", false},
			"stale-pr-label":                  {"stale-pr-label", false},
			"stale-pr-message":                {"stale-pr-message", false},
			"start-date":                      {"start-date", false},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/stale@v7": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false},
			"any-of-labels":                   {"any-of-labels", false},
			"any-of-pr-labels":                {"any-of-pr-labels", false},
			"ascending":                       {"ascending", false},
			"close-issue-label":               {"close-issue-label", false},
			"close-issue-message":             {"close-issue-message", false},
			"close-issue-reason":              {"close-issue-reason", false},
			"close-pr-label":                  {"close-pr-label", false},
			"close-pr-message":                {"close-pr-message", false},
			"days-before-close":               {"days-before-close", false},
			"days-before-issue-close":         {"days-before-issue-close", false},
			"days-before-issue-stale":         {"days-before-issue-stale", false},
			"days-before-pr-close":            {"days-before-pr-close", false},
			"days-before-pr-stale":            {"days-before-pr-stale", false},
			"days-before-stale":               {"days-before-stale", false},
			"debug-only":                      {"debug-only", false},
			"delete-branch":                   {"delete-branch", false},
			"enable-statistics":               {"enable-statistics", false},
			"exempt-all-assignees":            {"exempt-all-assignees", false},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false},
			"exempt-all-milestones":           {"exempt-all-milestones", false},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false},
			"exempt-assignees":                {"exempt-assignees", false},
			"exempt-draft-pr":                 {"exempt-draft-pr", false},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false},
			"exempt-issue-labels":             {"exempt-issue-labels", false},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false},
			"exempt-milestones":               {"exempt-milestones", false},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false},
			"exempt-pr-labels":                {"exempt-pr-labels", false},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false},
			"ignore-issue-updates":            {"ignore-issue-updates", false},
			"ignore-pr-updates":               {"ignore-pr-updates", false},
			"ignore-updates":                  {"ignore-updates", false},
			"include-only-assigned":           {"include-only-assigned", false},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false},
			"only-issue-labels":               {"only-issue-labels", false},
			"only-labels":                     {"only-labels", false},
			"only-pr-labels":                  {"only-pr-labels", false},
			"operations-per-run":              {"operations-per-run", false},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false},
			"repo-token":                      {"repo-token", false},
			"stale-issue-label":               {"stale-issue-label", false},
			"stale-issue-message":             {"stale-issue-message", false},
			"stale-pr-label":                  {"stale-pr-label", false},
			"stale-pr-message":                {"stale-pr-message", false},
			"start-date":                      {"start-date", false},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/stale@v8": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false},
			"any-of-labels":                   {"any-of-labels", false},
			"any-of-pr-labels":                {"any-of-pr-labels", false},
			"ascending":                       {"ascending", false},
			"close-issue-label":               {"close-issue-label", false},
			"close-issue-message":             {"close-issue-message", false},
			"close-issue-reason":              {"close-issue-reason", false},
			"close-pr-label":                  {"close-pr-label", false},
			"close-pr-message":                {"close-pr-message", false},
			"days-before-close":               {"days-before-close", false},
			"days-before-issue-close":         {"days-before-issue-close", false},
			"days-before-issue-stale":         {"days-before-issue-stale", false},
			"days-before-pr-close":            {"days-before-pr-close", false},
			"days-before-pr-stale":            {"days-before-pr-stale", false},
			"days-before-stale":               {"days-before-stale", false},
			"debug-only":                      {"debug-only", false},
			"delete-branch":                   {"delete-branch", false},
			"enable-statistics":               {"enable-statistics", false},
			"exempt-all-assignees":            {"exempt-all-assignees", false},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false},
			"exempt-all-milestones":           {"exempt-all-milestones", false},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false},
			"exempt-assignees":                {"exempt-assignees", false},
			"exempt-draft-pr":                 {"exempt-draft-pr", false},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false},
			"exempt-issue-labels":             {"exempt-issue-labels", false},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false},
			"exempt-milestones":               {"exempt-milestones", false},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false},
			"exempt-pr-labels":                {"exempt-pr-labels", false},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false},
			"ignore-issue-updates":            {"ignore-issue-updates", false},
			"ignore-pr-updates":               {"ignore-pr-updates", false},
			"ignore-updates":                  {"ignore-updates", false},
			"include-only-assigned":           {"include-only-assigned", false},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false},
			"labels-to-remove-when-stale":     {"labels-to-remove-when-stale", false},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false},
			"only-issue-labels":               {"only-issue-labels", false},
			"only-labels":                     {"only-labels", false},
			"only-pr-labels":                  {"only-pr-labels", false},
			"operations-per-run":              {"operations-per-run", false},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false},
			"repo-token":                      {"repo-token", false},
			"stale-issue-label":               {"stale-issue-label", false},
			"stale-issue-message":             {"stale-issue-message", false},
			"stale-pr-label":                  {"stale-pr-label", false},
			"stale-pr-message":                {"stale-pr-message", false},
			"start-date":                      {"start-date", false},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/upload-artifact@v1": {
		Name: "Upload a Build Artifact",
		Inputs: ActionMetadataInputs{
			"name": {"name", true},
			"path": {"path", true},
		},
	},
	"actions/upload-artifact@v2": {
		Name: "Upload a Build Artifact",
		Inputs: ActionMetadataInputs{
			"if-no-files-found": {"if-no-files-found", false},
			"name":              {"name", false},
			"path":              {"path", true},
			"retention-days":    {"retention-days", false},
		},
	},
	"actions/upload-artifact@v3": {
		Name: "Upload a Build Artifact",
		Inputs: ActionMetadataInputs{
			"if-no-files-found": {"if-no-files-found", false},
			"name":              {"name", false},
			"path":              {"path", true},
			"retention-days":    {"retention-days", false},
		},
	},
	"actions/upload-pages-artifact@v1": {
		Name: "Upload GitHub Pages artifact",
		Inputs: ActionMetadataInputs{
			"name":           {"name", false},
			"path":           {"path", false},
			"retention-days": {"retention-days", false},
		},
	},
	"actions/upload-pages-artifact@v2": {
		Name: "Upload GitHub Pages artifact",
		Inputs: ActionMetadataInputs{
			"name":           {"name", false},
			"path":           {"path", false},
			"retention-days": {"retention-days", false},
		},
	},
	"aws-actions/configure-aws-credentials@v1": {
		Name: "\"Configure AWS Credentials\" Action For GitHub Actions",
		Inputs: ActionMetadataInputs{
			"audience":                  {"audience", false},
			"aws-access-key-id":         {"aws-access-key-id", false},
			"aws-region":                {"aws-region", true},
			"aws-secret-access-key":     {"aws-secret-access-key", false},
			"aws-session-token":         {"aws-session-token", false},
			"mask-aws-account-id":       {"mask-aws-account-id", false},
			"role-duration-seconds":     {"role-duration-seconds", false},
			"role-external-id":          {"role-external-id", false},
			"role-session-name":         {"role-session-name", false},
			"role-skip-session-tagging": {"role-skip-session-tagging", false},
			"role-to-assume":            {"role-to-assume", false},
			"web-identity-token-file":   {"web-identity-token-file", false},
		},
		Outputs: ActionMetadataOutputs{
			"aws-account-id": {"aws-account-id"},
		},
	},
	"aws-actions/configure-aws-credentials@v2": {
		Name: "Configure AWS Credentials For GitHub Actions",
		Inputs: ActionMetadataInputs{
			"audience":                  {"audience", false},
			"aws-access-key-id":         {"aws-access-key-id", false},
			"aws-region":                {"aws-region", true},
			"aws-secret-access-key":     {"aws-secret-access-key", false},
			"aws-session-token":         {"aws-session-token", false},
			"http-proxy":                {"http-proxy", false},
			"inline-session-policy":     {"inline-session-policy", false},
			"managed-session-policies":  {"managed-session-policies", false},
			"mask-aws-account-id":       {"mask-aws-account-id", false},
			"role-chaining":             {"role-chaining", false},
			"role-duration-seconds":     {"role-duration-seconds", false},
			"role-external-id":          {"role-external-id", false},
			"role-session-name":         {"role-session-name", false},
			"role-skip-session-tagging": {"role-skip-session-tagging", false},
			"role-to-assume":            {"role-to-assume", false},
			"web-identity-token-file":   {"web-identity-token-file", false},
		},
		Outputs: ActionMetadataOutputs{
			"aws-account-id": {"aws-account-id"},
		},
	},
	"aws-actions/configure-aws-credentials@v3": {
		Name: "\"Configure AWS Credentials\" Action for GitHub Actions",
		Inputs: ActionMetadataInputs{
			"audience":                      {"audience", false},
			"aws-access-key-id":             {"aws-access-key-id", false},
			"aws-region":                    {"aws-region", true},
			"aws-secret-access-key":         {"aws-secret-access-key", false},
			"aws-session-token":             {"aws-session-token", false},
			"disable-retry":                 {"disable-retry", false},
			"http-proxy":                    {"http-proxy", false},
			"inline-session-policy":         {"inline-session-policy", false},
			"managed-session-policies":      {"managed-session-policies", false},
			"mask-aws-account-id":           {"mask-aws-account-id", false},
			"output-credentials":            {"output-credentials", false},
			"retry-max-attempts":            {"retry-max-attempts", false},
			"role-chaining":                 {"role-chaining", false},
			"role-duration-seconds":         {"role-duration-seconds", false},
			"role-external-id":              {"role-external-id", false},
			"role-session-name":             {"role-session-name", false},
			"role-skip-session-tagging":     {"role-skip-session-tagging", false},
			"role-to-assume":                {"role-to-assume", false},
			"special-characters-workaround": {"special-characters-workaround", false},
			"unset-current-credentials":     {"unset-current-credentials", false},
			"web-identity-token-file":       {"web-identity-token-file", false},
		},
		Outputs: ActionMetadataOutputs{
			"aws-access-key-id":     {"aws-access-key-id"},
			"aws-account-id":        {"aws-account-id"},
			"aws-secret-access-key": {"aws-secret-access-key"},
			"aws-session-token":     {"aws-session-token"},
		},
	},
	"aws-actions/configure-aws-credentials@v4": {
		Name: "\"Configure AWS Credentials\" Action for GitHub Actions",
		Inputs: ActionMetadataInputs{
			"audience":                      {"audience", false},
			"aws-access-key-id":             {"aws-access-key-id", false},
			"aws-region":                    {"aws-region", true},
			"aws-secret-access-key":         {"aws-secret-access-key", false},
			"aws-session-token":             {"aws-session-token", false},
			"disable-retry":                 {"disable-retry", false},
			"http-proxy":                    {"http-proxy", false},
			"inline-session-policy":         {"inline-session-policy", false},
			"managed-session-policies":      {"managed-session-policies", false},
			"mask-aws-account-id":           {"mask-aws-account-id", false},
			"output-credentials":            {"output-credentials", false},
			"retry-max-attempts":            {"retry-max-attempts", false},
			"role-chaining":                 {"role-chaining", false},
			"role-duration-seconds":         {"role-duration-seconds", false},
			"role-external-id":              {"role-external-id", false},
			"role-session-name":             {"role-session-name", false},
			"role-skip-session-tagging":     {"role-skip-session-tagging", false},
			"role-to-assume":                {"role-to-assume", false},
			"special-characters-workaround": {"special-characters-workaround", false},
			"unset-current-credentials":     {"unset-current-credentials", false},
			"web-identity-token-file":       {"web-identity-token-file", false},
		},
		Outputs: ActionMetadataOutputs{
			"aws-access-key-id":     {"aws-access-key-id"},
			"aws-account-id":        {"aws-account-id"},
			"aws-secret-access-key": {"aws-secret-access-key"},
			"aws-session-token":     {"aws-session-token"},
		},
	},
	"azure/aks-set-context@v1": {
		Name: "Azure Kubernetes set context",
		Inputs: ActionMetadataInputs{
			"cluster-name":   {"cluster-name", false},
			"creds":          {"creds", false},
			"resource-group": {"resource-group", false},
		},
	},
	"azure/aks-set-context@v2": {
		Name: "Azure Kubernetes set context",
		Inputs: ActionMetadataInputs{
			"admin":          {"admin", false},
			"cluster-name":   {"cluster-name", true},
			"resource-group": {"resource-group", true},
			"subscription":   {"subscription", false},
			"use-kubelogin":  {"use-kubelogin", false},
		},
	},
	"azure/aks-set-context@v3": {
		Name: "Azure Kubernetes set context",
		Inputs: ActionMetadataInputs{
			"admin":          {"admin", false},
			"cluster-name":   {"cluster-name", true},
			"resource-group": {"resource-group", true},
			"subscription":   {"subscription", false},
			"use-kubelogin":  {"use-kubelogin", false},
		},
	},
	"azure/login@v1": {
		Name: "Azure Login",
		Inputs: ActionMetadataInputs{
			"allow-no-subscriptions": {"allow-no-subscriptions", false},
			"audience":               {"audience", false},
			"client-id":              {"client-id", false},
			"creds":                  {"creds", false},
			"enable-azpssession":     {"enable-AzPSSession", false},
			"environment":            {"environment", false},
			"subscription-id":        {"subscription-id", false},
			"tenant-id":              {"tenant-id", false},
		},
	},
	"bahmutov/npm-install@v1": {
		Name: "NPM or Yarn install with caching",
		Inputs: ActionMetadataInputs{
			"install-command":   {"install-command", false},
			"uselockfile":       {"useLockFile", false},
			"userollingcache":   {"useRollingCache", false},
			"working-directory": {"working-directory", false},
		},
	},
	"codecov/codecov-action@v1": {
		Name: "Codecov",
		Inputs: ActionMetadataInputs{
			"aws_curl_args":          {"aws_curl_args", false},
			"codecov_curl_args":      {"codecov_curl_args", false},
			"commit_parent":          {"commit_parent", false},
			"directory":              {"directory", false},
			"env_vars":               {"env_vars", false},
			"fail_ci_if_error":       {"fail_ci_if_error", false},
			"file":                   {"file", false},
			"files":                  {"files", false},
			"flags":                  {"flags", false},
			"functionalities":        {"functionalities", false},
			"gcov_args":              {"gcov_args", false},
			"gcov_executable":        {"gcov_executable", false},
			"gcov_path_exclude":      {"gcov_path_exclude", false},
			"gcov_path_include":      {"gcov_path_include", false},
			"gcov_prefix":            {"gcov_prefix", false},
			"gcov_root_dir":          {"gcov_root_dir", false},
			"move_coverage_to_trash": {"move_coverage_to_trash", false},
			"name":                   {"name", false},
			"network_filter":         {"network_filter", false},
			"override_branch":        {"override_branch", false},
			"override_build":         {"override_build", false},
			"override_commit":        {"override_commit", false},
			"override_pr":            {"override_pr", false},
			"override_tag":           {"override_tag", false},
			"path_to_write_report":   {"path_to_write_report", false},
			"root_dir":               {"root_dir", false},
			"token":                  {"token", false},
			"verbose":                {"verbose", false},
			"working-directory":      {"working-directory", false},
			"xcode_derived_data":     {"xcode_derived_data", false},
			"xcode_package":          {"xcode_package", false},
		},
	},
	"codecov/codecov-action@v2": {
		Name: "Codecov",
		Inputs: ActionMetadataInputs{
			"commit_parent":          {"commit_parent", false},
			"directory":              {"directory", false},
			"dry_run":                {"dry_run", false},
			"env_vars":               {"env_vars", false},
			"fail_ci_if_error":       {"fail_ci_if_error", false},
			"file":                   {"file", false},
			"files":                  {"files", false},
			"flags":                  {"flags", false},
			"functionalities":        {"functionalities", false},
			"move_coverage_to_trash": {"move_coverage_to_trash", false},
			"name":                   {"name", false},
			"os":                     {"os", false},
			"override_branch":        {"override_branch", false},
			"override_build":         {"override_build", false},
			"override_commit":        {"override_commit", false},
			"override_pr":            {"override_pr", false},
			"override_tag":           {"override_tag", false},
			"root_dir":               {"root_dir", false},
			"slug":                   {"slug", false},
			"token":                  {"token", false},
			"url":                    {"url", false},
			"verbose":                {"verbose", false},
			"version":                {"version", false},
			"working-directory":      {"working-directory", false},
		},
	},
	"codecov/codecov-action@v3": {
		Name: "Codecov",
		Inputs: ActionMetadataInputs{
			"commit_parent":          {"commit_parent", false},
			"directory":              {"directory", false},
			"dry_run":                {"dry_run", false},
			"env_vars":               {"env_vars", false},
			"fail_ci_if_error":       {"fail_ci_if_error", false},
			"file":                   {"file", false},
			"files":                  {"files", false},
			"flags":                  {"flags", false},
			"full_report":            {"full_report", false},
			"functionalities":        {"functionalities", false},
			"gcov":                   {"gcov", false},
			"gcov_args":              {"gcov_args", false},
			"gcov_executable":        {"gcov_executable", false},
			"gcov_ignore":            {"gcov_ignore", false},
			"gcov_include":           {"gcov_include", false},
			"move_coverage_to_trash": {"move_coverage_to_trash", false},
			"name":                   {"name", false},
			"network_filter":         {"network_filter", false},
			"network_prefix":         {"network_prefix", false},
			"os":                     {"os", false},
			"override_branch":        {"override_branch", false},
			"override_build":         {"override_build", false},
			"override_commit":        {"override_commit", false},
			"override_pr":            {"override_pr", false},
			"override_tag":           {"override_tag", false},
			"root_dir":               {"root_dir", false},
			"slug":                   {"slug", false},
			"swift":                  {"swift", false},
			"swift_project":          {"swift_project", false},
			"token":                  {"token", false},
			"upstream_proxy":         {"upstream_proxy", false},
			"url":                    {"url", false},
			"verbose":                {"verbose", false},
			"version":                {"version", false},
			"working-directory":      {"working-directory", false},
			"xcode":                  {"xcode", false},
			"xcode_archive_path":     {"xcode_archive_path", false},
			"xtra_args":              {"xtra_args", false},
		},
	},
	"dawidd6/action-download-artifact@v2": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"branch":               {"branch", false},
			"check_artifacts":      {"check_artifacts", false},
			"commit":               {"commit", false},
			"dry_run":              {"dry_run", false},
			"event":                {"event", false},
			"github_token":         {"github_token", false},
			"if_no_artifact_found": {"if_no_artifact_found", false},
			"name":                 {"name", false},
			"name_is_regexp":       {"name_is_regexp", false},
			"path":                 {"path", false},
			"pr":                   {"pr", false},
			"repo":                 {"repo", false},
			"run_id":               {"run_id", false},
			"run_number":           {"run_number", false},
			"search_artifacts":     {"search_artifacts", false},
			"skip_unpack":          {"skip_unpack", false},
			"workflow":             {"workflow", false},
			"workflow_conclusion":  {"workflow_conclusion", false},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-send-mail@v1": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"body":           {"body", true},
			"content_type":   {"content_type", false},
			"from":           {"from", true},
			"password":       {"password", true},
			"server_address": {"server_address", true},
			"server_port":    {"server_port", true},
			"subject":        {"subject", true},
			"to":             {"to", true},
			"username":       {"username", true},
		},
	},
	"dawidd6/action-send-mail@v2": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"attachments":      {"attachments", false},
			"bcc":              {"bcc", false},
			"body":             {"body", true},
			"cc":               {"cc", false},
			"content_type":     {"content_type", false},
			"convert_markdown": {"convert_markdown", false},
			"from":             {"from", true},
			"ignore_cert":      {"ignore_cert", false},
			"password":         {"password", true},
			"reply_to":         {"reply_to", false},
			"server_address":   {"server_address", true},
			"server_port":      {"server_port", true},
			"subject":          {"subject", true},
			"to":               {"to", true},
			"username":         {"username", true},
		},
	},
	"dawidd6/action-send-mail@v3": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"attachments":      {"attachments", false},
			"bcc":              {"bcc", false},
			"body":             {"body", false},
			"cc":               {"cc", false},
			"connection_url":   {"connection_url", false},
			"convert_markdown": {"convert_markdown", false},
			"from":             {"from", true},
			"html_body":        {"html_body", false},
			"ignore_cert":      {"ignore_cert", false},
			"in_reply_to":      {"in_reply_to", false},
			"password":         {"password", false},
			"priority":         {"priority", false},
			"reply_to":         {"reply_to", false},
			"secure":           {"secure", false},
			"server_address":   {"server_address", false},
			"server_port":      {"server_port", false},
			"subject":          {"subject", true},
			"to":               {"to", false},
			"username":         {"username", false},
		},
	},
	"dessant/lock-threads@v2": {
		Name: "Lock Threads",
		Inputs: ActionMetadataInputs{
			"github-token":                 {"github-token", false},
			"issue-exclude-created-before": {"issue-exclude-created-before", false},
			"issue-exclude-labels":         {"issue-exclude-labels", false},
			"issue-lock-comment":           {"issue-lock-comment", false},
			"issue-lock-inactive-days":     {"issue-lock-inactive-days", false},
			"issue-lock-labels":            {"issue-lock-labels", false},
			"issue-lock-reason":            {"issue-lock-reason", false},
			"pr-exclude-created-before":    {"pr-exclude-created-before", false},
			"pr-exclude-labels":            {"pr-exclude-labels", false},
			"pr-lock-comment":              {"pr-lock-comment", false},
			"pr-lock-inactive-days":        {"pr-lock-inactive-days", false},
			"pr-lock-labels":               {"pr-lock-labels", false},
			"pr-lock-reason":               {"pr-lock-reason", false},
			"process-only":                 {"process-only", false},
		},
		Outputs: ActionMetadataOutputs{
			"issues": {"issues"},
			"prs":    {"prs"},
		},
	},
	"dessant/lock-threads@v3": {
		Name: "Lock Threads",
		Inputs: ActionMetadataInputs{
			"add-issue-labels":              {"add-issue-labels", false},
			"add-pr-labels":                 {"add-pr-labels", false},
			"exclude-any-issue-labels":      {"exclude-any-issue-labels", false},
			"exclude-any-pr-labels":         {"exclude-any-pr-labels", false},
			"exclude-issue-closed-after":    {"exclude-issue-closed-after", false},
			"exclude-issue-closed-before":   {"exclude-issue-closed-before", false},
			"exclude-issue-closed-between":  {"exclude-issue-closed-between", false},
			"exclude-issue-created-after":   {"exclude-issue-created-after", false},
			"exclude-issue-created-before":  {"exclude-issue-created-before", false},
			"exclude-issue-created-between": {"exclude-issue-created-between", false},
			"exclude-pr-closed-after":       {"exclude-pr-closed-after", false},
			"exclude-pr-closed-before":      {"exclude-pr-closed-before", false},
			"exclude-pr-closed-between":     {"exclude-pr-closed-between", false},
			"exclude-pr-created-after":      {"exclude-pr-created-after", false},
			"exclude-pr-created-before":     {"exclude-pr-created-before", false},
			"exclude-pr-created-between":    {"exclude-pr-created-between", false},
			"github-token":                  {"github-token", false},
			"include-all-issue-labels":      {"include-all-issue-labels", false},
			"include-all-pr-labels":         {"include-all-pr-labels", false},
			"include-any-issue-labels":      {"include-any-issue-labels", false},
			"include-any-pr-labels":         {"include-any-pr-labels", false},
			"issue-comment":                 {"issue-comment", false},
			"issue-inactive-days":           {"issue-inactive-days", false},
			"issue-lock-reason":             {"issue-lock-reason", false},
			"log-output":                    {"log-output", false},
			"pr-comment":                    {"pr-comment", false},
			"pr-inactive-days":              {"pr-inactive-days", false},
			"pr-lock-reason":                {"pr-lock-reason", false},
			"process-only":                  {"process-only", false},
			"remove-issue-labels":           {"remove-issue-labels", false},
			"remove-pr-labels":              {"remove-pr-labels", false},
		},
		Outputs: ActionMetadataOutputs{
			"issues": {"issues"},
			"prs":    {"prs"},
		},
	},
	"dessant/lock-threads@v4": {
		Name: "Lock Threads",
		Inputs: ActionMetadataInputs{
			"add-issue-labels":              {"add-issue-labels", false},
			"add-pr-labels":                 {"add-pr-labels", false},
			"exclude-any-issue-labels":      {"exclude-any-issue-labels", false},
			"exclude-any-pr-labels":         {"exclude-any-pr-labels", false},
			"exclude-issue-closed-after":    {"exclude-issue-closed-after", false},
			"exclude-issue-closed-before":   {"exclude-issue-closed-before", false},
			"exclude-issue-closed-between":  {"exclude-issue-closed-between", false},
			"exclude-issue-created-after":   {"exclude-issue-created-after", false},
			"exclude-issue-created-before":  {"exclude-issue-created-before", false},
			"exclude-issue-created-between": {"exclude-issue-created-between", false},
			"exclude-pr-closed-after":       {"exclude-pr-closed-after", false},
			"exclude-pr-closed-before":      {"exclude-pr-closed-before", false},
			"exclude-pr-closed-between":     {"exclude-pr-closed-between", false},
			"exclude-pr-created-after":      {"exclude-pr-created-after", false},
			"exclude-pr-created-before":     {"exclude-pr-created-before", false},
			"exclude-pr-created-between":    {"exclude-pr-created-between", false},
			"github-token":                  {"github-token", false},
			"include-all-issue-labels":      {"include-all-issue-labels", false},
			"include-all-pr-labels":         {"include-all-pr-labels", false},
			"include-any-issue-labels":      {"include-any-issue-labels", false},
			"include-any-pr-labels":         {"include-any-pr-labels", false},
			"issue-comment":                 {"issue-comment", false},
			"issue-inactive-days":           {"issue-inactive-days", false},
			"issue-lock-reason":             {"issue-lock-reason", false},
			"log-output":                    {"log-output", false},
			"pr-comment":                    {"pr-comment", false},
			"pr-inactive-days":              {"pr-inactive-days", false},
			"pr-lock-reason":                {"pr-lock-reason", false},
			"process-only":                  {"process-only", false},
			"remove-issue-labels":           {"remove-issue-labels", false},
			"remove-pr-labels":              {"remove-pr-labels", false},
		},
		Outputs: ActionMetadataOutputs{
			"issues": {"issues"},
			"prs":    {"prs"},
		},
	},
	"docker/build-push-action@v1": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add_git_labels": {"add_git_labels", false},
			"always_pull":    {"always_pull", false},
			"build_args":     {"build_args", false},
			"cache_froms":    {"cache_froms", false},
			"dockerfile":     {"dockerfile", false},
			"labels":         {"labels", false},
			"password":       {"password", false},
			"path":           {"path", false},
			"push":           {"push", false},
			"registry":       {"registry", false},
			"repository":     {"repository", true},
			"tag_with_ref":   {"tag_with_ref", false},
			"tag_with_sha":   {"tag_with_sha", false},
			"tags":           {"tags", false},
			"target":         {"target", false},
			"username":       {"username", false},
		},
	},
	"docker/build-push-action@v2": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add-hosts":      {"add-hosts", false},
			"allow":          {"allow", false},
			"build-args":     {"build-args", false},
			"build-contexts": {"build-contexts", false},
			"builder":        {"builder", false},
			"cache-from":     {"cache-from", false},
			"cache-to":       {"cache-to", false},
			"cgroup-parent":  {"cgroup-parent", false},
			"context":        {"context", false},
			"file":           {"file", false},
			"github-token":   {"github-token", false},
			"labels":         {"labels", false},
			"load":           {"load", false},
			"network":        {"network", false},
			"no-cache":       {"no-cache", false},
			"outputs":        {"outputs", false},
			"platforms":      {"platforms", false},
			"pull":           {"pull", false},
			"push":           {"push", false},
			"secret-files":   {"secret-files", false},
			"secrets":        {"secrets", false},
			"shm-size":       {"shm-size", false},
			"ssh":            {"ssh", false},
			"tags":           {"tags", false},
			"target":         {"target", false},
			"ulimit":         {"ulimit", false},
		},
		Outputs: ActionMetadataOutputs{
			"digest":   {"digest"},
			"imageid":  {"imageid"},
			"metadata": {"metadata"},
		},
	},
	"docker/build-push-action@v3": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add-hosts":        {"add-hosts", false},
			"allow":            {"allow", false},
			"attests":          {"attests", false},
			"build-args":       {"build-args", false},
			"build-contexts":   {"build-contexts", false},
			"builder":          {"builder", false},
			"cache-from":       {"cache-from", false},
			"cache-to":         {"cache-to", false},
			"cgroup-parent":    {"cgroup-parent", false},
			"context":          {"context", false},
			"file":             {"file", false},
			"github-token":     {"github-token", false},
			"labels":           {"labels", false},
			"load":             {"load", false},
			"network":          {"network", false},
			"no-cache":         {"no-cache", false},
			"no-cache-filters": {"no-cache-filters", false},
			"outputs":          {"outputs", false},
			"platforms":        {"platforms", false},
			"provenance":       {"provenance", false},
			"pull":             {"pull", false},
			"push":             {"push", false},
			"sbom":             {"sbom", false},
			"secret-files":     {"secret-files", false},
			"secrets":          {"secrets", false},
			"shm-size":         {"shm-size", false},
			"ssh":              {"ssh", false},
			"tags":             {"tags", false},
			"target":           {"target", false},
			"ulimit":           {"ulimit", false},
		},
		Outputs: ActionMetadataOutputs{
			"digest":   {"digest"},
			"imageid":  {"imageid"},
			"metadata": {"metadata"},
		},
	},
	"docker/build-push-action@v4": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add-hosts":        {"add-hosts", false},
			"allow":            {"allow", false},
			"attests":          {"attests", false},
			"build-args":       {"build-args", false},
			"build-contexts":   {"build-contexts", false},
			"builder":          {"builder", false},
			"cache-from":       {"cache-from", false},
			"cache-to":         {"cache-to", false},
			"cgroup-parent":    {"cgroup-parent", false},
			"context":          {"context", false},
			"file":             {"file", false},
			"github-token":     {"github-token", false},
			"labels":           {"labels", false},
			"load":             {"load", false},
			"network":          {"network", false},
			"no-cache":         {"no-cache", false},
			"no-cache-filters": {"no-cache-filters", false},
			"outputs":          {"outputs", false},
			"platforms":        {"platforms", false},
			"provenance":       {"provenance", false},
			"pull":             {"pull", false},
			"push":             {"push", false},
			"sbom":             {"sbom", false},
			"secret-files":     {"secret-files", false},
			"secrets":          {"secrets", false},
			"shm-size":         {"shm-size", false},
			"ssh":              {"ssh", false},
			"tags":             {"tags", false},
			"target":           {"target", false},
			"ulimit":           {"ulimit", false},
		},
		Outputs: ActionMetadataOutputs{
			"digest":   {"digest"},
			"imageid":  {"imageid"},
			"metadata": {"metadata"},
		},
	},
	"docker/build-push-action@v5": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add-hosts":        {"add-hosts", false},
			"allow":            {"allow", false},
			"attests":          {"attests", false},
			"build-args":       {"build-args", false},
			"build-contexts":   {"build-contexts", false},
			"builder":          {"builder", false},
			"cache-from":       {"cache-from", false},
			"cache-to":         {"cache-to", false},
			"cgroup-parent":    {"cgroup-parent", false},
			"context":          {"context", false},
			"file":             {"file", false},
			"github-token":     {"github-token", false},
			"labels":           {"labels", false},
			"load":             {"load", false},
			"network":          {"network", false},
			"no-cache":         {"no-cache", false},
			"no-cache-filters": {"no-cache-filters", false},
			"outputs":          {"outputs", false},
			"platforms":        {"platforms", false},
			"provenance":       {"provenance", false},
			"pull":             {"pull", false},
			"push":             {"push", false},
			"sbom":             {"sbom", false},
			"secret-files":     {"secret-files", false},
			"secrets":          {"secrets", false},
			"shm-size":         {"shm-size", false},
			"ssh":              {"ssh", false},
			"tags":             {"tags", false},
			"target":           {"target", false},
			"ulimit":           {"ulimit", false},
		},
		Outputs: ActionMetadataOutputs{
			"digest":   {"digest"},
			"imageid":  {"imageid"},
			"metadata": {"metadata"},
		},
	},
	"docker/login-action@v1": {
		Name: "Docker Login",
		Inputs: ActionMetadataInputs{
			"ecr":      {"ecr", false},
			"logout":   {"logout", false},
			"password": {"password", false},
			"registry": {"registry", false},
			"username": {"username", false},
		},
	},
	"docker/login-action@v2": {
		Name: "Docker Login",
		Inputs: ActionMetadataInputs{
			"ecr":      {"ecr", false},
			"logout":   {"logout", false},
			"password": {"password", false},
			"registry": {"registry", false},
			"username": {"username", false},
		},
	},
	"docker/login-action@v3": {
		Name: "Docker Login",
		Inputs: ActionMetadataInputs{
			"ecr":      {"ecr", false},
			"logout":   {"logout", false},
			"password": {"password", false},
			"registry": {"registry", false},
			"username": {"username", false},
		},
	},
	"docker/metadata-action@v1": {
		Name: "Docker Meta",
		Inputs: ActionMetadataInputs{
			"github-token":     {"github-token", false},
			"images":           {"images", true},
			"label-custom":     {"label-custom", false},
			"sep-labels":       {"sep-labels", false},
			"sep-tags":         {"sep-tags", false},
			"tag-custom":       {"tag-custom", false},
			"tag-custom-only":  {"tag-custom-only", false},
			"tag-edge":         {"tag-edge", false},
			"tag-edge-branch":  {"tag-edge-branch", false},
			"tag-latest":       {"tag-latest", false},
			"tag-match":        {"tag-match", false},
			"tag-match-group":  {"tag-match-group", false},
			"tag-match-latest": {"tag-match-latest", false},
			"tag-schedule":     {"tag-schedule", false},
			"tag-semver":       {"tag-semver", false},
			"tag-sha":          {"tag-sha", false},
		},
		Outputs: ActionMetadataOutputs{
			"bake-file": {"bake-file"},
			"labels":    {"labels"},
			"tags":      {"tags"},
			"version":   {"version"},
		},
	},
	"docker/metadata-action@v2": {
		Name: "Docker Meta",
		Inputs: ActionMetadataInputs{
			"bake-target":  {"bake-target", false},
			"flavor":       {"flavor", false},
			"github-token": {"github-token", false},
			"images":       {"images", true},
			"labels":       {"labels", false},
			"sep-labels":   {"sep-labels", false},
			"sep-tags":     {"sep-tags", false},
			"tags":         {"tags", false},
		},
		Outputs: ActionMetadataOutputs{
			"bake-file": {"bake-file"},
			"labels":    {"labels"},
			"tags":      {"tags"},
			"version":   {"version"},
		},
	},
	"docker/metadata-action@v3": {
		Name: "Docker Metadata action",
		Inputs: ActionMetadataInputs{
			"bake-target":  {"bake-target", false},
			"flavor":       {"flavor", false},
			"github-token": {"github-token", false},
			"images":       {"images", true},
			"labels":       {"labels", false},
			"sep-labels":   {"sep-labels", false},
			"sep-tags":     {"sep-tags", false},
			"tags":         {"tags", false},
		},
		Outputs: ActionMetadataOutputs{
			"bake-file": {"bake-file"},
			"json":      {"json"},
			"labels":    {"labels"},
			"tags":      {"tags"},
			"version":   {"version"},
		},
	},
	"docker/metadata-action@v4": {
		Name: "Docker Metadata action",
		Inputs: ActionMetadataInputs{
			"bake-target":  {"bake-target", false},
			"context":      {"context", false},
			"flavor":       {"flavor", false},
			"github-token": {"github-token", false},
			"images":       {"images", true},
			"labels":       {"labels", false},
			"sep-labels":   {"sep-labels", false},
			"sep-tags":     {"sep-tags", false},
			"tags":         {"tags", false},
		},
		Outputs: ActionMetadataOutputs{
			"bake-file": {"bake-file"},
			"json":      {"json"},
			"labels":    {"labels"},
			"tags":      {"tags"},
			"version":   {"version"},
		},
	},
	"docker/metadata-action@v5": {
		Name: "Docker Metadata action",
		Inputs: ActionMetadataInputs{
			"bake-target":  {"bake-target", false},
			"context":      {"context", false},
			"flavor":       {"flavor", false},
			"github-token": {"github-token", false},
			"images":       {"images", true},
			"labels":       {"labels", false},
			"sep-labels":   {"sep-labels", false},
			"sep-tags":     {"sep-tags", false},
			"tags":         {"tags", false},
		},
		Outputs: ActionMetadataOutputs{
			"bake-file": {"bake-file"},
			"json":      {"json"},
			"labels":    {"labels"},
			"tags":      {"tags"},
			"version":   {"version"},
		},
	},
	"docker/setup-buildx-action@v1": {
		Name: "Docker Setup Buildx",
		Inputs: ActionMetadataInputs{
			"buildkitd-flags": {"buildkitd-flags", false},
			"config":          {"config", false},
			"config-inline":   {"config-inline", false},
			"driver":          {"driver", false},
			"driver-opts":     {"driver-opts", false},
			"endpoint":        {"endpoint", false},
			"install":         {"install", false},
			"use":             {"use", false},
			"version":         {"version", false},
		},
		Outputs: ActionMetadataOutputs{
			"driver":    {"driver"},
			"endpoint":  {"endpoint"},
			"flags":     {"flags"},
			"name":      {"name"},
			"platforms": {"platforms"},
			"status":    {"status"},
		},
	},
	"docker/setup-buildx-action@v2": {
		Name: "Docker Setup Buildx",
		Inputs: ActionMetadataInputs{
			"append":          {"append", false},
			"buildkitd-flags": {"buildkitd-flags", false},
			"cleanup":         {"cleanup", false},
			"config":          {"config", false},
			"config-inline":   {"config-inline", false},
			"driver":          {"driver", false},
			"driver-opts":     {"driver-opts", false},
			"endpoint":        {"endpoint", false},
			"install":         {"install", false},
			"platforms":       {"platforms", false},
			"use":             {"use", false},
			"version":         {"version", false},
		},
		Outputs: ActionMetadataOutputs{
			"driver":    {"driver"},
			"endpoint":  {"endpoint"},
			"flags":     {"flags"},
			"name":      {"name"},
			"nodes":     {"nodes"},
			"platforms": {"platforms"},
			"status":    {"status"},
		},
	},
	"docker/setup-buildx-action@v3": {
		Name: "Docker Setup Buildx",
		Inputs: ActionMetadataInputs{
			"append":          {"append", false},
			"buildkitd-flags": {"buildkitd-flags", false},
			"cleanup":         {"cleanup", false},
			"config":          {"config", false},
			"config-inline":   {"config-inline", false},
			"driver":          {"driver", false},
			"driver-opts":     {"driver-opts", false},
			"endpoint":        {"endpoint", false},
			"install":         {"install", false},
			"platforms":       {"platforms", false},
			"use":             {"use", false},
			"version":         {"version", false},
		},
		Outputs: ActionMetadataOutputs{
			"driver":    {"driver"},
			"endpoint":  {"endpoint"},
			"flags":     {"flags"},
			"name":      {"name"},
			"nodes":     {"nodes"},
			"platforms": {"platforms"},
			"status":    {"status"},
		},
	},
	"docker/setup-qemu-action@v1": {
		Name: "Docker Setup QEMU",
		Inputs: ActionMetadataInputs{
			"image":     {"image", false},
			"platforms": {"platforms", false},
		},
		Outputs: ActionMetadataOutputs{
			"platforms": {"platforms"},
		},
	},
	"docker/setup-qemu-action@v2": {
		Name: "Docker Setup QEMU",
		Inputs: ActionMetadataInputs{
			"image":     {"image", false},
			"platforms": {"platforms", false},
		},
		Outputs: ActionMetadataOutputs{
			"platforms": {"platforms"},
		},
	},
	"docker/setup-qemu-action@v3": {
		Name: "Docker Setup QEMU",
		Inputs: ActionMetadataInputs{
			"image":     {"image", false},
			"platforms": {"platforms", false},
		},
		Outputs: ActionMetadataOutputs{
			"platforms": {"platforms"},
		},
	},
	"dorny/paths-filter@v1": {
		Name: "Pull request changed files filter",
		Inputs: ActionMetadataInputs{
			"filters": {"filters", true},
			"token":   {"token", false},
		},
		SkipOutputs: true,
	},
	"dorny/paths-filter@v2": {
		Name: "Paths Changes Filter",
		Inputs: ActionMetadataInputs{
			"base":                {"base", false},
			"filters":             {"filters", true},
			"initial-fetch-depth": {"initial-fetch-depth", false},
			"list-files":          {"list-files", false},
			"ref":                 {"ref", false},
			"token":               {"token", false},
			"working-directory":   {"working-directory", false},
		},
		SkipOutputs: true,
	},
	"dtolnay/rust-toolchain@beta": {
		Name: "rustup toolchain install",
		Inputs: ActionMetadataInputs{
			"components": {"components", false},
			"target":     {"target", false},
			"targets":    {"targets", false},
			"toolchain":  {"toolchain", false},
		},
		Outputs: ActionMetadataOutputs{
			"cachekey": {"cachekey"},
			"name":     {"name"},
		},
	},
	"dtolnay/rust-toolchain@nightly": {
		Name: "rustup toolchain install",
		Inputs: ActionMetadataInputs{
			"components": {"components", false},
			"target":     {"target", false},
			"targets":    {"targets", false},
			"toolchain":  {"toolchain", false},
		},
		Outputs: ActionMetadataOutputs{
			"cachekey": {"cachekey"},
			"name":     {"name"},
		},
	},
	"dtolnay/rust-toolchain@stable": {
		Name: "rustup toolchain install",
		Inputs: ActionMetadataInputs{
			"components": {"components", false},
			"target":     {"target", false},
			"targets":    {"targets", false},
			"toolchain":  {"toolchain", false},
		},
		Outputs: ActionMetadataOutputs{
			"cachekey": {"cachekey"},
			"name":     {"name"},
		},
	},
	"enriikke/gatsby-gh-pages-action@v2": {
		Name: "Gatsby Publish",
		Inputs: ActionMetadataInputs{
			"access-token":     {"access-token", false},
			"commit-message":   {"commit-message", false},
			"deploy-branch":    {"deploy-branch", false},
			"deploy-repo":      {"deploy-repo", false},
			"gatsby-args":      {"gatsby-args", false},
			"git-config-email": {"git-config-email", false},
			"git-config-name":  {"git-config-name", false},
			"skip-publish":     {"skip-publish", false},
			"working-dir":      {"working-dir", false},
		},
	},
	"erlef/setup-beam@v1": {
		Name: "Setup Erlang/OTP with optional Elixir (and mix) and/or rebar3",
		Inputs: ActionMetadataInputs{
			"disable_problem_matchers": {"disable_problem_matchers", false},
			"elixir-version":           {"elixir-version", false},
			"github-token":             {"github-token", false},
			"gleam-version":            {"gleam-version", false},
			"hexpm-mirrors":            {"hexpm-mirrors", false},
			"install-hex":              {"install-hex", false},
			"install-rebar":            {"install-rebar", false},
			"otp-version":              {"otp-version", false},
			"rebar3-version":           {"rebar3-version", false},
			"version-file":             {"version-file", false},
			"version-type":             {"version-type", false},
		},
		Outputs: ActionMetadataOutputs{
			"elixir-version": {"elixir-version"},
			"gleam-version":  {"gleam-version"},
			"otp-version":    {"otp-version"},
			"rebar3-version": {"rebar3-version"},
		},
	},
	"game-ci/unity-builder@v2": {
		Name: "Unity - Builder",
		Inputs: ActionMetadataInputs{
			"allowdirtybuild":               {"allowDirtyBuild", false},
			"androidappbundle":              {"androidAppBundle", false},
			"androidkeyaliasname":           {"androidKeyaliasName", false},
			"androidkeyaliaspass":           {"androidKeyaliasPass", false},
			"androidkeystorebase64":         {"androidKeystoreBase64", false},
			"androidkeystorename":           {"androidKeystoreName", false},
			"androidkeystorepass":           {"androidKeystorePass", false},
			"androidtargetsdkversion":       {"androidTargetSdkVersion", false},
			"androidversioncode":            {"androidVersionCode", false},
			"awsbasestackname":              {"awsBaseStackName", false},
			"buildmethod":                   {"buildMethod", false},
			"buildname":                     {"buildName", false},
			"buildspath":                    {"buildsPath", false},
			"cachekey":                      {"cacheKey", false},
			"cachepulloverridecommand":      {"cachePullOverrideCommand", false},
			"cachepushoverridecommand":      {"cachePushOverrideCommand", false},
			"checkdependencyhealthoverride": {"checkDependencyHealthOverride", false},
			"chownfilesto":                  {"chownFilesTo", false},
			"cloudrunnercluster":            {"cloudRunnerCluster", false},
			"cloudrunnercpu":                {"cloudRunnerCpu", false},
			"cloudrunnermemory":             {"cloudRunnerMemory", false},
			"customimage":                   {"customImage", false},
			"customjob":                     {"customJob", false},
			"customjobhooks":                {"customJobHooks", false},
			"customparameters":              {"customParameters", false},
			"gitprivatetoken":               {"gitPrivateToken", false},
			"kubeconfig":                    {"kubeConfig", false},
			"kubestorageclass":              {"kubeStorageClass", false},
			"kubevolume":                    {"kubeVolume", false},
			"kubevolumesize":                {"kubeVolumeSize", false},
			"postbuildsteps":                {"postBuildSteps", false},
			"prebuildsteps":                 {"preBuildSteps", false},
			"projectpath":                   {"projectPath", false},
			"readinputfromoverridelist":     {"readInputFromOverrideList", false},
			"readinputoverridecommand":      {"readInputOverrideCommand", false},
			"sshagent":                      {"sshAgent", false},
			"startdependenciesoverride":     {"startDependenciesOverride", false},
			"targetplatform":                {"targetPlatform", false},
			"unityversion":                  {"unityVersion", false},
			"version":                       {"version", false},
			"versioning":                    {"versioning", false},
		},
		Outputs: ActionMetadataOutputs{
			"buildversion": {"buildVersion"},
			"volume":       {"volume"},
		},
	},
	"game-ci/unity-builder@v3": {
		Name: "Unity - Builder",
		Inputs: ActionMetadataInputs{
			"allowdirtybuild":             {"allowDirtyBuild", false},
			"androidexporttype":           {"androidExportType", false},
			"androidkeyaliasname":         {"androidKeyaliasName", false},
			"androidkeyaliaspass":         {"androidKeyaliasPass", false},
			"androidkeystorebase64":       {"androidKeystoreBase64", false},
			"androidkeystorename":         {"androidKeystoreName", false},
			"androidkeystorepass":         {"androidKeystorePass", false},
			"androidsymboltype":           {"androidSymbolType", false},
			"androidtargetsdkversion":     {"androidTargetSdkVersion", false},
			"androidversioncode":          {"androidVersionCode", false},
			"awsstackname":                {"awsStackName", false},
			"buildmethod":                 {"buildMethod", false},
			"buildname":                   {"buildName", false},
			"buildspath":                  {"buildsPath", false},
			"cachekey":                    {"cacheKey", false},
			"cacheunityinstallationonmac": {"cacheUnityInstallationOnMac", false},
			"chownfilesto":                {"chownFilesTo", false},
			"cloudrunnercpu":              {"cloudRunnerCpu", false},
			"cloudrunnermemory":           {"cloudRunnerMemory", false},
			"containerhookfiles":          {"containerHookFiles", false},
			"customcommandhooks":          {"customCommandHooks", false},
			"customhookfiles":             {"customHookFiles", false},
			"customimage":                 {"customImage", false},
			"customjob":                   {"customJob", false},
			"customparameters":            {"customParameters", false},
			"dockerworkspacepath":         {"dockerWorkspacePath", false},
			"githubowner":                 {"githubOwner", false},
			"gitprivatetoken":             {"gitPrivateToken", false},
			"kubeconfig":                  {"kubeConfig", false},
			"kubestorageclass":            {"kubeStorageClass", false},
			"kubevolume":                  {"kubeVolume", false},
			"kubevolumesize":              {"kubeVolumeSize", false},
			"postbuildsteps":              {"postBuildSteps", false},
			"prebuildsteps":               {"preBuildSteps", false},
			"projectpath":                 {"projectPath", false},
			"providerstrategy":            {"providerStrategy", false},
			"readinputfromoverridelist":   {"readInputFromOverrideList", false},
			"readinputoverridecommand":    {"readInputOverrideCommand", false},
			"sshagent":                    {"sshAgent", false},
			"sshpublickeysdirectorypath":  {"sshPublicKeysDirectoryPath", false},
			"targetplatform":              {"targetPlatform", false},
			"unityhubversiononmac":        {"unityHubVersionOnMac", false},
			"unitylicensingserver":        {"unityLicensingServer", false},
			"unityversion":                {"unityVersion", false},
			"version":                     {"version", false},
			"versioning":                  {"versioning", false},
			"watchtoend":                  {"watchToEnd", false},
		},
		Outputs: ActionMetadataOutputs{
			"androidversioncode": {"androidVersionCode"},
			"buildversion":       {"buildVersion"},
			"volume":             {"volume"},
		},
	},
	"getsentry/paths-filter@v1": {
		Name: "Pull request changed files filter",
		Inputs: ActionMetadataInputs{
			"filters": {"filters", true},
			"token":   {"token", false},
		},
		SkipOutputs: true,
	},
	"getsentry/paths-filter@v2": {
		Name: "Paths Changes Filter",
		Inputs: ActionMetadataInputs{
			"base":                {"base", false},
			"filters":             {"filters", true},
			"initial-fetch-depth": {"initial-fetch-depth", false},
			"list-files":          {"list-files", false},
			"ref":                 {"ref", false},
			"token":               {"token", false},
			"working-directory":   {"working-directory", false},
		},
		SkipOutputs: true,
	},
	"github/codeql-action/analyze@v1": {
		Name: "CodeQL: Finish",
		Inputs: ActionMetadataInputs{
			"add-snippets":        {"add-snippets", false},
			"category":            {"category", false},
			"check_name":          {"check_name", false},
			"checkout_path":       {"checkout_path", false},
			"cleanup-level":       {"cleanup-level", false},
			"expect-error":        {"expect-error", false},
			"matrix":              {"matrix", false},
			"output":              {"output", false},
			"ram":                 {"ram", false},
			"ref":                 {"ref", false},
			"sha":                 {"sha", false},
			"skip-queries":        {"skip-queries", false},
			"threads":             {"threads", false},
			"token":               {"token", false},
			"upload":              {"upload", false},
			"upload-database":     {"upload-database", false},
			"wait-for-processing": {"wait-for-processing", false},
		},
		Outputs: ActionMetadataOutputs{
			"db-locations": {"db-locations"},
			"sarif-id":     {"sarif-id"},
		},
	},
	"github/codeql-action/analyze@v2": {
		Name: "CodeQL: Finish",
		Inputs: ActionMetadataInputs{
			"add-snippets":        {"add-snippets", false},
			"category":            {"category", false},
			"check_name":          {"check_name", false},
			"checkout_path":       {"checkout_path", false},
			"cleanup-level":       {"cleanup-level", false},
			"expect-error":        {"expect-error", false},
			"matrix":              {"matrix", false},
			"output":              {"output", false},
			"ram":                 {"ram", false},
			"ref":                 {"ref", false},
			"sha":                 {"sha", false},
			"skip-queries":        {"skip-queries", false},
			"threads":             {"threads", false},
			"token":               {"token", false},
			"upload":              {"upload", false},
			"upload-database":     {"upload-database", false},
			"wait-for-processing": {"wait-for-processing", false},
		},
		Outputs: ActionMetadataOutputs{
			"db-locations": {"db-locations"},
			"sarif-id":     {"sarif-id"},
			"sarif-output": {"sarif-output"},
		},
	},
	"github/codeql-action/autobuild@v1": {
		Name: "CodeQL: Autobuild",
		Inputs: ActionMetadataInputs{
			"matrix":            {"matrix", false},
			"token":             {"token", false},
			"working-directory": {"working-directory", false},
		},
	},
	"github/codeql-action/autobuild@v2": {
		Name: "CodeQL: Autobuild",
		Inputs: ActionMetadataInputs{
			"matrix":            {"matrix", false},
			"token":             {"token", false},
			"working-directory": {"working-directory", false},
		},
	},
	"github/codeql-action/init@v1": {
		Name: "CodeQL: Init",
		Inputs: ActionMetadataInputs{
			"config-file":               {"config-file", false},
			"db-location":               {"db-location", false},
			"debug":                     {"debug", false},
			"debug-artifact-name":       {"debug-artifact-name", false},
			"debug-database-name":       {"debug-database-name", false},
			"external-repository-token": {"external-repository-token", false},
			"languages":                 {"languages", false},
			"matrix":                    {"matrix", false},
			"packs":                     {"packs", false},
			"queries":                   {"queries", false},
			"ram":                       {"ram", false},
			"registries":                {"registries", false},
			"setup-python-dependencies": {"setup-python-dependencies", false},
			"source-root":               {"source-root", false},
			"threads":                   {"threads", false},
			"token":                     {"token", false},
			"tools":                     {"tools", false},
			"trap-caching":              {"trap-caching", false},
		},
		Outputs: ActionMetadataOutputs{
			"codeql-path": {"codeql-path"},
		},
	},
	"github/codeql-action/init@v2": {
		Name: "CodeQL: Init",
		Inputs: ActionMetadataInputs{
			"config":                    {"config", false},
			"config-file":               {"config-file", false},
			"db-location":               {"db-location", false},
			"debug":                     {"debug", false},
			"debug-artifact-name":       {"debug-artifact-name", false},
			"debug-database-name":       {"debug-database-name", false},
			"external-repository-token": {"external-repository-token", false},
			"languages":                 {"languages", false},
			"matrix":                    {"matrix", false},
			"packs":                     {"packs", false},
			"queries":                   {"queries", false},
			"ram":                       {"ram", false},
			"registries":                {"registries", false},
			"setup-python-dependencies": {"setup-python-dependencies", false},
			"source-root":               {"source-root", false},
			"threads":                   {"threads", false},
			"token":                     {"token", false},
			"tools":                     {"tools", false},
			"trap-caching":              {"trap-caching", false},
		},
		Outputs: ActionMetadataOutputs{
			"codeql-path": {"codeql-path"},
		},
	},
	"github/super-linter@v3": {
		Name: "Super-Linter",
	},
	"github/super-linter@v4": {
		Name: "Super-Linter",
	},
	"github/super-linter@v5": {
		Name: "Super-Linter",
	},
	"githubocto/flat@v1": {
		Name: "Flat Data",
		Inputs: ActionMetadataInputs{
			"http_url":         {"http_url", false},
			"outfile_basename": {"outfile_basename", false},
			"postprocess":      {"postprocess", false},
			"sql_connstring":   {"sql_connstring", false},
			"sql_format":       {"sql_format", false},
			"sql_queryfile":    {"sql_queryfile", false},
		},
		Outputs: ActionMetadataOutputs{
			"delta_bytes": {"delta_bytes"},
		},
	},
	"githubocto/flat@v2": {
		Name: "Flat Data",
		Inputs: ActionMetadataInputs{
			"downloaded_filename": {"downloaded_filename", false},
			"http_url":            {"http_url", false},
			"postprocess":         {"postprocess", false},
			"sql_connstring":      {"sql_connstring", false},
			"sql_queryfile":       {"sql_queryfile", false},
		},
		Outputs: ActionMetadataOutputs{
			"delta_bytes": {"delta_bytes"},
		},
	},
	"githubocto/flat@v3": {
		Name: "Flat Data",
		Inputs: ActionMetadataInputs{
			"authorization":       {"authorization", false},
			"axios_config":        {"axios_config", false},
			"downloaded_filename": {"downloaded_filename", false},
			"http_url":            {"http_url", false},
			"mask":                {"mask", false},
			"postprocess":         {"postprocess", false},
			"sql_connstring":      {"sql_connstring", false},
			"sql_queryfile":       {"sql_queryfile", false},
			"typeorm_config":      {"typeorm_config", false},
		},
		Outputs: ActionMetadataOutputs{
			"delta_bytes": {"delta_bytes"},
		},
	},
	"golangci/golangci-lint-action@v1": {
		Name: "Run golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":              {"args", false},
			"github-token":      {"github-token", false},
			"only-new-issues":   {"only-new-issues", false},
			"version":           {"version", true},
			"working-directory": {"working-directory", false},
		},
	},
	"golangci/golangci-lint-action@v2": {
		Name: "Run golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":                 {"args", false},
			"github-token":         {"github-token", false},
			"only-new-issues":      {"only-new-issues", false},
			"skip-build-cache":     {"skip-build-cache", false},
			"skip-go-installation": {"skip-go-installation", false},
			"skip-pkg-cache":       {"skip-pkg-cache", false},
			"version":              {"version", false},
			"working-directory":    {"working-directory", false},
		},
	},
	"golangci/golangci-lint-action@v3": {
		Name: "Run golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":              {"args", false},
			"github-token":      {"github-token", false},
			"install-mode":      {"install-mode", false},
			"only-new-issues":   {"only-new-issues", false},
			"skip-build-cache":  {"skip-build-cache", false},
			"skip-cache":        {"skip-cache", false},
			"skip-pkg-cache":    {"skip-pkg-cache", false},
			"version":           {"version", false},
			"working-directory": {"working-directory", false},
		},
	},
	"goreleaser/goreleaser-action@v1": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":    {"args", false},
			"key":     {"key", false},
			"version": {"version", false},
			"workdir": {"workdir", false},
		},
	},
	"goreleaser/goreleaser-action@v2": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":         {"args", false},
			"distribution": {"distribution", false},
			"install-only": {"install-only", false},
			"version":      {"version", false},
			"workdir":      {"workdir", false},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts": {"artifacts"},
			"metadata":  {"metadata"},
		},
	},
	"goreleaser/goreleaser-action@v3": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":         {"args", false},
			"distribution": {"distribution", false},
			"install-only": {"install-only", false},
			"version":      {"version", false},
			"workdir":      {"workdir", false},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts": {"artifacts"},
			"metadata":  {"metadata"},
		},
	},
	"goreleaser/goreleaser-action@v4": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":         {"args", false},
			"distribution": {"distribution", false},
			"install-only": {"install-only", false},
			"version":      {"version", false},
			"workdir":      {"workdir", false},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts": {"artifacts"},
			"metadata":  {"metadata"},
		},
	},
	"goreleaser/goreleaser-action@v5": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":         {"args", false},
			"distribution": {"distribution", false},
			"install-only": {"install-only", false},
			"version":      {"version", false},
			"workdir":      {"workdir", false},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts": {"artifacts"},
			"metadata":  {"metadata"},
		},
	},
	"gradle/wrapper-validation-action@v1": {
		Name: "Gradle Wrapper Validation",
		Inputs: ActionMetadataInputs{
			"allow-checksums":   {"allow-checksums", false},
			"allow-snapshots":   {"allow-snapshots", false},
			"min-wrapper-count": {"min-wrapper-count", false},
		},
		Outputs: ActionMetadataOutputs{
			"failed-wrapper": {"failed-wrapper"},
		},
	},
	"haskell/actions/setup@v1": {
		Name: "Setup Haskell",
		Inputs: ActionMetadataInputs{
			"cabal-version":   {"cabal-version", false},
			"disable-matcher": {"disable-matcher", false},
			"enable-stack":    {"enable-stack", false},
			"ghc-version":     {"ghc-version", false},
			"stack-no-global": {"stack-no-global", false},
			"stack-setup-ghc": {"stack-setup-ghc", false},
			"stack-version":   {"stack-version", false},
		},
		Outputs: ActionMetadataOutputs{
			"cabal-exe":   {"cabal-exe"},
			"cabal-path":  {"cabal-path"},
			"cabal-store": {"cabal-store"},
			"ghc-exe":     {"ghc-exe"},
			"ghc-path":    {"ghc-path"},
			"stack-exe":   {"stack-exe"},
			"stack-path":  {"stack-path"},
			"stack-root":  {"stack-root"},
		},
	},
	"haskell/actions/setup@v2": {
		Name: "Setup Haskell",
		Inputs: ActionMetadataInputs{
			"cabal-update":          {"cabal-update", false},
			"cabal-version":         {"cabal-version", false},
			"disable-matcher":       {"disable-matcher", false},
			"enable-stack":          {"enable-stack", false},
			"ghc-version":           {"ghc-version", false},
			"ghcup-release-channel": {"ghcup-release-channel", false},
			"stack-no-global":       {"stack-no-global", false},
			"stack-setup-ghc":       {"stack-setup-ghc", false},
			"stack-version":         {"stack-version", false},
		},
		Outputs: ActionMetadataOutputs{
			"cabal-exe":     {"cabal-exe"},
			"cabal-path":    {"cabal-path"},
			"cabal-store":   {"cabal-store"},
			"cabal-version": {"cabal-version"},
			"ghc-exe":       {"ghc-exe"},
			"ghc-path":      {"ghc-path"},
			"ghc-version":   {"ghc-version"},
			"stack-exe":     {"stack-exe"},
			"stack-path":    {"stack-path"},
			"stack-root":    {"stack-root"},
			"stack-version": {"stack-version"},
		},
	},
	"marvinpinto/action-automatic-releases@latest": {
		Name: "Automatic Releases",
		Inputs: ActionMetadataInputs{
			"automatic_release_tag": {"automatic_release_tag", false},
			"draft":                 {"draft", false},
			"files":                 {"files", false},
			"prerelease":            {"prerelease", false},
			"repo_token":            {"repo_token", true},
			"title":                 {"title", false},
		},
		Outputs: ActionMetadataOutputs{
			"automatic_releases_tag": {"automatic_releases_tag"},
			"upload_url":             {"upload_url"},
		},
	},
	"microsoft/playwright-github-action@v1": {
		Name: "Run Playwright tests",
	},
	"mikepenz/release-changelog-builder-action@v1": {
		Name: "Release Changelog Builder",
		Inputs: ActionMetadataInputs{
			"commitmode":        {"commitMode", false},
			"configuration":     {"configuration", false},
			"failonerror":       {"failOnError", false},
			"fromtag":           {"fromTag", false},
			"ignoreprereleases": {"ignorePreReleases", false},
			"outputfile":        {"outputFile", false},
			"owner":             {"owner", false},
			"path":              {"path", false},
			"repo":              {"repo", false},
			"token":             {"token", false},
			"totag":             {"toTag", false},
		},
		Outputs: ActionMetadataOutputs{
			"changelog": {"changelog"},
			"failed":    {"failed"},
			"fromtag":   {"fromTag"},
			"owner":     {"owner"},
			"repo":      {"repo"},
			"totag":     {"toTag"},
		},
	},
	"mikepenz/release-changelog-builder-action@v2": {
		Name: "Release Changelog Builder",
		Inputs: ActionMetadataInputs{
			"baseurl":           {"baseUrl", false},
			"commitmode":        {"commitMode", false},
			"configuration":     {"configuration", false},
			"failonerror":       {"failOnError", false},
			"fromtag":           {"fromTag", false},
			"ignoreprereleases": {"ignorePreReleases", false},
			"outputfile":        {"outputFile", false},
			"owner":             {"owner", false},
			"path":              {"path", false},
			"repo":              {"repo", false},
			"token":             {"token", false},
			"totag":             {"toTag", false},
		},
		Outputs: ActionMetadataOutputs{
			"changelog": {"changelog"},
			"failed":    {"failed"},
			"fromtag":   {"fromTag"},
			"owner":     {"owner"},
			"repo":      {"repo"},
			"totag":     {"toTag"},
		},
	},
	"mikepenz/release-changelog-builder-action@v3": {
		Name: "Release Changelog Builder",
		Inputs: ActionMetadataInputs{
			"baseurl":                 {"baseUrl", false},
			"commitmode":              {"commitMode", false},
			"configuration":           {"configuration", false},
			"configurationjson":       {"configurationJson", false},
			"failonerror":             {"failOnError", false},
			"fetchreleaseinformation": {"fetchReleaseInformation", false},
			"fetchreviewers":          {"fetchReviewers", false},
			"fetchreviews":            {"fetchReviews", false},
			"fromtag":                 {"fromTag", false},
			"ignoreprereleases":       {"ignorePreReleases", false},
			"includeopen":             {"includeOpen", false},
			"outputfile":              {"outputFile", false},
			"owner":                   {"owner", false},
			"path":                    {"path", false},
			"repo":                    {"repo", false},
			"token":                   {"token", false},
			"totag":                   {"toTag", false},
		},
		Outputs: ActionMetadataOutputs{
			"categorized_prs":   {"categorized_prs"},
			"changelog":         {"changelog"},
			"failed":            {"failed"},
			"fromtag":           {"fromTag"},
			"open_prs":          {"open_prs"},
			"owner":             {"owner"},
			"pull_requests":     {"pull_requests"},
			"repo":              {"repo"},
			"totag":             {"toTag"},
			"uncategorized_prs": {"uncategorized_prs"},
		},
	},
	"mikepenz/release-changelog-builder-action@v4": {
		Name: "Release Changelog Builder",
		Inputs: ActionMetadataInputs{
			"baseurl":                 {"baseUrl", false},
			"cache":                   {"cache", false},
			"commitmode":              {"commitMode", false},
			"configuration":           {"configuration", false},
			"configurationjson":       {"configurationJson", false},
			"exportcache":             {"exportCache", false},
			"exportonly":              {"exportOnly", false},
			"failonerror":             {"failOnError", false},
			"fetchreleaseinformation": {"fetchReleaseInformation", false},
			"fetchreviewers":          {"fetchReviewers", false},
			"fetchreviews":            {"fetchReviews", false},
			"fetchviacommits":         {"fetchViaCommits", false},
			"fromtag":                 {"fromTag", false},
			"ignoreprereleases":       {"ignorePreReleases", false},
			"includeopen":             {"includeOpen", false},
			"outputfile":              {"outputFile", false},
			"owner":                   {"owner", false},
			"path":                    {"path", false},
			"repo":                    {"repo", false},
			"token":                   {"token", false},
			"totag":                   {"toTag", false},
		},
		Outputs: ActionMetadataOutputs{
			"cache":             {"cache"},
			"categorized_prs":   {"categorized_prs"},
			"changelog":         {"changelog"},
			"failed":            {"failed"},
			"fromtag":           {"fromTag"},
			"open_prs":          {"open_prs"},
			"owner":             {"owner"},
			"pull_requests":     {"pull_requests"},
			"repo":              {"repo"},
			"totag":             {"toTag"},
			"uncategorized_prs": {"uncategorized_prs"},
		},
	},
	"msys2/setup-msys2@v1": {
		Name: "Setup MSYS2 environment",
		Inputs: ActionMetadataInputs{
			"cache":     {"cache", false},
			"install":   {"install", false},
			"msystem":   {"msystem", false},
			"path-type": {"path-type", false},
			"release":   {"release", false},
			"update":    {"update", false},
		},
	},
	"msys2/setup-msys2@v2": {
		Name: "Setup MSYS2",
		Inputs: ActionMetadataInputs{
			"cache":                   {"cache", false},
			"install":                 {"install", false},
			"location":                {"location", false},
			"msystem":                 {"msystem", false},
			"pacboy":                  {"pacboy", false},
			"path-type":               {"path-type", false},
			"platform-check-severity": {"platform-check-severity", false},
			"release":                 {"release", false},
			"update":                  {"update", false},
		},
	},
	"ncipollo/release-action@v1": {
		Name: "Create Release",
		Inputs: ActionMetadataInputs{
			"allowupdates":               {"allowUpdates", false},
			"artifact":                   {"artifact", false},
			"artifactcontenttype":        {"artifactContentType", false},
			"artifacterrorsfailbuild":    {"artifactErrorsFailBuild", false},
			"artifacts":                  {"artifacts", false},
			"body":                       {"body", false},
			"bodyfile":                   {"bodyFile", false},
			"commit":                     {"commit", false},
			"discussioncategory":         {"discussionCategory", false},
			"draft":                      {"draft", false},
			"generatereleasenotes":       {"generateReleaseNotes", false},
			"makelatest":                 {"makeLatest", false},
			"name":                       {"name", false},
			"omitbody":                   {"omitBody", false},
			"omitbodyduringupdate":       {"omitBodyDuringUpdate", false},
			"omitdraftduringupdate":      {"omitDraftDuringUpdate", false},
			"omitname":                   {"omitName", false},
			"omitnameduringupdate":       {"omitNameDuringUpdate", false},
			"omitprereleaseduringupdate": {"omitPrereleaseDuringUpdate", false},
			"owner":                      {"owner", false},
			"prerelease":                 {"prerelease", false},
			"removeartifacts":            {"removeArtifacts", false},
			"replacesartifacts":          {"replacesArtifacts", false},
			"repo":                       {"repo", false},
			"skipifreleaseexists":        {"skipIfReleaseExists", false},
			"tag":                        {"tag", false},
			"token":                      {"token", false},
			"updateonlyunreleased":       {"updateOnlyUnreleased", false},
		},
		Outputs: ActionMetadataOutputs{
			"html_url":   {"html_url"},
			"id":         {"id"},
			"upload_url": {"upload_url"},
		},
	},
	"nwtgck/actions-netlify@v1": {
		Name: "Netlify Actions",
		Inputs: ActionMetadataInputs{
			"alias":                           {"alias", false},
			"deploy-message":                  {"deploy-message", false},
			"enable-commit-comment":           {"enable-commit-comment", false},
			"enable-commit-status":            {"enable-commit-status", false},
			"enable-pull-request-comment":     {"enable-pull-request-comment", false},
			"fails-without-credentials":       {"fails-without-credentials", false},
			"functions-dir":                   {"functions-dir", false},
			"github-deployment-description":   {"github-deployment-description", false},
			"github-deployment-environment":   {"github-deployment-environment", false},
			"github-token":                    {"github-token", false},
			"netlify-config-path":             {"netlify-config-path", false},
			"overwrites-pull-request-comment": {"overwrites-pull-request-comment", false},
			"production-branch":               {"production-branch", false},
			"production-deploy":               {"production-deploy", false},
			"publish-dir":                     {"publish-dir", true},
		},
		Outputs: ActionMetadataOutputs{
			"deploy-url": {"deploy-url"},
		},
	},
	"nwtgck/actions-netlify@v2": {
		Name: "Netlify Actions",
		Inputs: ActionMetadataInputs{
			"alias":                           {"alias", false},
			"deploy-message":                  {"deploy-message", false},
			"enable-commit-comment":           {"enable-commit-comment", false},
			"enable-commit-status":            {"enable-commit-status", false},
			"enable-github-deployment":        {"enable-github-deployment", false},
			"enable-pull-request-comment":     {"enable-pull-request-comment", false},
			"fails-without-credentials":       {"fails-without-credentials", false},
			"functions-dir":                   {"functions-dir", false},
			"github-deployment-description":   {"github-deployment-description", false},
			"github-deployment-environment":   {"github-deployment-environment", false},
			"github-token":                    {"github-token", false},
			"netlify-config-path":             {"netlify-config-path", false},
			"overwrites-pull-request-comment": {"overwrites-pull-request-comment", false},
			"production-branch":               {"production-branch", false},
			"production-deploy":               {"production-deploy", false},
			"publish-dir":                     {"publish-dir", true},
		},
		Outputs: ActionMetadataOutputs{
			"deploy-url": {"deploy-url"},
		},
	},
	"octokit/request-action@v1.x": {
		Name:       "GitHub API Request",
		SkipInputs: true,
		Outputs: ActionMetadataOutputs{
			"data":    {"data"},
			"headers": {"headers"},
			"status":  {"status"},
		},
	},
	"octokit/request-action@v2.x": {
		Name:       "GitHub API Request",
		SkipInputs: true,
		Outputs: ActionMetadataOutputs{
			"data":    {"data"},
			"headers": {"headers"},
			"status":  {"status"},
		},
	},
	"peaceiris/actions-gh-pages@v2": {
		Name: "GitHub Pages action",
		Inputs: ActionMetadataInputs{
			"commitmessage": {"commitMessage", false},
			"emptycommits":  {"emptyCommits", false},
			"forceorphan":   {"forceOrphan", false},
			"keepfiles":     {"keepFiles", false},
			"tagmessage":    {"tagMessage", false},
			"tagname":       {"tagName", false},
			"tagoverwrite":  {"tagOverwrite", false},
			"useremail":     {"useremail", false},
			"username":      {"username", false},
		},
	},
	"peaceiris/actions-gh-pages@v3": {
		Name: "GitHub Pages action",
		Inputs: ActionMetadataInputs{
			"allow_empty_commit":  {"allow_empty_commit", false},
			"cname":               {"cname", false},
			"commit_message":      {"commit_message", false},
			"deploy_key":          {"deploy_key", false},
			"destination_dir":     {"destination_dir", false},
			"disable_nojekyll":    {"disable_nojekyll", false},
			"enable_jekyll":       {"enable_jekyll", false},
			"exclude_assets":      {"exclude_assets", false},
			"external_repository": {"external_repository", false},
			"force_orphan":        {"force_orphan", false},
			"full_commit_message": {"full_commit_message", false},
			"github_token":        {"github_token", false},
			"keep_files":          {"keep_files", false},
			"personal_token":      {"personal_token", false},
			"publish_branch":      {"publish_branch", false},
			"publish_dir":         {"publish_dir", false},
			"tag_message":         {"tag_message", false},
			"tag_name":            {"tag_name", false},
			"user_email":          {"user_email", false},
			"user_name":           {"user_name", false},
		},
	},
	"peter-evans/create-pull-request@v1": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"assignees":       {"assignees", false},
			"author-email":    {"author-email", false},
			"author-name":     {"author-name", false},
			"base":            {"base", false},
			"body":            {"body", false},
			"branch":          {"branch", false},
			"branch-suffix":   {"branch-suffix", false},
			"commit-message":  {"commit-message", false},
			"committer-email": {"committer-email", false},
			"committer-name":  {"committer-name", false},
			"labels":          {"labels", false},
			"milestone":       {"milestone", false},
			"project":         {"project", false},
			"project-column":  {"project-column", false},
			"reviewers":       {"reviewers", false},
			"team-reviewers":  {"team-reviewers", false},
			"title":           {"title", false},
			"token":           {"token", true},
		},
		Outputs: ActionMetadataOutputs{
			"pr_number": {"pr_number"},
		},
	},
	"peter-evans/create-pull-request@v2": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"assignees":         {"assignees", false},
			"author":            {"author", false},
			"base":              {"base", false},
			"body":              {"body", false},
			"branch":            {"branch", false},
			"branch-suffix":     {"branch-suffix", false},
			"commit-message":    {"commit-message", false},
			"committer":         {"committer", false},
			"draft":             {"draft", false},
			"labels":            {"labels", false},
			"milestone":         {"milestone", false},
			"path":              {"path", false},
			"project":           {"project", false},
			"project-column":    {"project-column", false},
			"request-to-parent": {"request-to-parent", false},
			"reviewers":         {"reviewers", false},
			"team-reviewers":    {"team-reviewers", false},
			"title":             {"title", false},
			"token":             {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"pull-request-number": {"pull-request-number"},
		},
	},
	"peter-evans/create-pull-request@v3": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"add-paths":      {"add-paths", false},
			"assignees":      {"assignees", false},
			"author":         {"author", false},
			"base":           {"base", false},
			"body":           {"body", false},
			"branch":         {"branch", false},
			"branch-suffix":  {"branch-suffix", false},
			"commit-message": {"commit-message", false},
			"committer":      {"committer", false},
			"delete-branch":  {"delete-branch", false},
			"draft":          {"draft", false},
			"labels":         {"labels", false},
			"milestone":      {"milestone", false},
			"path":           {"path", false},
			"push-to-fork":   {"push-to-fork", false},
			"reviewers":      {"reviewers", false},
			"signoff":        {"signoff", false},
			"team-reviewers": {"team-reviewers", false},
			"title":          {"title", false},
			"token":          {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"pull-request-head-sha":  {"pull-request-head-sha"},
			"pull-request-number":    {"pull-request-number"},
			"pull-request-operation": {"pull-request-operation"},
			"pull-request-url":       {"pull-request-url"},
		},
	},
	"peter-evans/create-pull-request@v4": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"add-paths":      {"add-paths", false},
			"assignees":      {"assignees", false},
			"author":         {"author", false},
			"base":           {"base", false},
			"body":           {"body", false},
			"branch":         {"branch", false},
			"branch-suffix":  {"branch-suffix", false},
			"commit-message": {"commit-message", false},
			"committer":      {"committer", false},
			"delete-branch":  {"delete-branch", false},
			"draft":          {"draft", false},
			"labels":         {"labels", false},
			"milestone":      {"milestone", false},
			"path":           {"path", false},
			"push-to-fork":   {"push-to-fork", false},
			"reviewers":      {"reviewers", false},
			"signoff":        {"signoff", false},
			"team-reviewers": {"team-reviewers", false},
			"title":          {"title", false},
			"token":          {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"pull-request-head-sha":  {"pull-request-head-sha"},
			"pull-request-number":    {"pull-request-number"},
			"pull-request-operation": {"pull-request-operation"},
			"pull-request-url":       {"pull-request-url"},
		},
	},
	"peter-evans/create-pull-request@v5": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"add-paths":      {"add-paths", false},
			"assignees":      {"assignees", false},
			"author":         {"author", false},
			"base":           {"base", false},
			"body":           {"body", false},
			"body-path":      {"body-path", false},
			"branch":         {"branch", false},
			"branch-suffix":  {"branch-suffix", false},
			"commit-message": {"commit-message", false},
			"committer":      {"committer", false},
			"delete-branch":  {"delete-branch", false},
			"draft":          {"draft", false},
			"labels":         {"labels", false},
			"milestone":      {"milestone", false},
			"path":           {"path", false},
			"push-to-fork":   {"push-to-fork", false},
			"reviewers":      {"reviewers", false},
			"signoff":        {"signoff", false},
			"team-reviewers": {"team-reviewers", false},
			"title":          {"title", false},
			"token":          {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"pull-request-head-sha":  {"pull-request-head-sha"},
			"pull-request-number":    {"pull-request-number"},
			"pull-request-operation": {"pull-request-operation"},
			"pull-request-url":       {"pull-request-url"},
		},
	},
	"preactjs/compressed-size-action@v1": {
		Name: "compressed-size-action",
		Inputs: ActionMetadataInputs{
			"build-script":       {"build-script", false},
			"collapse-unchanged": {"collapse-unchanged", false},
			"compression":        {"compression", false},
			"omit-unchanged":     {"omit-unchanged", false},
			"repo-token":         {"repo-token", true},
			"show-total":         {"show-total", false},
		},
	},
	"preactjs/compressed-size-action@v2": {
		Name: "compressed-size-action",
		Inputs: ActionMetadataInputs{
			"build-script":             {"build-script", false},
			"clean-script":             {"clean-script", false},
			"collapse-unchanged":       {"collapse-unchanged", false},
			"compression":              {"compression", false},
			"cwd":                      {"cwd", false},
			"exclude":                  {"exclude", false},
			"minimum-change-threshold": {"minimum-change-threshold", false},
			"omit-unchanged":           {"omit-unchanged", false},
			"pattern":                  {"pattern", false},
			"repo-token":               {"repo-token", false},
			"show-total":               {"show-total", false},
			"strip-hash":               {"strip-hash", false},
			"use-check":                {"use-check", false},
		},
	},
	"reviewdog/action-actionlint@v1": {
		Name: "actionlint with reviewdog",
		Inputs: ActionMetadataInputs{
			"actionlint_flags": {"actionlint_flags", false},
			"fail_on_error":    {"fail_on_error", false},
			"filter_mode":      {"filter_mode", false},
			"github_token":     {"github_token", false},
			"level":            {"level", false},
			"reporter":         {"reporter", false},
			"reviewdog_flags":  {"reviewdog_flags", false},
			"tool_name":        {"tool_name", false},
		},
	},
	"reviewdog/action-eslint@v1": {
		Name: "Run eslint with reviewdog",
		Inputs: ActionMetadataInputs{
			"eslint_flags":    {"eslint_flags", false},
			"fail_on_error":   {"fail_on_error", false},
			"filter_mode":     {"filter_mode", false},
			"github_token":    {"github_token", false},
			"level":           {"level", false},
			"node_options":    {"node_options", false},
			"reporter":        {"reporter", false},
			"reviewdog_flags": {"reviewdog_flags", false},
			"tool_name":       {"tool_name", false},
			"workdir":         {"workdir", false},
		},
	},
	"reviewdog/action-golangci-lint@v1": {
		Name: "Run golangci-lint with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_on_error":       {"fail_on_error", false},
			"filter_mode":         {"filter_mode", false},
			"github_token":        {"github_token", false},
			"golangci_lint_flags": {"golangci_lint_flags", false},
			"level":               {"level", false},
			"reporter":            {"reporter", false},
			"reviewdog_flags":     {"reviewdog_flags", false},
			"tool_name":           {"tool_name", false},
			"workdir":             {"workdir", false},
		},
	},
	"reviewdog/action-golangci-lint@v2": {
		Name: "Run golangci-lint with reviewdog",
		Inputs: ActionMetadataInputs{
			"cache":                 {"cache", false},
			"fail_on_error":         {"fail_on_error", false},
			"filter_mode":           {"filter_mode", false},
			"github_token":          {"github_token", false},
			"go_version":            {"go_version", false},
			"go_version_file":       {"go_version_file", false},
			"golangci_lint_flags":   {"golangci_lint_flags", false},
			"golangci_lint_version": {"golangci_lint_version", false},
			"level":                 {"level", false},
			"reporter":              {"reporter", false},
			"reviewdog_flags":       {"reviewdog_flags", false},
			"reviewdog_version":     {"reviewdog_version", false},
			"tool_name":             {"tool_name", false},
			"workdir":               {"workdir", false},
		},
	},
	"reviewdog/action-hadolint@v1": {
		Name: "Run hadolint with reviewdog",
		Inputs: ActionMetadataInputs{
			"exclude":         {"exclude", false},
			"fail_on_error":   {"fail_on_error", false},
			"filter_mode":     {"filter_mode", false},
			"github_token":    {"github_token", false},
			"hadolint_flags":  {"hadolint_flags", false},
			"hadolint_ignore": {"hadolint_ignore", false},
			"level":           {"level", false},
			"reporter":        {"reporter", false},
			"reviewdog_flags": {"reviewdog_flags", false},
			"tool_name":       {"tool_name", false},
		},
	},
	"reviewdog/action-misspell@v1": {
		Name: "Run misspell with reviewdog",
		Inputs: ActionMetadataInputs{
			"exclude":       {"exclude", false},
			"fail_on_error": {"fail_on_error", false},
			"filter_mode":   {"filter_mode", false},
			"github_token":  {"github_token", false},
			"ignore":        {"ignore", false},
			"level":         {"level", false},
			"locale":        {"locale", false},
			"path":          {"path", false},
			"pattern":       {"pattern", false},
			"reporter":      {"reporter", false},
		},
	},
	"reviewdog/action-rubocop@v1": {
		Name: "Run rubocop with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_on_error":      {"fail_on_error", false},
			"filter_mode":        {"filter_mode", false},
			"github_token":       {"github_token", true},
			"level":              {"level", false},
			"reporter":           {"reporter", false},
			"reviewdog_flags":    {"reviewdog_flags", false},
			"rubocop_extensions": {"rubocop_extensions", false},
			"rubocop_flags":      {"rubocop_flags", false},
			"rubocop_version":    {"rubocop_version", false},
			"skip_install":       {"skip_install", false},
			"tool_name":          {"tool_name", false},
			"use_bundler":        {"use_bundler", false},
			"workdir":            {"workdir", false},
		},
	},
	"reviewdog/action-rubocop@v2": {
		Name: "Run rubocop with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_on_error":      {"fail_on_error", false},
			"filter_mode":        {"filter_mode", false},
			"github_token":       {"github_token", false},
			"level":              {"level", false},
			"reporter":           {"reporter", false},
			"reviewdog_flags":    {"reviewdog_flags", false},
			"rubocop_extensions": {"rubocop_extensions", false},
			"rubocop_flags":      {"rubocop_flags", false},
			"rubocop_version":    {"rubocop_version", false},
			"skip_install":       {"skip_install", false},
			"tool_name":          {"tool_name", false},
			"use_bundler":        {"use_bundler", false},
			"workdir":            {"workdir", false},
		},
	},
	"reviewdog/action-shellcheck@v1": {
		Name: "Run shellcheck with reviewdog",
		Inputs: ActionMetadataInputs{
			"check_all_files_with_shebangs": {"check_all_files_with_shebangs", false},
			"exclude":                       {"exclude", false},
			"fail_on_error":                 {"fail_on_error", false},
			"filter_mode":                   {"filter_mode", false},
			"github_token":                  {"github_token", false},
			"level":                         {"level", false},
			"path":                          {"path", false},
			"pattern":                       {"pattern", false},
			"reporter":                      {"reporter", false},
			"reviewdog_flags":               {"reviewdog_flags", false},
			"shellcheck_flags":              {"shellcheck_flags", false},
		},
	},
	"reviewdog/action-tflint@v1": {
		Name: "Run tflint with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_on_error":     {"fail_on_error", false},
			"filter_mode":       {"filter_mode", false},
			"flags":             {"flags", false},
			"github_token":      {"github_token", false},
			"level":             {"level", false},
			"reporter":          {"reporter", false},
			"tflint_config":     {"tflint_config", false},
			"tflint_init":       {"tflint_init", false},
			"tflint_rulesets":   {"tflint_rulesets", false},
			"tflint_target_dir": {"tflint_target_dir", false},
			"tflint_version":    {"tflint_version", false},
			"working_directory": {"working_directory", false},
		},
		Outputs: ActionMetadataOutputs{
			"reviewdog-return-code": {"reviewdog-return-code"},
			"tflint-return-code":    {"tflint-return-code"},
		},
	},
	"rhysd/action-setup-vim@v1": {
		Name: "Setup Vim",
		Inputs: ActionMetadataInputs{
			"configure-args": {"configure-args", false},
			"neovim":         {"neovim", false},
			"token":          {"token", false},
			"version":        {"version", false},
		},
		Outputs: ActionMetadataOutputs{
			"executable": {"executable"},
		},
	},
	"ridedott/merge-me-action@v1": {
		Name: "Merge me!",
		Inputs: ActionMetadataInputs{
			"github_login": {"GITHUB_LOGIN", false},
			"github_token": {"GITHUB_TOKEN", true},
			"merge_method": {"MERGE_METHOD", false},
			"preset":       {"PRESET", false},
		},
	},
	"ridedott/merge-me-action@v2": {
		Name: "Merge me!",
		Inputs: ActionMetadataInputs{
			"enable_github_api_preview":  {"ENABLE_GITHUB_API_PREVIEW", false},
			"enabled_for_manual_changes": {"ENABLED_FOR_MANUAL_CHANGES", false},
			"github_login":               {"GITHUB_LOGIN", false},
			"github_token":               {"GITHUB_TOKEN", true},
			"maximum_retries":            {"MAXIMUM_RETRIES", false},
			"merge_method":               {"MERGE_METHOD", false},
			"preset":                     {"PRESET", false},
		},
	},
	"rtCamp/action-slack-notify@v2": {
		Name: "Slack Notify",
	},
	"ruby/setup-ruby@v1": {
		Name: "Setup Ruby, JRuby and TruffleRuby",
		Inputs: ActionMetadataInputs{
			"bundler":           {"bundler", false},
			"bundler-cache":     {"bundler-cache", false},
			"cache-version":     {"cache-version", false},
			"ruby-version":      {"ruby-version", false},
			"rubygems":          {"rubygems", false},
			"self-hosted":       {"self-hosted", false},
			"working-directory": {"working-directory", false},
		},
		Outputs: ActionMetadataOutputs{
			"ruby-prefix": {"ruby-prefix"},
		},
	},
	"shivammathur/setup-php@v1": {
		Name: "Setup PHP Action",
		Inputs: ActionMetadataInputs{
			"coverage":       {"coverage", false},
			"extension-csv":  {"extension-csv", false},
			"extensions":     {"extensions", false},
			"ini-values":     {"ini-values", false},
			"ini-values-csv": {"ini-values-csv", false},
			"pecl":           {"pecl", false},
			"php-version":    {"php-version", false},
			"tools":          {"tools", false},
		},
	},
	"shivammathur/setup-php@v2": {
		Name: "Setup PHP Action",
		Inputs: ActionMetadataInputs{
			"coverage":         {"coverage", false},
			"extensions":       {"extensions", false},
			"ini-file":         {"ini-file", false},
			"ini-values":       {"ini-values", false},
			"php-version":      {"php-version", false},
			"php-version-file": {"php-version-file", false},
			"tools":            {"tools", false},
		},
		Outputs: ActionMetadataOutputs{
			"php-version": {"php-version"},
		},
	},
	"softprops/action-gh-release@v1": {
		Name: "GH Release",
		Inputs: ActionMetadataInputs{
			"append_body":              {"append_body", false},
			"body":                     {"body", false},
			"body_path":                {"body_path", false},
			"discussion_category_name": {"discussion_category_name", false},
			"draft":                    {"draft", false},
			"fail_on_unmatched_files":  {"fail_on_unmatched_files", false},
			"files":                    {"files", false},
			"generate_release_notes":   {"generate_release_notes", false},
			"name":                     {"name", false},
			"prerelease":               {"prerelease", false},
			"repository":               {"repository", false},
			"tag_name":                 {"tag_name", false},
			"target_commitish":         {"target_commitish", false},
			"token":                    {"token", false},
		},
		Outputs: ActionMetadataOutputs{
			"assets":     {"assets"},
			"id":         {"id"},
			"upload_url": {"upload_url"},
			"url":        {"url"},
		},
	},
	"subosito/flutter-action@v1": {
		Name: "Flutter action",
		Inputs: ActionMetadataInputs{
			"channel":         {"channel", false},
			"flutter-version": {"flutter-version", false},
		},
	},
	"subosito/flutter-action@v2": {
		Name: "Flutter action",
		Inputs: ActionMetadataInputs{
			"architecture":    {"architecture", false},
			"cache":           {"cache", false},
			"cache-key":       {"cache-key", false},
			"cache-path":      {"cache-path", false},
			"channel":         {"channel", false},
			"flutter-version": {"flutter-version", false},
		},
		Outputs: ActionMetadataOutputs{
			"architecture": {"ARCHITECTURE"},
			"cache-key":    {"CACHE-KEY"},
			"cache-path":   {"CACHE-PATH"},
			"channel":      {"CHANNEL"},
			"version":      {"VERSION"},
		},
	},
	"treosh/lighthouse-ci-action@v1": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"url":  {"url", false},
			"urls": {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"resultspath": {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v10": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"artifactname":           {"artifactName", false},
			"basicauthpassword":      {"basicAuthPassword", false},
			"basicauthusername":      {"basicAuthUsername", false},
			"budgetpath":             {"budgetPath", false},
			"configpath":             {"configPath", false},
			"runs":                   {"runs", false},
			"serverbaseurl":          {"serverBaseUrl", false},
			"servertoken":            {"serverToken", false},
			"temporarypublicstorage": {"temporaryPublicStorage", false},
			"uploadartifacts":        {"uploadArtifacts", false},
			"urls":                   {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v2": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"budgetpath":             {"budgetPath", false},
			"configpath":             {"configPath", false},
			"runs":                   {"runs", false},
			"serverbaseurl":          {"serverBaseUrl", false},
			"servertoken":            {"serverToken", false},
			"temporarypublicstorage": {"temporaryPublicStorage", false},
			"uploadartifacts":        {"uploadArtifacts", false},
			"urls":                   {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"resultspath": {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v3": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"basicauthpassword":      {"basicAuthPassword", false},
			"basicauthusername":      {"basicAuthUsername", false},
			"budgetpath":             {"budgetPath", false},
			"configpath":             {"configPath", false},
			"runs":                   {"runs", false},
			"serverbaseurl":          {"serverBaseUrl", false},
			"servertoken":            {"serverToken", false},
			"temporarypublicstorage": {"temporaryPublicStorage", false},
			"uploadartifacts":        {"uploadArtifacts", false},
			"urls":                   {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v7": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"basicauthpassword":      {"basicAuthPassword", false},
			"basicauthusername":      {"basicAuthUsername", false},
			"budgetpath":             {"budgetPath", false},
			"configpath":             {"configPath", false},
			"runs":                   {"runs", false},
			"serverbaseurl":          {"serverBaseUrl", false},
			"servertoken":            {"serverToken", false},
			"temporarypublicstorage": {"temporaryPublicStorage", false},
			"uploadartifacts":        {"uploadArtifacts", false},
			"urls":                   {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v8": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"artifactname":           {"artifactName", false},
			"basicauthpassword":      {"basicAuthPassword", false},
			"basicauthusername":      {"basicAuthUsername", false},
			"budgetpath":             {"budgetPath", false},
			"configpath":             {"configPath", false},
			"runs":                   {"runs", false},
			"serverbaseurl":          {"serverBaseUrl", false},
			"servertoken":            {"serverToken", false},
			"temporarypublicstorage": {"temporaryPublicStorage", false},
			"uploadartifacts":        {"uploadArtifacts", false},
			"urls":                   {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v9": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"artifactname":           {"artifactName", false},
			"basicauthpassword":      {"basicAuthPassword", false},
			"basicauthusername":      {"basicAuthUsername", false},
			"budgetpath":             {"budgetPath", false},
			"configpath":             {"configPath", false},
			"runs":                   {"runs", false},
			"serverbaseurl":          {"serverBaseUrl", false},
			"servertoken":            {"serverToken", false},
			"temporarypublicstorage": {"temporaryPublicStorage", false},
			"uploadartifacts":        {"uploadArtifacts", false},
			"urls":                   {"urls", false},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
	"wearerequired/lint-action@v1": {
		Name: "Lint Action",
		Inputs: ActionMetadataInputs{
			"auto_fix":                             {"auto_fix", false},
			"black":                                {"black", false},
			"black_args":                           {"black_args", false},
			"black_command_prefix":                 {"black_command_prefix", false},
			"black_dir":                            {"black_dir", false},
			"black_extensions":                     {"black_extensions", false},
			"check_name":                           {"check_name", false},
			"commit_message":                       {"commit_message", false},
			"continue_on_error":                    {"continue_on_error", false},
			"dotnet_format":                        {"dotnet_format", false},
			"dotnet_format_args":                   {"dotnet_format_args", false},
			"dotnet_format_command_prefix":         {"dotnet_format_command_prefix", false},
			"dotnet_format_dir":                    {"dotnet_format_dir", false},
			"dotnet_format_extensions":             {"dotnet_format_extensions", false},
			"erblint":                              {"erblint", false},
			"erblint_args":                         {"erblint_args", false},
			"erblint_command_prefix":               {"erblint_command_prefix", false},
			"erblint_dir":                          {"erblint_dir", false},
			"erblint_extensions":                   {"erblint_extensions", false},
			"eslint":                               {"eslint", false},
			"eslint_args":                          {"eslint_args", false},
			"eslint_command_prefix":                {"eslint_command_prefix", false},
			"eslint_dir":                           {"eslint_dir", false},
			"eslint_extensions":                    {"eslint_extensions", false},
			"flake8":                               {"flake8", false},
			"flake8_args":                          {"flake8_args", false},
			"flake8_command_prefix":                {"flake8_command_prefix", false},
			"flake8_dir":                           {"flake8_dir", false},
			"flake8_extensions":                    {"flake8_extensions", false},
			"git_email":                            {"git_email", false},
			"git_name":                             {"git_name", false},
			"git_no_verify":                        {"git_no_verify", false},
			"github_token":                         {"github_token", false},
			"gofmt":                                {"gofmt", false},
			"gofmt_args":                           {"gofmt_args", false},
			"gofmt_command_prefix":                 {"gofmt_command_prefix", false},
			"gofmt_dir":                            {"gofmt_dir", false},
			"gofmt_extensions":                     {"gofmt_extensions", false},
			"golint":                               {"golint", false},
			"golint_args":                          {"golint_args", false},
			"golint_command_prefix":                {"golint_command_prefix", false},
			"golint_dir":                           {"golint_dir", false},
			"golint_extensions":                    {"golint_extensions", false},
			"mypy":                                 {"mypy", false},
			"mypy_args":                            {"mypy_args", false},
			"mypy_command_prefix":                  {"mypy_command_prefix", false},
			"mypy_dir":                             {"mypy_dir", false},
			"mypy_extensions":                      {"mypy_extensions", false},
			"neutral_check_on_warning":             {"neutral_check_on_warning", false},
			"oitnb":                                {"oitnb", false},
			"oitnb_args":                           {"oitnb_args", false},
			"oitnb_command_prefix":                 {"oitnb_command_prefix", false},
			"oitnb_dir":                            {"oitnb_dir", false},
			"oitnb_extensions":                     {"oitnb_extensions", false},
			"php_codesniffer":                      {"php_codesniffer", false},
			"php_codesniffer_args":                 {"php_codesniffer_args", false},
			"php_codesniffer_command_prefix":       {"php_codesniffer_command_prefix", false},
			"php_codesniffer_dir":                  {"php_codesniffer_dir", false},
			"php_codesniffer_extensions":           {"php_codesniffer_extensions", false},
			"prettier":                             {"prettier", false},
			"prettier_args":                        {"prettier_args", false},
			"prettier_command_prefix":              {"prettier_command_prefix", false},
			"prettier_dir":                         {"prettier_dir", false},
			"prettier_extensions":                  {"prettier_extensions", false},
			"rubocop":                              {"rubocop", false},
			"rubocop_args":                         {"rubocop_args", false},
			"rubocop_command_prefix":               {"rubocop_command_prefix", false},
			"rubocop_dir":                          {"rubocop_dir", false},
			"rubocop_extensions":                   {"rubocop_extensions", false},
			"stylelint":                            {"stylelint", false},
			"stylelint_args":                       {"stylelint_args", false},
			"stylelint_command_prefix":             {"stylelint_command_prefix", false},
			"stylelint_dir":                        {"stylelint_dir", false},
			"stylelint_extensions":                 {"stylelint_extensions", false},
			"swift_format_lockwood":                {"swift_format_lockwood", false},
			"swift_format_lockwood_args":           {"swift_format_lockwood_args", false},
			"swift_format_lockwood_command_prefix": {"swift_format_lockwood_command_prefix", false},
			"swift_format_lockwood_dir":            {"swift_format_lockwood_dir", false},
			"swift_format_lockwood_extensions":     {"swift_format_lockwood_extensions", false},
			"swift_format_official":                {"swift_format_official", false},
			"swift_format_official_args":           {"swift_format_official_args", false},
			"swift_format_official_command_prefix": {"swift_format_official_command_prefix", false},
			"swift_format_official_dir":            {"swift_format_official_dir", false},
			"swift_format_official_extensions":     {"swift_format_official_extensions", false},
			"swiftformat":                          {"swiftformat", false},
			"swiftformat_args":                     {"swiftformat_args", false},
			"swiftformat_command_prefix":           {"swiftformat_command_prefix", false},
			"swiftformat_dir":                      {"swiftformat_dir", false},
			"swiftformat_extensions":               {"swiftformat_extensions", false},
			"swiftlint":                            {"swiftlint", false},
			"swiftlint_args":                       {"swiftlint_args", false},
			"swiftlint_command_prefix":             {"swiftlint_command_prefix", false},
			"swiftlint_dir":                        {"swiftlint_dir", false},
			"swiftlint_extensions":                 {"swiftlint_extensions", false},
			"xo":                                   {"xo", false},
			"xo_args":                              {"xo_args", false},
			"xo_command_prefix":                    {"xo_command_prefix", false},
			"xo_dir":                               {"xo_dir", false},
			"xo_extensions":                        {"xo_extensions", false},
		},
	},
	"wearerequired/lint-action@v2": {
		Name: "Lint Action",
		Inputs: ActionMetadataInputs{
			"auto_fix":                             {"auto_fix", false},
			"autopep8":                             {"autopep8", false},
			"autopep8_args":                        {"autopep8_args", false},
			"autopep8_auto_fix":                    {"autopep8_auto_fix", false},
			"autopep8_command_prefix":              {"autopep8_command_prefix", false},
			"autopep8_dir":                         {"autopep8_dir", false},
			"autopep8_extensions":                  {"autopep8_extensions", false},
			"black":                                {"black", false},
			"black_args":                           {"black_args", false},
			"black_auto_fix":                       {"black_auto_fix", false},
			"black_command_prefix":                 {"black_command_prefix", false},
			"black_dir":                            {"black_dir", false},
			"black_extensions":                     {"black_extensions", false},
			"check_name":                           {"check_name", false},
			"clang_format":                         {"clang_format", false},
			"clang_format_args":                    {"clang_format_args", false},
			"clang_format_auto_fix":                {"clang_format_auto_fix", false},
			"clang_format_command_prefix":          {"clang_format_command_prefix", false},
			"clang_format_dir":                     {"clang_format_dir", false},
			"clang_format_extensions":              {"clang_format_extensions", false},
			"commit":                               {"commit", false},
			"commit_message":                       {"commit_message", false},
			"continue_on_error":                    {"continue_on_error", false},
			"dotnet_format":                        {"dotnet_format", false},
			"dotnet_format_args":                   {"dotnet_format_args", false},
			"dotnet_format_auto_fix":               {"dotnet_format_auto_fix", false},
			"dotnet_format_command_prefix":         {"dotnet_format_command_prefix", false},
			"dotnet_format_dir":                    {"dotnet_format_dir", false},
			"dotnet_format_extensions":             {"dotnet_format_extensions", false},
			"erblint":                              {"erblint", false},
			"erblint_args":                         {"erblint_args", false},
			"erblint_auto_fix":                     {"erblint_auto_fix", false},
			"erblint_command_prefix":               {"erblint_command_prefix", false},
			"erblint_dir":                          {"erblint_dir", false},
			"erblint_extensions":                   {"erblint_extensions", false},
			"eslint":                               {"eslint", false},
			"eslint_args":                          {"eslint_args", false},
			"eslint_auto_fix":                      {"eslint_auto_fix", false},
			"eslint_command_prefix":                {"eslint_command_prefix", false},
			"eslint_dir":                           {"eslint_dir", false},
			"eslint_extensions":                    {"eslint_extensions", false},
			"flake8":                               {"flake8", false},
			"flake8_args":                          {"flake8_args", false},
			"flake8_auto_fix":                      {"flake8_auto_fix", false},
			"flake8_command_prefix":                {"flake8_command_prefix", false},
			"flake8_dir":                           {"flake8_dir", false},
			"flake8_extensions":                    {"flake8_extensions", false},
			"git_email":                            {"git_email", false},
			"git_name":                             {"git_name", false},
			"git_no_verify":                        {"git_no_verify", false},
			"github_token":                         {"github_token", false},
			"gofmt":                                {"gofmt", false},
			"gofmt_args":                           {"gofmt_args", false},
			"gofmt_auto_fix":                       {"gofmt_auto_fix", false},
			"gofmt_command_prefix":                 {"gofmt_command_prefix", false},
			"gofmt_dir":                            {"gofmt_dir", false},
			"gofmt_extensions":                     {"gofmt_extensions", false},
			"golint":                               {"golint", false},
			"golint_args":                          {"golint_args", false},
			"golint_auto_fix":                      {"golint_auto_fix", false},
			"golint_command_prefix":                {"golint_command_prefix", false},
			"golint_dir":                           {"golint_dir", false},
			"golint_extensions":                    {"golint_extensions", false},
			"mypy":                                 {"mypy", false},
			"mypy_args":                            {"mypy_args", false},
			"mypy_auto_fix":                        {"mypy_auto_fix", false},
			"mypy_command_prefix":                  {"mypy_command_prefix", false},
			"mypy_dir":                             {"mypy_dir", false},
			"mypy_extensions":                      {"mypy_extensions", false},
			"neutral_check_on_warning":             {"neutral_check_on_warning", false},
			"oitnb":                                {"oitnb", false},
			"oitnb_args":                           {"oitnb_args", false},
			"oitnb_auto_fix":                       {"oitnb_auto_fix", false},
			"oitnb_command_prefix":                 {"oitnb_command_prefix", false},
			"oitnb_dir":                            {"oitnb_dir", false},
			"oitnb_extensions":                     {"oitnb_extensions", false},
			"php_codesniffer":                      {"php_codesniffer", false},
			"php_codesniffer_args":                 {"php_codesniffer_args", false},
			"php_codesniffer_auto_fix":             {"php_codesniffer_auto_fix", false},
			"php_codesniffer_command_prefix":       {"php_codesniffer_command_prefix", false},
			"php_codesniffer_dir":                  {"php_codesniffer_dir", false},
			"php_codesniffer_extensions":           {"php_codesniffer_extensions", false},
			"prettier":                             {"prettier", false},
			"prettier_args":                        {"prettier_args", false},
			"prettier_auto_fix":                    {"prettier_auto_fix", false},
			"prettier_command_prefix":              {"prettier_command_prefix", false},
			"prettier_dir":                         {"prettier_dir", false},
			"prettier_extensions":                  {"prettier_extensions", false},
			"pylint":                               {"pylint", false},
			"pylint_args":                          {"pylint_args", false},
			"pylint_auto_fix":                      {"pylint_auto_fix", false},
			"pylint_command_prefix":                {"pylint_command_prefix", false},
			"pylint_dir":                           {"pylint_dir", false},
			"pylint_extensions":                    {"pylint_extensions", false},
			"rubocop":                              {"rubocop", false},
			"rubocop_args":                         {"rubocop_args", false},
			"rubocop_auto_fix":                     {"rubocop_auto_fix", false},
			"rubocop_command_prefix":               {"rubocop_command_prefix", false},
			"rubocop_dir":                          {"rubocop_dir", false},
			"rubocop_extensions":                   {"rubocop_extensions", false},
			"stylelint":                            {"stylelint", false},
			"stylelint_args":                       {"stylelint_args", false},
			"stylelint_auto_fix":                   {"stylelint_auto_fix", false},
			"stylelint_command_prefix":             {"stylelint_command_prefix", false},
			"stylelint_dir":                        {"stylelint_dir", false},
			"stylelint_extensions":                 {"stylelint_extensions", false},
			"swift_format_lockwood":                {"swift_format_lockwood", false},
			"swift_format_lockwood_args":           {"swift_format_lockwood_args", false},
			"swift_format_lockwood_auto_fix":       {"swift_format_lockwood_auto_fix", false},
			"swift_format_lockwood_command_prefix": {"swift_format_lockwood_command_prefix", false},
			"swift_format_lockwood_dir":            {"swift_format_lockwood_dir", false},
			"swift_format_lockwood_extensions":     {"swift_format_lockwood_extensions", false},
			"swift_format_official":                {"swift_format_official", false},
			"swift_format_official_args":           {"swift_format_official_args", false},
			"swift_format_official_auto_fix":       {"swift_format_official_auto_fix", false},
			"swift_format_official_command_prefix": {"swift_format_official_command_prefix", false},
			"swift_format_official_dir":            {"swift_format_official_dir", false},
			"swift_format_official_extensions":     {"swift_format_official_extensions", false},
			"swiftformat":                          {"swiftformat", false},
			"swiftformat_args":                     {"swiftformat_args", false},
			"swiftformat_auto_fix":                 {"swiftformat_auto_fix", false},
			"swiftformat_command_prefix":           {"swiftformat_command_prefix", false},
			"swiftformat_dir":                      {"swiftformat_dir", false},
			"swiftformat_extensions":               {"swiftformat_extensions", false},
			"swiftlint":                            {"swiftlint", false},
			"swiftlint_args":                       {"swiftlint_args", false},
			"swiftlint_auto_fix":                   {"swiftlint_auto_fix", false},
			"swiftlint_command_prefix":             {"swiftlint_command_prefix", false},
			"swiftlint_dir":                        {"swiftlint_dir", false},
			"swiftlint_extensions":                 {"swiftlint_extensions", false},
			"tsc":                                  {"tsc", false},
			"tsc_args":                             {"tsc_args", false},
			"tsc_auto_fix":                         {"tsc_auto_fix", false},
			"tsc_command_prefix":                   {"tsc_command_prefix", false},
			"tsc_dir":                              {"tsc_dir", false},
			"tsc_extensions":                       {"tsc_extensions", false},
			"xo":                                   {"xo", false},
			"xo_args":                              {"xo_args", false},
			"xo_auto_fix":                          {"xo_auto_fix", false},
			"xo_command_prefix":                    {"xo_command_prefix", false},
			"xo_dir":                               {"xo_dir", false},
			"xo_extensions":                        {"xo_extensions", false},
		},
	},
}
