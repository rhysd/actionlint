// Code generated by actionlint/scripts/generate-popular-actions. DO NOT EDIT.

package actionlint

// PopularActions is data set of known popular actions. Keys are specs (owner/repo@ref) of actions
// and values are their metadata.
var PopularActions = map[string]*ActionMetadata{
	"8398a7/action-slack@v3": {
		Name: "action-slack",
		Inputs: ActionMetadataInputs{
			"author_name":       {"author_name", false, false, ""},
			"cancelled_message": {"cancelled_message", false, false, ""},
			"channel":           {"channel", false, false, ""},
			"custom_payload":    {"custom_payload", false, false, ""},
			"failure_message":   {"failure_message", false, false, ""},
			"fields":            {"fields", false, false, ""},
			"github_base_url":   {"github_base_url", false, false, ""},
			"github_token":      {"github_token", false, false, ""},
			"icon_emoji":        {"icon_emoji", false, false, ""},
			"icon_url":          {"icon_url", false, false, ""},
			"if_mention":        {"if_mention", false, false, ""},
			"job_name":          {"job_name", false, false, ""},
			"mention":           {"mention", false, false, ""},
			"status":            {"status", true, false, ""},
			"success_message":   {"success_message", false, false, ""},
			"text":              {"text", false, false, ""},
			"username":          {"username", false, false, ""},
		},
	},
	"Azure/functions-action@v1": {
		Name: "Azure Functions Action",
		Inputs: ActionMetadataInputs{
			"app-name":                       {"app-name", true, false, ""},
			"enable-oryx-build":              {"enable-oryx-build", false, false, ""},
			"package":                        {"package", false, false, ""},
			"publish-profile":                {"publish-profile", false, false, ""},
			"remote-build":                   {"remote-build", false, false, ""},
			"respect-funcignore":             {"respect-funcignore", false, false, ""},
			"respect-pom-xml":                {"respect-pom-xml", false, false, ""},
			"scm-do-build-during-deployment": {"scm-do-build-during-deployment", false, false, ""},
			"sku":                            {"sku", false, false, ""},
			"slot-name":                      {"slot-name", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"app-url":     {"app-url"},
			"package-url": {"package-url"},
		},
	},
	"EnricoMi/publish-unit-test-result-action@v1": {
		Name: "Publish Test Results",
		Inputs: ActionMetadataInputs{
			"check_name":                       {"check_name", false, false, ""},
			"check_run_annotations":            {"check_run_annotations", false, false, ""},
			"check_run_annotations_branch":     {"check_run_annotations_branch", false, false, ""},
			"comment_mode":                     {"comment_mode", false, false, ""},
			"comment_on_pr":                    {"comment_on_pr", false, false, ""},
			"comment_title":                    {"comment_title", false, false, ""},
			"commit":                           {"commit", false, false, ""},
			"compare_to_earlier_commit":        {"compare_to_earlier_commit", false, false, ""},
			"deduplicate_classes_by_file_name": {"deduplicate_classes_by_file_name", false, false, ""},
			"event_file":                       {"event_file", false, false, ""},
			"event_name":                       {"event_name", false, false, ""},
			"fail_on":                          {"fail_on", false, false, ""},
			"files":                            {"files", true, false, ""},
			"github_retries":                   {"github_retries", false, false, ""},
			"github_token":                     {"github_token", false, false, ""},
			"hide_comments":                    {"hide_comments", false, false, ""},
			"ignore_runs":                      {"ignore_runs", false, false, ""},
			"job_summary":                      {"job_summary", false, false, ""},
			"json_file":                        {"json_file", false, false, ""},
			"json_thousands_separator":         {"json_thousands_separator", false, false, ""},
			"pull_request_build":               {"pull_request_build", false, false, ""},
			"report_individual_runs":           {"report_individual_runs", false, false, ""},
			"seconds_between_github_reads":     {"seconds_between_github_reads", false, false, ""},
			"seconds_between_github_writes":    {"seconds_between_github_writes", false, false, ""},
			"test_changes_limit":               {"test_changes_limit", false, false, ""},
			"time_unit":                        {"time_unit", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"json": {"json"},
		},
	},
	"EnricoMi/publish-unit-test-result-action@v2": {
		Name: "Publish Test Results",
		Inputs: ActionMetadataInputs{
			"action_fail":                       {"action_fail", false, false, ""},
			"action_fail_on_inconclusive":       {"action_fail_on_inconclusive", false, false, ""},
			"check_name":                        {"check_name", false, false, ""},
			"check_run":                         {"check_run", false, false, ""},
			"check_run_annotations":             {"check_run_annotations", false, false, ""},
			"check_run_annotations_branch":      {"check_run_annotations_branch", false, false, ""},
			"comment_mode":                      {"comment_mode", false, false, ""},
			"comment_title":                     {"comment_title", false, false, ""},
			"commit":                            {"commit", false, false, ""},
			"compare_to_earlier_commit":         {"compare_to_earlier_commit", false, false, ""},
			"deduplicate_classes_by_file_name":  {"deduplicate_classes_by_file_name", false, false, ""},
			"event_file":                        {"event_file", false, false, ""},
			"event_name":                        {"event_name", false, false, ""},
			"fail_on":                           {"fail_on", false, false, ""},
			"files":                             {"files", false, false, ""},
			"github_retries":                    {"github_retries", false, false, ""},
			"github_token":                      {"github_token", false, false, ""},
			"github_token_actor":                {"github_token_actor", false, true, "This is not needed any more as this is detected automatically."},
			"ignore_runs":                       {"ignore_runs", false, false, ""},
			"job_summary":                       {"job_summary", false, false, ""},
			"json_file":                         {"json_file", false, false, ""},
			"json_suite_details":                {"json_suite_details", false, false, ""},
			"json_test_case_results":            {"json_test_case_results", false, false, ""},
			"json_thousands_separator":          {"json_thousands_separator", false, false, ""},
			"junit_files":                       {"junit_files", false, true, "Use \"files\" option instead."},
			"large_files":                       {"large_files", false, false, ""},
			"nunit_files":                       {"nunit_files", false, true, "Use \"files\" option instead."},
			"pull_request_build":                {"pull_request_build", false, false, ""},
			"report_individual_runs":            {"report_individual_runs", false, false, ""},
			"report_suite_logs":                 {"report_suite_logs", false, false, ""},
			"search_pull_requests":              {"search_pull_requests", false, false, ""},
			"secondary_rate_limit_wait_seconds": {"secondary_rate_limit_wait_seconds", false, false, ""},
			"seconds_between_github_reads":      {"seconds_between_github_reads", false, false, ""},
			"seconds_between_github_writes":     {"seconds_between_github_writes", false, false, ""},
			"ssl_verify":                        {"ssl_verify", false, false, ""},
			"test_changes_limit":                {"test_changes_limit", false, false, ""},
			"test_file_prefix":                  {"test_file_prefix", false, false, ""},
			"time_unit":                         {"time_unit", false, false, ""},
			"trx_files":                         {"trx_files", false, true, "Use \"files\" option instead."},
			"xunit_files":                       {"xunit_files", false, true, "Use \"files\" option instead."},
		},
		Outputs: ActionMetadataOutputs{
			"json": {"json"},
		},
	},
	"JamesIves/github-pages-deploy-action@v4": {
		Name: "Deploy to GitHub Pages",
		Inputs: ActionMetadataInputs{
			"attempt-limit":    {"attempt-limit", false, false, ""},
			"branch":           {"branch", false, false, ""},
			"clean":            {"clean", false, false, ""},
			"clean-exclude":    {"clean-exclude", false, false, ""},
			"commit-message":   {"commit-message", false, false, ""},
			"dry-run":          {"dry-run", false, false, ""},
			"folder":           {"folder", true, false, ""},
			"force":            {"force", false, false, ""},
			"git-config-email": {"git-config-email", false, false, ""},
			"git-config-name":  {"git-config-name", false, false, ""},
			"repository-name":  {"repository-name", false, false, ""},
			"silent":           {"silent", false, false, ""},
			"single-commit":    {"single-commit", false, false, ""},
			"ssh-key":          {"ssh-key", false, false, ""},
			"tag":              {"tag", false, false, ""},
			"target-folder":    {"target-folder", false, false, ""},
			"token":            {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"deployment-status": {"deployment-status"},
		},
	},
	"ReactiveCircus/android-emulator-runner@v2": {
		Name: "Android Emulator Runner",
		Inputs: ActionMetadataInputs{
			"api-level":                  {"api-level", true, false, ""},
			"arch":                       {"arch", false, false, ""},
			"avd-name":                   {"avd-name", false, false, ""},
			"channel":                    {"channel", false, false, ""},
			"cmake":                      {"cmake", false, false, ""},
			"cores":                      {"cores", false, false, ""},
			"disable-animations":         {"disable-animations", false, false, ""},
			"disable-linux-hw-accel":     {"disable-linux-hw-accel", false, false, ""},
			"disable-spellchecker":       {"disable-spellchecker", false, false, ""},
			"disk-size":                  {"disk-size", false, false, ""},
			"emulator-boot-timeout":      {"emulator-boot-timeout", false, false, ""},
			"emulator-build":             {"emulator-build", false, false, ""},
			"emulator-options":           {"emulator-options", false, false, ""},
			"emulator-port":              {"emulator-port", false, false, ""},
			"enable-hw-keyboard":         {"enable-hw-keyboard", false, false, ""},
			"force-avd-creation":         {"force-avd-creation", false, false, ""},
			"heap-size":                  {"heap-size", false, false, ""},
			"ndk":                        {"ndk", false, false, ""},
			"pre-emulator-launch-script": {"pre-emulator-launch-script", false, false, ""},
			"profile":                    {"profile", false, false, ""},
			"ram-size":                   {"ram-size", false, false, ""},
			"script":                     {"script", true, false, ""},
			"sdcard-path-or-size":        {"sdcard-path-or-size", false, false, ""},
			"system-image-api-level":     {"system-image-api-level", false, false, ""},
			"target":                     {"target", false, false, ""},
			"working-directory":          {"working-directory", false, false, ""},
		},
	},
	"SamKirkland/FTP-Deploy-Action@v4.3.6": {
		Name: "FTP Deploy",
		Inputs: ActionMetadataInputs{
			"dangerous-clean-slate": {"dangerous-clean-slate", false, false, ""},
			"dry-run":               {"dry-run", false, false, ""},
			"exclude":               {"exclude", false, false, ""},
			"local-dir":             {"local-dir", false, false, ""},
			"log-level":             {"log-level", false, false, ""},
			"password":              {"password", true, false, ""},
			"port":                  {"port", false, false, ""},
			"protocol":              {"protocol", false, false, ""},
			"security":              {"security", false, false, ""},
			"server":                {"server", true, false, ""},
			"server-dir":            {"server-dir", false, false, ""},
			"state-name":            {"state-name", false, false, ""},
			"timeout":               {"timeout", false, false, ""},
			"username":              {"username", true, false, ""},
		},
	},
	"Swatinem/rust-cache@v2": {
		Name: "Rust Cache",
		Inputs: ActionMetadataInputs{
			"cache-all-crates":       {"cache-all-crates", false, false, ""},
			"cache-bin":              {"cache-bin", false, false, ""},
			"cache-directories":      {"cache-directories", false, false, ""},
			"cache-on-failure":       {"cache-on-failure", false, false, ""},
			"cache-provider":         {"cache-provider", false, false, ""},
			"cache-targets":          {"cache-targets", false, false, ""},
			"cache-workspace-crates": {"cache-workspace-crates", false, false, ""},
			"env-vars":               {"env-vars", false, false, ""},
			"key":                    {"key", false, false, ""},
			"lookup-only":            {"lookup-only", false, false, ""},
			"prefix-key":             {"prefix-key", false, false, ""},
			"save-if":                {"save-if", false, false, ""},
			"shared-key":             {"shared-key", false, false, ""},
			"workspaces":             {"workspaces", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions-cool/issues-helper@v3": {
		Name: "Issues Helper",
		Inputs: ActionMetadataInputs{
			"actions":                   {"actions", false, false, ""},
			"assign-command":            {"assign-command", false, false, ""},
			"assignee-includes":         {"assignee-includes", false, false, ""},
			"assignees":                 {"assignees", false, false, ""},
			"body":                      {"body", false, false, ""},
			"body-includes":             {"body-includes", false, false, ""},
			"close-issue":               {"close-issue", false, false, ""},
			"close-reason":              {"close-reason", false, false, ""},
			"comment-auth":              {"comment-auth", false, false, ""},
			"comment-id":                {"comment-id", false, false, ""},
			"create-issue-if-not-exist": {"create-issue-if-not-exist", false, false, ""},
			"direction":                 {"direction", false, false, ""},
			"duplicate-command":         {"duplicate-command", false, false, ""},
			"duplicate-labels":          {"duplicate-labels", false, false, ""},
			"emoji":                     {"emoji", false, false, ""},
			"exclude-labels":            {"exclude-labels", false, false, ""},
			"inactive-day":              {"inactive-day", false, false, ""},
			"inactive-label":            {"inactive-label", false, false, ""},
			"inactive-mode":             {"inactive-mode", false, false, ""},
			"issue-assignee":            {"issue-assignee", false, false, ""},
			"issue-creator":             {"issue-creator", false, false, ""},
			"issue-emoji":               {"issue-emoji", false, false, ""},
			"issue-mentioned":           {"issue-mentioned", false, false, ""},
			"issue-number":              {"issue-number", false, false, ""},
			"issue-state":               {"issue-state", false, false, ""},
			"label-color":               {"label-color", false, false, ""},
			"label-desc":                {"label-desc", false, false, ""},
			"label-name":                {"label-name", false, false, ""},
			"labels":                    {"labels", false, false, ""},
			"lock-reason":               {"lock-reason", false, false, ""},
			"random-to":                 {"random-to", false, false, ""},
			"remove-labels":             {"remove-labels", false, false, ""},
			"repo":                      {"repo", false, false, ""},
			"require-permission":        {"require-permission", false, false, ""},
			"show-thanks":               {"show-thanks", false, false, ""},
			"state":                     {"state", false, false, ""},
			"title":                     {"title", false, false, ""},
			"title-excludes":            {"title-excludes", false, false, ""},
			"title-includes":            {"title-includes", false, false, ""},
			"token":                     {"token", false, false, ""},
			"update-mode":               {"update-mode", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"check-result":    {"check-result"},
			"comment-id":      {"comment-id"},
			"comments":        {"comments"},
			"issue-assignees": {"issue-assignees"},
			"issue-body":      {"issue-body"},
			"issue-labels":    {"issue-labels"},
			"issue-number":    {"issue-number"},
			"issue-state":     {"issue-state"},
			"issue-title":     {"issue-title"},
			"issues":          {"issues"},
		},
	},
	"actions/add-to-project@v1.0.1": {
		Name: "Add To GitHub projects",
		Inputs: ActionMetadataInputs{
			"github-token":   {"github-token", true, false, ""},
			"label-operator": {"label-operator", false, false, ""},
			"labeled":        {"labeled", false, false, ""},
			"project-url":    {"project-url", true, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"itemid": {"itemId"},
		},
	},
	"actions/add-to-project@v1.0.2": {
		Name: "Add To GitHub projects",
		Inputs: ActionMetadataInputs{
			"github-token":   {"github-token", true, false, ""},
			"label-operator": {"label-operator", false, false, ""},
			"labeled":        {"labeled", false, false, ""},
			"project-url":    {"project-url", true, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"itemid": {"itemId"},
		},
	},
	"actions/ai-inference@v1": {
		Name: "AI Inference",
		Inputs: ActionMetadataInputs{
			"enable-github-mcp":  {"enable-github-mcp", false, false, ""},
			"endpoint":           {"endpoint", false, false, ""},
			"file_input":         {"file_input", false, false, ""},
			"github-mcp-token":   {"github-mcp-token", false, false, ""},
			"input":              {"input", false, false, ""},
			"max-tokens":         {"max-tokens", false, false, ""},
			"model":              {"model", false, false, ""},
			"prompt":             {"prompt", false, false, ""},
			"prompt-file":        {"prompt-file", false, false, ""},
			"system-prompt":      {"system-prompt", false, false, ""},
			"system-prompt-file": {"system-prompt-file", false, false, ""},
			"token":              {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"response":      {"response"},
			"response-file": {"response-file"},
		},
	},
	"actions/ai-inference@v2": {
		Name: "AI Inference",
		Inputs: ActionMetadataInputs{
			"enable-github-mcp":  {"enable-github-mcp", false, false, ""},
			"endpoint":           {"endpoint", false, false, ""},
			"file_input":         {"file_input", false, false, ""},
			"github-mcp-token":   {"github-mcp-token", false, false, ""},
			"input":              {"input", false, false, ""},
			"max-tokens":         {"max-tokens", false, false, ""},
			"model":              {"model", false, false, ""},
			"prompt":             {"prompt", false, false, ""},
			"prompt-file":        {"prompt-file", false, false, ""},
			"system-prompt":      {"system-prompt", false, false, ""},
			"system-prompt-file": {"system-prompt-file", false, false, ""},
			"token":              {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"response":      {"response"},
			"response-file": {"response-file"},
		},
	},
	"actions/attest-build-provenance@v1": {
		Name: "Attest Build Provenance",
		Inputs: ActionMetadataInputs{
			"github-token":     {"github-token", false, false, ""},
			"push-to-registry": {"push-to-registry", false, false, ""},
			"show-summary":     {"show-summary", false, false, ""},
			"subject-digest":   {"subject-digest", false, false, ""},
			"subject-name":     {"subject-name", false, false, ""},
			"subject-path":     {"subject-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"bundle-path": {"bundle-path"},
		},
	},
	"actions/attest-build-provenance@v2": {
		Name: "Attest Build Provenance",
		Inputs: ActionMetadataInputs{
			"github-token":      {"github-token", false, false, ""},
			"push-to-registry":  {"push-to-registry", false, false, ""},
			"show-summary":      {"show-summary", false, false, ""},
			"subject-checksums": {"subject-checksums", false, false, ""},
			"subject-digest":    {"subject-digest", false, false, ""},
			"subject-name":      {"subject-name", false, false, ""},
			"subject-path":      {"subject-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"attestation-id":  {"attestation-id"},
			"attestation-url": {"attestation-url"},
			"bundle-path":     {"bundle-path"},
		},
	},
	"actions/attest-build-provenance@v3": {
		Name: "Attest Build Provenance",
		Inputs: ActionMetadataInputs{
			"github-token":      {"github-token", false, false, ""},
			"push-to-registry":  {"push-to-registry", false, false, ""},
			"show-summary":      {"show-summary", false, false, ""},
			"subject-checksums": {"subject-checksums", false, false, ""},
			"subject-digest":    {"subject-digest", false, false, ""},
			"subject-name":      {"subject-name", false, false, ""},
			"subject-path":      {"subject-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"attestation-id":  {"attestation-id"},
			"attestation-url": {"attestation-url"},
			"bundle-path":     {"bundle-path"},
		},
	},
	"actions/attest-sbom@v1": {
		Name: "Attest SBOM",
		Inputs: ActionMetadataInputs{
			"github-token":     {"github-token", false, false, ""},
			"push-to-registry": {"push-to-registry", false, false, ""},
			"sbom-path":        {"sbom-path", true, false, ""},
			"show-summary":     {"show-summary", false, false, ""},
			"subject-digest":   {"subject-digest", false, false, ""},
			"subject-name":     {"subject-name", false, false, ""},
			"subject-path":     {"subject-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"bundle-path": {"bundle-path"},
		},
	},
	"actions/attest-sbom@v2": {
		Name: "Attest SBOM",
		Inputs: ActionMetadataInputs{
			"github-token":      {"github-token", false, false, ""},
			"push-to-registry":  {"push-to-registry", false, false, ""},
			"sbom-path":         {"sbom-path", true, false, ""},
			"show-summary":      {"show-summary", false, false, ""},
			"subject-checksums": {"subject-checksums", false, false, ""},
			"subject-digest":    {"subject-digest", false, false, ""},
			"subject-name":      {"subject-name", false, false, ""},
			"subject-path":      {"subject-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"attestation-id":  {"attestation-id"},
			"attestation-url": {"attestation-url"},
			"bundle-path":     {"bundle-path"},
		},
	},
	"actions/attest-sbom@v3": {
		Name: "Attest SBOM",
		Inputs: ActionMetadataInputs{
			"github-token":      {"github-token", false, false, ""},
			"push-to-registry":  {"push-to-registry", false, false, ""},
			"sbom-path":         {"sbom-path", true, false, ""},
			"show-summary":      {"show-summary", false, false, ""},
			"subject-checksums": {"subject-checksums", false, false, ""},
			"subject-digest":    {"subject-digest", false, false, ""},
			"subject-name":      {"subject-name", false, false, ""},
			"subject-path":      {"subject-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"attestation-id":  {"attestation-id"},
			"attestation-url": {"attestation-url"},
			"bundle-path":     {"bundle-path"},
		},
	},
	"actions/cache/restore@v4": {
		Name: "Restore Cache",
		Inputs: ActionMetadataInputs{
			"enablecrossosarchive": {"enableCrossOsArchive", false, false, ""},
			"fail-on-cache-miss":   {"fail-on-cache-miss", false, false, ""},
			"key":                  {"key", true, false, ""},
			"lookup-only":          {"lookup-only", false, false, ""},
			"path":                 {"path", true, false, ""},
			"restore-keys":         {"restore-keys", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":         {"cache-hit"},
			"cache-matched-key": {"cache-matched-key"},
			"cache-primary-key": {"cache-primary-key"},
		},
	},
	"actions/cache/save@v4": {
		Name: "Save a cache",
		Inputs: ActionMetadataInputs{
			"enablecrossosarchive": {"enableCrossOsArchive", false, false, ""},
			"key":                  {"key", true, false, ""},
			"path":                 {"path", true, false, ""},
			"upload-chunk-size":    {"upload-chunk-size", false, false, ""},
		},
	},
	"actions/cache@v4": {
		Name: "Cache",
		Inputs: ActionMetadataInputs{
			"enablecrossosarchive": {"enableCrossOsArchive", false, false, ""},
			"fail-on-cache-miss":   {"fail-on-cache-miss", false, false, ""},
			"key":                  {"key", true, false, ""},
			"lookup-only":          {"lookup-only", false, false, ""},
			"path":                 {"path", true, false, ""},
			"restore-keys":         {"restore-keys", false, false, ""},
			"save-always":          {"save-always", false, true, "save-always does not work as intended and will be removed in a future release.\nA separate `actions/cache/restore` step should be used instead.\nSee https://github.com/actions/cache/tree/main/save#always-save-cache for more details.\n"},
			"upload-chunk-size":    {"upload-chunk-size", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit": {"cache-hit"},
		},
	},
	"actions/checkout@v4": {
		Name: "Checkout",
		Inputs: ActionMetadataInputs{
			"clean":                     {"clean", false, false, ""},
			"fetch-depth":               {"fetch-depth", false, false, ""},
			"fetch-tags":                {"fetch-tags", false, false, ""},
			"filter":                    {"filter", false, false, ""},
			"github-server-url":         {"github-server-url", false, false, ""},
			"lfs":                       {"lfs", false, false, ""},
			"path":                      {"path", false, false, ""},
			"persist-credentials":       {"persist-credentials", false, false, ""},
			"ref":                       {"ref", false, false, ""},
			"repository":                {"repository", false, false, ""},
			"set-safe-directory":        {"set-safe-directory", false, false, ""},
			"show-progress":             {"show-progress", false, false, ""},
			"sparse-checkout":           {"sparse-checkout", false, false, ""},
			"sparse-checkout-cone-mode": {"sparse-checkout-cone-mode", false, false, ""},
			"ssh-key":                   {"ssh-key", false, false, ""},
			"ssh-known-hosts":           {"ssh-known-hosts", false, false, ""},
			"ssh-strict":                {"ssh-strict", false, false, ""},
			"ssh-user":                  {"ssh-user", false, false, ""},
			"submodules":                {"submodules", false, false, ""},
			"token":                     {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"commit": {"commit"},
			"ref":    {"ref"},
		},
	},
	"actions/checkout@v5": {
		Name: "Checkout",
		Inputs: ActionMetadataInputs{
			"clean":                     {"clean", false, false, ""},
			"fetch-depth":               {"fetch-depth", false, false, ""},
			"fetch-tags":                {"fetch-tags", false, false, ""},
			"filter":                    {"filter", false, false, ""},
			"github-server-url":         {"github-server-url", false, false, ""},
			"lfs":                       {"lfs", false, false, ""},
			"path":                      {"path", false, false, ""},
			"persist-credentials":       {"persist-credentials", false, false, ""},
			"ref":                       {"ref", false, false, ""},
			"repository":                {"repository", false, false, ""},
			"set-safe-directory":        {"set-safe-directory", false, false, ""},
			"show-progress":             {"show-progress", false, false, ""},
			"sparse-checkout":           {"sparse-checkout", false, false, ""},
			"sparse-checkout-cone-mode": {"sparse-checkout-cone-mode", false, false, ""},
			"ssh-key":                   {"ssh-key", false, false, ""},
			"ssh-known-hosts":           {"ssh-known-hosts", false, false, ""},
			"ssh-strict":                {"ssh-strict", false, false, ""},
			"ssh-user":                  {"ssh-user", false, false, ""},
			"submodules":                {"submodules", false, false, ""},
			"token":                     {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"commit": {"commit"},
			"ref":    {"ref"},
		},
	},
	"actions/configure-pages@v4": {
		Name: "Configure GitHub Pages",
		Inputs: ActionMetadataInputs{
			"enablement":            {"enablement", false, false, ""},
			"generator_config_file": {"generator_config_file", false, false, ""},
			"static_site_generator": {"static_site_generator", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"base_path": {"base_path"},
			"base_url":  {"base_url"},
			"host":      {"host"},
			"origin":    {"origin"},
		},
	},
	"actions/configure-pages@v5": {
		Name: "Configure GitHub Pages",
		Inputs: ActionMetadataInputs{
			"enablement":            {"enablement", false, false, ""},
			"generator_config_file": {"generator_config_file", false, false, ""},
			"static_site_generator": {"static_site_generator", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"base_path": {"base_path"},
			"base_url":  {"base_url"},
			"host":      {"host"},
			"origin":    {"origin"},
		},
	},
	"actions/create-github-app-token@v1": {
		Name: "Create GitHub App Token",
		Inputs: ActionMetadataInputs{
			"app-id":                                                 {"app-id", false, false, ""},
			"app_id":                                                 {"app_id", false, true, "'app_id' is deprecated and will be removed in a future version. Use 'app-id' instead."},
			"github-api-url":                                         {"github-api-url", false, false, ""},
			"owner":                                                  {"owner", false, false, ""},
			"permission-actions":                                     {"permission-actions", false, false, ""},
			"permission-administration":                              {"permission-administration", false, false, ""},
			"permission-checks":                                      {"permission-checks", false, false, ""},
			"permission-codespaces":                                  {"permission-codespaces", false, false, ""},
			"permission-contents":                                    {"permission-contents", false, false, ""},
			"permission-dependabot-secrets":                          {"permission-dependabot-secrets", false, false, ""},
			"permission-deployments":                                 {"permission-deployments", false, false, ""},
			"permission-email-addresses":                             {"permission-email-addresses", false, false, ""},
			"permission-environments":                                {"permission-environments", false, false, ""},
			"permission-followers":                                   {"permission-followers", false, false, ""},
			"permission-git-ssh-keys":                                {"permission-git-ssh-keys", false, false, ""},
			"permission-gpg-keys":                                    {"permission-gpg-keys", false, false, ""},
			"permission-interaction-limits":                          {"permission-interaction-limits", false, false, ""},
			"permission-issues":                                      {"permission-issues", false, false, ""},
			"permission-members":                                     {"permission-members", false, false, ""},
			"permission-metadata":                                    {"permission-metadata", false, false, ""},
			"permission-organization-administration":                 {"permission-organization-administration", false, false, ""},
			"permission-organization-announcement-banners":           {"permission-organization-announcement-banners", false, false, ""},
			"permission-organization-copilot-seat-management":        {"permission-organization-copilot-seat-management", false, false, ""},
			"permission-organization-custom-org-roles":               {"permission-organization-custom-org-roles", false, false, ""},
			"permission-organization-custom-properties":              {"permission-organization-custom-properties", false, false, ""},
			"permission-organization-custom-roles":                   {"permission-organization-custom-roles", false, false, ""},
			"permission-organization-events":                         {"permission-organization-events", false, false, ""},
			"permission-organization-hooks":                          {"permission-organization-hooks", false, false, ""},
			"permission-organization-packages":                       {"permission-organization-packages", false, false, ""},
			"permission-organization-personal-access-token-requests": {"permission-organization-personal-access-token-requests", false, false, ""},
			"permission-organization-personal-access-tokens":         {"permission-organization-personal-access-tokens", false, false, ""},
			"permission-organization-plan":                           {"permission-organization-plan", false, false, ""},
			"permission-organization-projects":                       {"permission-organization-projects", false, false, ""},
			"permission-organization-secrets":                        {"permission-organization-secrets", false, false, ""},
			"permission-organization-self-hosted-runners":            {"permission-organization-self-hosted-runners", false, false, ""},
			"permission-organization-user-blocking":                  {"permission-organization-user-blocking", false, false, ""},
			"permission-packages":                                    {"permission-packages", false, false, ""},
			"permission-pages":                                       {"permission-pages", false, false, ""},
			"permission-profile":                                     {"permission-profile", false, false, ""},
			"permission-pull-requests":                               {"permission-pull-requests", false, false, ""},
			"permission-repository-custom-properties":                {"permission-repository-custom-properties", false, false, ""},
			"permission-repository-hooks":                            {"permission-repository-hooks", false, false, ""},
			"permission-repository-projects":                         {"permission-repository-projects", false, false, ""},
			"permission-secret-scanning-alerts":                      {"permission-secret-scanning-alerts", false, false, ""},
			"permission-secrets":                                     {"permission-secrets", false, false, ""},
			"permission-security-events":                             {"permission-security-events", false, false, ""},
			"permission-single-file":                                 {"permission-single-file", false, false, ""},
			"permission-starring":                                    {"permission-starring", false, false, ""},
			"permission-statuses":                                    {"permission-statuses", false, false, ""},
			"permission-team-discussions":                            {"permission-team-discussions", false, false, ""},
			"permission-vulnerability-alerts":                        {"permission-vulnerability-alerts", false, false, ""},
			"permission-workflows":                                   {"permission-workflows", false, false, ""},
			"private-key":                                            {"private-key", false, false, ""},
			"private_key":                                            {"private_key", false, true, "'private_key' is deprecated and will be removed in a future version. Use 'private-key' instead."},
			"repositories":                                           {"repositories", false, false, ""},
			"skip-token-revoke":                                      {"skip-token-revoke", false, false, ""},
			"skip_token_revoke":                                      {"skip_token_revoke", false, true, "'skip_token_revoke' is deprecated and will be removed in a future version. Use 'skip-token-revoke' instead."},
		},
		Outputs: ActionMetadataOutputs{
			"app-slug":        {"app-slug"},
			"installation-id": {"installation-id"},
			"token":           {"token"},
		},
	},
	"actions/create-github-app-token@v2": {
		Name: "Create GitHub App Token",
		Inputs: ActionMetadataInputs{
			"app-id":                                                 {"app-id", true, false, ""},
			"github-api-url":                                         {"github-api-url", false, false, ""},
			"owner":                                                  {"owner", false, false, ""},
			"permission-actions":                                     {"permission-actions", false, false, ""},
			"permission-administration":                              {"permission-administration", false, false, ""},
			"permission-checks":                                      {"permission-checks", false, false, ""},
			"permission-codespaces":                                  {"permission-codespaces", false, false, ""},
			"permission-contents":                                    {"permission-contents", false, false, ""},
			"permission-dependabot-secrets":                          {"permission-dependabot-secrets", false, false, ""},
			"permission-deployments":                                 {"permission-deployments", false, false, ""},
			"permission-email-addresses":                             {"permission-email-addresses", false, false, ""},
			"permission-environments":                                {"permission-environments", false, false, ""},
			"permission-followers":                                   {"permission-followers", false, false, ""},
			"permission-git-ssh-keys":                                {"permission-git-ssh-keys", false, false, ""},
			"permission-gpg-keys":                                    {"permission-gpg-keys", false, false, ""},
			"permission-interaction-limits":                          {"permission-interaction-limits", false, false, ""},
			"permission-issues":                                      {"permission-issues", false, false, ""},
			"permission-members":                                     {"permission-members", false, false, ""},
			"permission-metadata":                                    {"permission-metadata", false, false, ""},
			"permission-organization-administration":                 {"permission-organization-administration", false, false, ""},
			"permission-organization-announcement-banners":           {"permission-organization-announcement-banners", false, false, ""},
			"permission-organization-copilot-seat-management":        {"permission-organization-copilot-seat-management", false, false, ""},
			"permission-organization-custom-org-roles":               {"permission-organization-custom-org-roles", false, false, ""},
			"permission-organization-custom-properties":              {"permission-organization-custom-properties", false, false, ""},
			"permission-organization-custom-roles":                   {"permission-organization-custom-roles", false, false, ""},
			"permission-organization-events":                         {"permission-organization-events", false, false, ""},
			"permission-organization-hooks":                          {"permission-organization-hooks", false, false, ""},
			"permission-organization-packages":                       {"permission-organization-packages", false, false, ""},
			"permission-organization-personal-access-token-requests": {"permission-organization-personal-access-token-requests", false, false, ""},
			"permission-organization-personal-access-tokens":         {"permission-organization-personal-access-tokens", false, false, ""},
			"permission-organization-plan":                           {"permission-organization-plan", false, false, ""},
			"permission-organization-projects":                       {"permission-organization-projects", false, false, ""},
			"permission-organization-secrets":                        {"permission-organization-secrets", false, false, ""},
			"permission-organization-self-hosted-runners":            {"permission-organization-self-hosted-runners", false, false, ""},
			"permission-organization-user-blocking":                  {"permission-organization-user-blocking", false, false, ""},
			"permission-packages":                                    {"permission-packages", false, false, ""},
			"permission-pages":                                       {"permission-pages", false, false, ""},
			"permission-profile":                                     {"permission-profile", false, false, ""},
			"permission-pull-requests":                               {"permission-pull-requests", false, false, ""},
			"permission-repository-custom-properties":                {"permission-repository-custom-properties", false, false, ""},
			"permission-repository-hooks":                            {"permission-repository-hooks", false, false, ""},
			"permission-repository-projects":                         {"permission-repository-projects", false, false, ""},
			"permission-secret-scanning-alerts":                      {"permission-secret-scanning-alerts", false, false, ""},
			"permission-secrets":                                     {"permission-secrets", false, false, ""},
			"permission-security-events":                             {"permission-security-events", false, false, ""},
			"permission-single-file":                                 {"permission-single-file", false, false, ""},
			"permission-starring":                                    {"permission-starring", false, false, ""},
			"permission-statuses":                                    {"permission-statuses", false, false, ""},
			"permission-team-discussions":                            {"permission-team-discussions", false, false, ""},
			"permission-vulnerability-alerts":                        {"permission-vulnerability-alerts", false, false, ""},
			"permission-workflows":                                   {"permission-workflows", false, false, ""},
			"private-key":                                            {"private-key", true, false, ""},
			"repositories":                                           {"repositories", false, false, ""},
			"skip-token-revoke":                                      {"skip-token-revoke", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"app-slug":        {"app-slug"},
			"installation-id": {"installation-id"},
			"token":           {"token"},
		},
	},
	"actions/delete-package-versions@v5": {
		Name: "Delete Package Versions",
		Inputs: ActionMetadataInputs{
			"delete-only-pre-release-versions": {"delete-only-pre-release-versions", false, false, ""},
			"delete-only-untagged-versions":    {"delete-only-untagged-versions", false, false, ""},
			"ignore-versions":                  {"ignore-versions", false, false, ""},
			"min-versions-to-keep":             {"min-versions-to-keep", false, false, ""},
			"num-old-versions-to-delete":       {"num-old-versions-to-delete", false, false, ""},
			"owner":                            {"owner", false, false, ""},
			"package-name":                     {"package-name", true, false, ""},
			"package-type":                     {"package-type", true, false, ""},
			"package-version-ids":              {"package-version-ids", false, false, ""},
			"token":                            {"token", false, false, ""},
		},
	},
	"actions/dependency-review-action@v4": {
		Name: "Dependency Review",
		Inputs: ActionMetadataInputs{
			"allow-dependencies-licenses":        {"allow-dependencies-licenses", false, false, ""},
			"allow-ghsas":                        {"allow-ghsas", false, false, ""},
			"allow-licenses":                     {"allow-licenses", false, false, ""},
			"base-ref":                           {"base-ref", false, false, ""},
			"comment-summary-in-pr":              {"comment-summary-in-pr", false, false, ""},
			"config-file":                        {"config-file", false, false, ""},
			"deny-groups":                        {"deny-groups", false, false, ""},
			"deny-licenses":                      {"deny-licenses", false, false, ""},
			"deny-packages":                      {"deny-packages", false, false, ""},
			"external-repo-token":                {"external-repo-token", false, false, ""},
			"fail-on-scopes":                     {"fail-on-scopes", false, false, ""},
			"fail-on-severity":                   {"fail-on-severity", false, false, ""},
			"head-ref":                           {"head-ref", false, false, ""},
			"license-check":                      {"license-check", false, false, ""},
			"repo-token":                         {"repo-token", false, false, ""},
			"retry-on-snapshot-warnings":         {"retry-on-snapshot-warnings", false, false, ""},
			"retry-on-snapshot-warnings-timeout": {"retry-on-snapshot-warnings-timeout", false, false, ""},
			"show-openssf-scorecard":             {"show-openssf-scorecard", false, false, ""},
			"vulnerability-check":                {"vulnerability-check", false, false, ""},
			"warn-on-openssf-scorecard-level":    {"warn-on-openssf-scorecard-level", false, false, ""},
			"warn-only":                          {"warn-only", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"comment-content":         {"comment-content"},
			"denied-changes":          {"denied-changes"},
			"dependency-changes":      {"dependency-changes"},
			"invalid-license-changes": {"invalid-license-changes"},
			"vulnerable-changes":      {"vulnerable-changes"},
		},
	},
	"actions/deploy-pages@v3": {
		Name: "Deploy GitHub Pages site",
		Inputs: ActionMetadataInputs{
			"artifact_name":      {"artifact_name", false, false, ""},
			"error_count":        {"error_count", false, false, ""},
			"preview":            {"preview", false, false, ""},
			"reporting_interval": {"reporting_interval", false, false, ""},
			"timeout":            {"timeout", false, false, ""},
			"token":              {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"page_url": {"page_url"},
		},
	},
	"actions/deploy-pages@v4": {
		Name: "Deploy GitHub Pages site",
		Inputs: ActionMetadataInputs{
			"artifact_name":      {"artifact_name", false, false, ""},
			"error_count":        {"error_count", false, false, ""},
			"preview":            {"preview", false, false, ""},
			"reporting_interval": {"reporting_interval", false, false, ""},
			"timeout":            {"timeout", false, false, ""},
			"token":              {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"page_url": {"page_url"},
		},
	},
	"actions/download-artifact@v3-node20": {
		Name: "Download a Build Artifact",
		Inputs: ActionMetadataInputs{
			"name": {"name", false, false, ""},
			"path": {"path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"download-path": {"download-path"},
		},
	},
	"actions/download-artifact@v4": {
		Name: "Download a Build Artifact",
		Inputs: ActionMetadataInputs{
			"artifact-ids":   {"artifact-ids", false, false, ""},
			"github-token":   {"github-token", false, false, ""},
			"merge-multiple": {"merge-multiple", false, false, ""},
			"name":           {"name", false, false, ""},
			"path":           {"path", false, false, ""},
			"pattern":        {"pattern", false, false, ""},
			"repository":     {"repository", false, false, ""},
			"run-id":         {"run-id", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"download-path": {"download-path"},
		},
	},
	"actions/download-artifact@v5": {
		Name: "Download a Build Artifact",
		Inputs: ActionMetadataInputs{
			"artifact-ids":   {"artifact-ids", false, false, ""},
			"github-token":   {"github-token", false, false, ""},
			"merge-multiple": {"merge-multiple", false, false, ""},
			"name":           {"name", false, false, ""},
			"path":           {"path", false, false, ""},
			"pattern":        {"pattern", false, false, ""},
			"repository":     {"repository", false, false, ""},
			"run-id":         {"run-id", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"download-path": {"download-path"},
		},
	},
	"actions/first-interaction@v1": {
		Name: "First interaction",
		Inputs: ActionMetadataInputs{
			"issue-message": {"issue-message", false, false, ""},
			"pr-message":    {"pr-message", false, false, ""},
			"repo-token":    {"repo-token", true, false, ""},
		},
	},
	"actions/first-interaction@v2": {
		Name: "First Interaction",
		Inputs: ActionMetadataInputs{
			"issue_message": {"issue_message", false, false, ""},
			"pr_message":    {"pr_message", false, false, ""},
			"repo_token":    {"repo_token", false, false, ""},
		},
	},
	"actions/first-interaction@v3": {
		Name: "First Interaction",
		Inputs: ActionMetadataInputs{
			"issue_message": {"issue_message", false, false, ""},
			"pr_message":    {"pr_message", false, false, ""},
			"repo_token":    {"repo_token", false, false, ""},
		},
	},
	"actions/github-script@v7": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"base-url":                  {"base-url", false, false, ""},
			"debug":                     {"debug", false, false, ""},
			"github-token":              {"github-token", false, false, ""},
			"previews":                  {"previews", false, false, ""},
			"result-encoding":           {"result-encoding", false, false, ""},
			"retries":                   {"retries", false, false, ""},
			"retry-exempt-status-codes": {"retry-exempt-status-codes", false, false, ""},
			"script":                    {"script", true, false, ""},
			"user-agent":                {"user-agent", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/github-script@v8": {
		Name: "GitHub Script",
		Inputs: ActionMetadataInputs{
			"base-url":                  {"base-url", false, false, ""},
			"debug":                     {"debug", false, false, ""},
			"github-token":              {"github-token", false, false, ""},
			"previews":                  {"previews", false, false, ""},
			"result-encoding":           {"result-encoding", false, false, ""},
			"retries":                   {"retries", false, false, ""},
			"retry-exempt-status-codes": {"retry-exempt-status-codes", false, false, ""},
			"script":                    {"script", true, false, ""},
			"user-agent":                {"user-agent", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"result": {"result"},
		},
	},
	"actions/labeler@v5": {
		Name: "Labeler",
		Inputs: ActionMetadataInputs{
			"configuration-path": {"configuration-path", false, false, ""},
			"dot":                {"dot", false, false, ""},
			"pr-number":          {"pr-number", false, false, ""},
			"repo-token":         {"repo-token", false, false, ""},
			"sync-labels":        {"sync-labels", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"all-labels": {"all-labels"},
			"new-labels": {"new-labels"},
		},
	},
	"actions/labeler@v6": {
		Name: "Labeler",
		Inputs: ActionMetadataInputs{
			"configuration-path": {"configuration-path", false, false, ""},
			"dot":                {"dot", false, false, ""},
			"pr-number":          {"pr-number", false, false, ""},
			"repo-token":         {"repo-token", false, false, ""},
			"sync-labels":        {"sync-labels", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"all-labels": {"all-labels"},
			"new-labels": {"new-labels"},
		},
	},
	"actions/setup-dotnet@v4": {
		Name: "Setup .NET Core SDK",
		Inputs: ActionMetadataInputs{
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"config-file":           {"config-file", false, false, ""},
			"dotnet-quality":        {"dotnet-quality", false, false, ""},
			"dotnet-version":        {"dotnet-version", false, false, ""},
			"global-json-file":      {"global-json-file", false, false, ""},
			"owner":                 {"owner", false, false, ""},
			"source-url":            {"source-url", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"dotnet-version": {"dotnet-version"},
		},
	},
	"actions/setup-dotnet@v5": {
		Name: "Setup .NET Core SDK",
		Inputs: ActionMetadataInputs{
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"config-file":           {"config-file", false, false, ""},
			"dotnet-quality":        {"dotnet-quality", false, false, ""},
			"dotnet-version":        {"dotnet-version", false, false, ""},
			"global-json-file":      {"global-json-file", false, false, ""},
			"owner":                 {"owner", false, false, ""},
			"source-url":            {"source-url", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"dotnet-version": {"dotnet-version"},
		},
	},
	"actions/setup-go@v5": {
		Name: "Setup Go environment",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"go-version":            {"go-version", false, false, ""},
			"go-version-file":       {"go-version-file", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":  {"cache-hit"},
			"go-version": {"go-version"},
		},
	},
	"actions/setup-go@v6": {
		Name: "Setup Go environment",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"go-version":            {"go-version", false, false, ""},
			"go-version-file":       {"go-version-file", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":  {"cache-hit"},
			"go-version": {"go-version"},
		},
	},
	"actions/setup-java@v4": {
		Name: "Setup Java JDK",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"distribution":          {"distribution", true, false, ""},
			"gpg-passphrase":        {"gpg-passphrase", false, false, ""},
			"gpg-private-key":       {"gpg-private-key", false, false, ""},
			"java-package":          {"java-package", false, false, ""},
			"java-version":          {"java-version", false, false, ""},
			"java-version-file":     {"java-version-file", false, false, ""},
			"jdkfile":               {"jdkFile", false, false, ""},
			"job-status":            {"job-status", false, false, ""},
			"mvn-toolchain-id":      {"mvn-toolchain-id", false, false, ""},
			"mvn-toolchain-vendor":  {"mvn-toolchain-vendor", false, false, ""},
			"overwrite-settings":    {"overwrite-settings", false, false, ""},
			"server-id":             {"server-id", false, false, ""},
			"server-password":       {"server-password", false, false, ""},
			"server-username":       {"server-username", false, false, ""},
			"settings-path":         {"settings-path", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"distribution": {"distribution"},
			"path":         {"path"},
			"version":      {"version"},
		},
	},
	"actions/setup-java@v5": {
		Name: "Setup Java JDK",
		Inputs: ActionMetadataInputs{
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"distribution":          {"distribution", true, false, ""},
			"gpg-passphrase":        {"gpg-passphrase", false, false, ""},
			"gpg-private-key":       {"gpg-private-key", false, false, ""},
			"java-package":          {"java-package", false, false, ""},
			"java-version":          {"java-version", false, false, ""},
			"java-version-file":     {"java-version-file", false, false, ""},
			"jdkfile":               {"jdkFile", false, false, ""},
			"job-status":            {"job-status", false, false, ""},
			"mvn-toolchain-id":      {"mvn-toolchain-id", false, false, ""},
			"mvn-toolchain-vendor":  {"mvn-toolchain-vendor", false, false, ""},
			"overwrite-settings":    {"overwrite-settings", false, false, ""},
			"server-id":             {"server-id", false, false, ""},
			"server-password":       {"server-password", false, false, ""},
			"server-username":       {"server-username", false, false, ""},
			"settings-path":         {"settings-path", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"distribution": {"distribution"},
			"path":         {"path"},
			"version":      {"version"},
		},
	},
	"actions/setup-node@v4": {
		Name: "Setup Node.js environment",
		Inputs: ActionMetadataInputs{
			"always-auth":           {"always-auth", false, false, ""},
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"mirror":                {"mirror", false, false, ""},
			"mirror-token":          {"mirror-token", false, false, ""},
			"node-version":          {"node-version", false, false, ""},
			"node-version-file":     {"node-version-file", false, false, ""},
			"registry-url":          {"registry-url", false, false, ""},
			"scope":                 {"scope", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"node-version": {"node-version"},
		},
	},
	"actions/setup-node@v5": {
		Name: "Setup Node.js environment",
		Inputs: ActionMetadataInputs{
			"always-auth":           {"always-auth", false, false, ""},
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"mirror":                {"mirror", false, false, ""},
			"mirror-token":          {"mirror-token", false, false, ""},
			"node-version":          {"node-version", false, false, ""},
			"node-version-file":     {"node-version-file", false, false, ""},
			"package-manager-cache": {"package-manager-cache", false, false, ""},
			"registry-url":          {"registry-url", false, false, ""},
			"scope":                 {"scope", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"node-version": {"node-version"},
		},
	},
	"actions/setup-node@v6": {
		Name: "Setup Node.js environment",
		Inputs: ActionMetadataInputs{
			"always-auth":           {"always-auth", false, false, ""},
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"mirror":                {"mirror", false, false, ""},
			"mirror-token":          {"mirror-token", false, false, ""},
			"node-version":          {"node-version", false, false, ""},
			"node-version-file":     {"node-version-file", false, false, ""},
			"package-manager-cache": {"package-manager-cache", false, false, ""},
			"registry-url":          {"registry-url", false, false, ""},
			"scope":                 {"scope", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":    {"cache-hit"},
			"node-version": {"node-version"},
		},
	},
	"actions/setup-python@v5": {
		Name: "Setup Python",
		Inputs: ActionMetadataInputs{
			"allow-prereleases":     {"allow-prereleases", false, false, ""},
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"freethreaded":          {"freethreaded", false, false, ""},
			"python-version":        {"python-version", false, false, ""},
			"python-version-file":   {"python-version-file", false, false, ""},
			"token":                 {"token", false, false, ""},
			"update-environment":    {"update-environment", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"python-path":    {"python-path"},
			"python-version": {"python-version"},
		},
	},
	"actions/setup-python@v6": {
		Name: "Setup Python",
		Inputs: ActionMetadataInputs{
			"allow-prereleases":     {"allow-prereleases", false, false, ""},
			"architecture":          {"architecture", false, false, ""},
			"cache":                 {"cache", false, false, ""},
			"cache-dependency-path": {"cache-dependency-path", false, false, ""},
			"check-latest":          {"check-latest", false, false, ""},
			"freethreaded":          {"freethreaded", false, false, ""},
			"pip-version":           {"pip-version", false, false, ""},
			"python-version":        {"python-version", false, false, ""},
			"python-version-file":   {"python-version-file", false, false, ""},
			"token":                 {"token", false, false, ""},
			"update-environment":    {"update-environment", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache-hit":      {"cache-hit"},
			"python-path":    {"python-path"},
			"python-version": {"python-version"},
		},
	},
	"actions/stale@v10": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false, false, ""},
			"any-of-labels":                   {"any-of-labels", false, false, ""},
			"any-of-pr-labels":                {"any-of-pr-labels", false, false, ""},
			"ascending":                       {"ascending", false, false, ""},
			"close-issue-label":               {"close-issue-label", false, false, ""},
			"close-issue-message":             {"close-issue-message", false, false, ""},
			"close-issue-reason":              {"close-issue-reason", false, false, ""},
			"close-pr-label":                  {"close-pr-label", false, false, ""},
			"close-pr-message":                {"close-pr-message", false, false, ""},
			"days-before-close":               {"days-before-close", false, false, ""},
			"days-before-issue-close":         {"days-before-issue-close", false, false, ""},
			"days-before-issue-stale":         {"days-before-issue-stale", false, false, ""},
			"days-before-pr-close":            {"days-before-pr-close", false, false, ""},
			"days-before-pr-stale":            {"days-before-pr-stale", false, false, ""},
			"days-before-stale":               {"days-before-stale", false, false, ""},
			"debug-only":                      {"debug-only", false, false, ""},
			"delete-branch":                   {"delete-branch", false, false, ""},
			"enable-statistics":               {"enable-statistics", false, false, ""},
			"exempt-all-assignees":            {"exempt-all-assignees", false, false, ""},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false, false, ""},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false, false, ""},
			"exempt-all-milestones":           {"exempt-all-milestones", false, false, ""},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false, false, ""},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false, false, ""},
			"exempt-assignees":                {"exempt-assignees", false, false, ""},
			"exempt-draft-pr":                 {"exempt-draft-pr", false, false, ""},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false, false, ""},
			"exempt-issue-labels":             {"exempt-issue-labels", false, false, ""},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false, false, ""},
			"exempt-milestones":               {"exempt-milestones", false, false, ""},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false, false, ""},
			"exempt-pr-labels":                {"exempt-pr-labels", false, false, ""},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false, false, ""},
			"ignore-issue-updates":            {"ignore-issue-updates", false, false, ""},
			"ignore-pr-updates":               {"ignore-pr-updates", false, false, ""},
			"ignore-updates":                  {"ignore-updates", false, false, ""},
			"include-only-assigned":           {"include-only-assigned", false, false, ""},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false, false, ""},
			"labels-to-remove-when-stale":     {"labels-to-remove-when-stale", false, false, ""},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false, false, ""},
			"only-issue-labels":               {"only-issue-labels", false, false, ""},
			"only-issue-types":                {"only-issue-types", false, false, ""},
			"only-labels":                     {"only-labels", false, false, ""},
			"only-pr-labels":                  {"only-pr-labels", false, false, ""},
			"operations-per-run":              {"operations-per-run", false, false, ""},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false, false, ""},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false, false, ""},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false, false, ""},
			"repo-token":                      {"repo-token", false, false, ""},
			"sort-by":                         {"sort-by", false, false, ""},
			"stale-issue-label":               {"stale-issue-label", false, false, ""},
			"stale-issue-message":             {"stale-issue-message", false, false, ""},
			"stale-pr-label":                  {"stale-pr-label", false, false, ""},
			"stale-pr-message":                {"stale-pr-message", false, false, ""},
			"start-date":                      {"start-date", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/stale@v9": {
		Name: "Close Stale Issues",
		Inputs: ActionMetadataInputs{
			"any-of-issue-labels":             {"any-of-issue-labels", false, false, ""},
			"any-of-labels":                   {"any-of-labels", false, false, ""},
			"any-of-pr-labels":                {"any-of-pr-labels", false, false, ""},
			"ascending":                       {"ascending", false, false, ""},
			"close-issue-label":               {"close-issue-label", false, false, ""},
			"close-issue-message":             {"close-issue-message", false, false, ""},
			"close-issue-reason":              {"close-issue-reason", false, false, ""},
			"close-pr-label":                  {"close-pr-label", false, false, ""},
			"close-pr-message":                {"close-pr-message", false, false, ""},
			"days-before-close":               {"days-before-close", false, false, ""},
			"days-before-issue-close":         {"days-before-issue-close", false, false, ""},
			"days-before-issue-stale":         {"days-before-issue-stale", false, false, ""},
			"days-before-pr-close":            {"days-before-pr-close", false, false, ""},
			"days-before-pr-stale":            {"days-before-pr-stale", false, false, ""},
			"days-before-stale":               {"days-before-stale", false, false, ""},
			"debug-only":                      {"debug-only", false, false, ""},
			"delete-branch":                   {"delete-branch", false, false, ""},
			"enable-statistics":               {"enable-statistics", false, false, ""},
			"exempt-all-assignees":            {"exempt-all-assignees", false, false, ""},
			"exempt-all-issue-assignees":      {"exempt-all-issue-assignees", false, false, ""},
			"exempt-all-issue-milestones":     {"exempt-all-issue-milestones", false, false, ""},
			"exempt-all-milestones":           {"exempt-all-milestones", false, false, ""},
			"exempt-all-pr-assignees":         {"exempt-all-pr-assignees", false, false, ""},
			"exempt-all-pr-milestones":        {"exempt-all-pr-milestones", false, false, ""},
			"exempt-assignees":                {"exempt-assignees", false, false, ""},
			"exempt-draft-pr":                 {"exempt-draft-pr", false, false, ""},
			"exempt-issue-assignees":          {"exempt-issue-assignees", false, false, ""},
			"exempt-issue-labels":             {"exempt-issue-labels", false, false, ""},
			"exempt-issue-milestones":         {"exempt-issue-milestones", false, false, ""},
			"exempt-milestones":               {"exempt-milestones", false, false, ""},
			"exempt-pr-assignees":             {"exempt-pr-assignees", false, false, ""},
			"exempt-pr-labels":                {"exempt-pr-labels", false, false, ""},
			"exempt-pr-milestones":            {"exempt-pr-milestones", false, false, ""},
			"ignore-issue-updates":            {"ignore-issue-updates", false, false, ""},
			"ignore-pr-updates":               {"ignore-pr-updates", false, false, ""},
			"ignore-updates":                  {"ignore-updates", false, false, ""},
			"include-only-assigned":           {"include-only-assigned", false, false, ""},
			"labels-to-add-when-unstale":      {"labels-to-add-when-unstale", false, false, ""},
			"labels-to-remove-when-stale":     {"labels-to-remove-when-stale", false, false, ""},
			"labels-to-remove-when-unstale":   {"labels-to-remove-when-unstale", false, false, ""},
			"only-issue-labels":               {"only-issue-labels", false, false, ""},
			"only-labels":                     {"only-labels", false, false, ""},
			"only-pr-labels":                  {"only-pr-labels", false, false, ""},
			"operations-per-run":              {"operations-per-run", false, false, ""},
			"remove-issue-stale-when-updated": {"remove-issue-stale-when-updated", false, false, ""},
			"remove-pr-stale-when-updated":    {"remove-pr-stale-when-updated", false, false, ""},
			"remove-stale-when-updated":       {"remove-stale-when-updated", false, false, ""},
			"repo-token":                      {"repo-token", false, false, ""},
			"stale-issue-label":               {"stale-issue-label", false, false, ""},
			"stale-issue-message":             {"stale-issue-message", false, false, ""},
			"stale-pr-label":                  {"stale-pr-label", false, false, ""},
			"stale-pr-message":                {"stale-pr-message", false, false, ""},
			"start-date":                      {"start-date", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"closed-issues-prs": {"closed-issues-prs"},
			"staled-issues-prs": {"staled-issues-prs"},
		},
	},
	"actions/upload-artifact@v3-node20": {
		Name: "Upload a Build Artifact",
		Inputs: ActionMetadataInputs{
			"if-no-files-found":    {"if-no-files-found", false, false, ""},
			"include-hidden-files": {"include-hidden-files", false, false, ""},
			"name":                 {"name", false, false, ""},
			"path":                 {"path", true, false, ""},
			"retention-days":       {"retention-days", false, false, ""},
		},
	},
	"actions/upload-artifact@v4": {
		Name: "Upload a Build Artifact",
		Inputs: ActionMetadataInputs{
			"compression-level":    {"compression-level", false, false, ""},
			"if-no-files-found":    {"if-no-files-found", false, false, ""},
			"include-hidden-files": {"include-hidden-files", false, false, ""},
			"name":                 {"name", false, false, ""},
			"overwrite":            {"overwrite", false, false, ""},
			"path":                 {"path", true, false, ""},
			"retention-days":       {"retention-days", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifact-digest": {"artifact-digest"},
			"artifact-id":     {"artifact-id"},
			"artifact-url":    {"artifact-url"},
		},
	},
	"actions/upload-pages-artifact@v1": {
		Name: "Upload GitHub Pages artifact",
		Inputs: ActionMetadataInputs{
			"name":           {"name", false, false, ""},
			"path":           {"path", false, false, ""},
			"retention-days": {"retention-days", false, false, ""},
		},
	},
	"actions/upload-pages-artifact@v2": {
		Name: "Upload GitHub Pages artifact",
		Inputs: ActionMetadataInputs{
			"name":           {"name", false, false, ""},
			"path":           {"path", false, false, ""},
			"retention-days": {"retention-days", false, false, ""},
		},
	},
	"actions/upload-pages-artifact@v3": {
		Name: "Upload GitHub Pages artifact",
		Inputs: ActionMetadataInputs{
			"name":           {"name", false, false, ""},
			"path":           {"path", false, false, ""},
			"retention-days": {"retention-days", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifact_id": {"artifact_id"},
		},
	},
	"actions/upload-pages-artifact@v4": {
		Name: "Upload GitHub Pages artifact",
		Inputs: ActionMetadataInputs{
			"name":           {"name", false, false, ""},
			"path":           {"path", false, false, ""},
			"retention-days": {"retention-days", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifact_id": {"artifact_id"},
		},
	},
	"aws-actions/configure-aws-credentials@v4": {
		Name: "\"Configure AWS Credentials\" Action for GitHub Actions",
		Inputs: ActionMetadataInputs{
			"audience":                      {"audience", false, false, ""},
			"aws-access-key-id":             {"aws-access-key-id", false, false, ""},
			"aws-region":                    {"aws-region", true, false, ""},
			"aws-secret-access-key":         {"aws-secret-access-key", false, false, ""},
			"aws-session-token":             {"aws-session-token", false, false, ""},
			"disable-retry":                 {"disable-retry", false, false, ""},
			"http-proxy":                    {"http-proxy", false, false, ""},
			"inline-session-policy":         {"inline-session-policy", false, false, ""},
			"managed-session-policies":      {"managed-session-policies", false, false, ""},
			"mask-aws-account-id":           {"mask-aws-account-id", false, false, ""},
			"output-credentials":            {"output-credentials", false, false, ""},
			"output-env-credentials":        {"output-env-credentials", false, false, ""},
			"retry-max-attempts":            {"retry-max-attempts", false, false, ""},
			"role-chaining":                 {"role-chaining", false, false, ""},
			"role-duration-seconds":         {"role-duration-seconds", false, false, ""},
			"role-external-id":              {"role-external-id", false, false, ""},
			"role-session-name":             {"role-session-name", false, false, ""},
			"role-skip-session-tagging":     {"role-skip-session-tagging", false, false, ""},
			"role-to-assume":                {"role-to-assume", false, false, ""},
			"special-characters-workaround": {"special-characters-workaround", false, false, ""},
			"unset-current-credentials":     {"unset-current-credentials", false, false, ""},
			"use-existing-credentials":      {"use-existing-credentials", false, false, ""},
			"web-identity-token-file":       {"web-identity-token-file", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"aws-access-key-id":     {"aws-access-key-id"},
			"aws-account-id":        {"aws-account-id"},
			"aws-expiration":        {"aws-expiration"},
			"aws-secret-access-key": {"aws-secret-access-key"},
			"aws-session-token":     {"aws-session-token"},
		},
	},
	"aws-actions/configure-aws-credentials@v5": {
		Name: "\"Configure AWS Credentials\" Action for GitHub Actions",
		Inputs: ActionMetadataInputs{
			"action-timeout-s":              {"action-timeout-s", false, false, ""},
			"allowed-account-ids":           {"allowed-account-ids", false, false, ""},
			"audience":                      {"audience", false, false, ""},
			"aws-access-key-id":             {"aws-access-key-id", false, false, ""},
			"aws-region":                    {"aws-region", true, false, ""},
			"aws-secret-access-key":         {"aws-secret-access-key", false, false, ""},
			"aws-session-token":             {"aws-session-token", false, false, ""},
			"disable-retry":                 {"disable-retry", false, false, ""},
			"force-skip-oidc":               {"force-skip-oidc", false, false, ""},
			"http-proxy":                    {"http-proxy", false, false, ""},
			"inline-session-policy":         {"inline-session-policy", false, false, ""},
			"managed-session-policies":      {"managed-session-policies", false, false, ""},
			"mask-aws-account-id":           {"mask-aws-account-id", false, false, ""},
			"no-proxy":                      {"no-proxy", false, false, ""},
			"output-credentials":            {"output-credentials", false, false, ""},
			"output-env-credentials":        {"output-env-credentials", false, false, ""},
			"retry-max-attempts":            {"retry-max-attempts", false, false, ""},
			"role-chaining":                 {"role-chaining", false, false, ""},
			"role-duration-seconds":         {"role-duration-seconds", false, false, ""},
			"role-external-id":              {"role-external-id", false, false, ""},
			"role-session-name":             {"role-session-name", false, false, ""},
			"role-skip-session-tagging":     {"role-skip-session-tagging", false, false, ""},
			"role-to-assume":                {"role-to-assume", false, false, ""},
			"special-characters-workaround": {"special-characters-workaround", false, false, ""},
			"unset-current-credentials":     {"unset-current-credentials", false, false, ""},
			"use-existing-credentials":      {"use-existing-credentials", false, false, ""},
			"web-identity-token-file":       {"web-identity-token-file", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"aws-access-key-id":     {"aws-access-key-id"},
			"aws-account-id":        {"aws-account-id"},
			"aws-expiration":        {"aws-expiration"},
			"aws-secret-access-key": {"aws-secret-access-key"},
			"aws-session-token":     {"aws-session-token"},
		},
	},
	"aws-actions/configure-aws-credentials@v6": {
		Name: "\"Configure AWS Credentials\" Action for GitHub Actions",
		Inputs: ActionMetadataInputs{
			"action-timeout-s":              {"action-timeout-s", false, false, ""},
			"allowed-account-ids":           {"allowed-account-ids", false, false, ""},
			"audience":                      {"audience", false, false, ""},
			"aws-access-key-id":             {"aws-access-key-id", false, false, ""},
			"aws-region":                    {"aws-region", true, false, ""},
			"aws-secret-access-key":         {"aws-secret-access-key", false, false, ""},
			"aws-session-token":             {"aws-session-token", false, false, ""},
			"disable-retry":                 {"disable-retry", false, false, ""},
			"force-skip-oidc":               {"force-skip-oidc", false, false, ""},
			"http-proxy":                    {"http-proxy", false, false, ""},
			"inline-session-policy":         {"inline-session-policy", false, false, ""},
			"managed-session-policies":      {"managed-session-policies", false, false, ""},
			"mask-aws-account-id":           {"mask-aws-account-id", false, false, ""},
			"no-proxy":                      {"no-proxy", false, false, ""},
			"output-credentials":            {"output-credentials", false, false, ""},
			"output-env-credentials":        {"output-env-credentials", false, false, ""},
			"retry-max-attempts":            {"retry-max-attempts", false, false, ""},
			"role-chaining":                 {"role-chaining", false, false, ""},
			"role-duration-seconds":         {"role-duration-seconds", false, false, ""},
			"role-external-id":              {"role-external-id", false, false, ""},
			"role-session-name":             {"role-session-name", false, false, ""},
			"role-skip-session-tagging":     {"role-skip-session-tagging", false, false, ""},
			"role-to-assume":                {"role-to-assume", false, false, ""},
			"special-characters-workaround": {"special-characters-workaround", false, false, ""},
			"unset-current-credentials":     {"unset-current-credentials", false, false, ""},
			"use-existing-credentials":      {"use-existing-credentials", false, false, ""},
			"web-identity-token-file":       {"web-identity-token-file", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"aws-access-key-id":     {"aws-access-key-id"},
			"aws-account-id":        {"aws-account-id"},
			"aws-expiration":        {"aws-expiration"},
			"aws-secret-access-key": {"aws-secret-access-key"},
			"aws-session-token":     {"aws-session-token"},
		},
	},
	"azure/aks-set-context@v4": {
		Name: "Azure Kubernetes set context",
		Inputs: ActionMetadataInputs{
			"admin":          {"admin", false, false, ""},
			"cluster-name":   {"cluster-name", true, false, ""},
			"public-fqdn":    {"public-fqdn", false, false, ""},
			"resource-group": {"resource-group", true, false, ""},
			"resource-type":  {"resource-type", false, false, ""},
			"subscription":   {"subscription", false, false, ""},
			"use-kubelogin":  {"use-kubelogin", false, false, ""},
		},
	},
	"azure/login@v2": {
		Name: "Azure Login",
		Inputs: ActionMetadataInputs{
			"allow-no-subscriptions": {"allow-no-subscriptions", false, false, ""},
			"audience":               {"audience", false, false, ""},
			"auth-type":              {"auth-type", false, false, ""},
			"client-id":              {"client-id", false, false, ""},
			"creds":                  {"creds", false, false, ""},
			"enable-azpssession":     {"enable-AzPSSession", false, false, ""},
			"environment":            {"environment", false, false, ""},
			"subscription-id":        {"subscription-id", false, false, ""},
			"tenant-id":              {"tenant-id", false, false, ""},
		},
	},
	"bahmutov/npm-install@v1": {
		Name: "NPM or Yarn install with caching",
		Inputs: ActionMetadataInputs{
			"cache-key-prefix":  {"cache-key-prefix", false, false, ""},
			"install-command":   {"install-command", false, false, ""},
			"uselockfile":       {"useLockFile", false, false, ""},
			"userollingcache":   {"useRollingCache", false, false, ""},
			"working-directory": {"working-directory", false, false, ""},
		},
	},
	"codecov/codecov-action@v4": {
		Name: "Codecov",
		Inputs: ActionMetadataInputs{
			"codecov_yml_path":           {"codecov_yml_path", false, false, ""},
			"commit_parent":              {"commit_parent", false, false, ""},
			"directory":                  {"directory", false, false, ""},
			"disable_file_fixes":         {"disable_file_fixes", false, false, ""},
			"disable_safe_directory":     {"disable_safe_directory", false, false, ""},
			"disable_search":             {"disable_search", false, false, ""},
			"dry_run":                    {"dry_run", false, false, ""},
			"env_vars":                   {"env_vars", false, false, ""},
			"exclude":                    {"exclude", false, false, ""},
			"fail_ci_if_error":           {"fail_ci_if_error", false, false, ""},
			"file":                       {"file", false, false, ""},
			"files":                      {"files", false, false, ""},
			"flags":                      {"flags", false, false, ""},
			"git_service":                {"git_service", false, false, ""},
			"handle_no_reports_found":    {"handle_no_reports_found", false, false, ""},
			"job_code":                   {"job_code", false, false, ""},
			"name":                       {"name", false, false, ""},
			"network_filter":             {"network_filter", false, false, ""},
			"network_prefix":             {"network_prefix", false, false, ""},
			"os":                         {"os", false, false, ""},
			"override_branch":            {"override_branch", false, false, ""},
			"override_build":             {"override_build", false, false, ""},
			"override_build_url":         {"override_build_url", false, false, ""},
			"override_commit":            {"override_commit", false, false, ""},
			"override_pr":                {"override_pr", false, false, ""},
			"plugin":                     {"plugin", false, false, ""},
			"plugins":                    {"plugins", false, false, ""},
			"report_code":                {"report_code", false, false, ""},
			"root_dir":                   {"root_dir", false, false, ""},
			"slug":                       {"slug", false, false, ""},
			"token":                      {"token", false, false, ""},
			"url":                        {"url", false, false, ""},
			"use_legacy_upload_endpoint": {"use_legacy_upload_endpoint", false, false, ""},
			"use_oidc":                   {"use_oidc", false, false, ""},
			"verbose":                    {"verbose", false, false, ""},
			"version":                    {"version", false, false, ""},
			"working-directory":          {"working-directory", false, false, ""},
		},
	},
	"codecov/codecov-action@v5": {
		Name: "Codecov",
		Inputs: ActionMetadataInputs{
			"base_sha":                   {"base_sha", false, false, ""},
			"binary":                     {"binary", false, false, ""},
			"codecov_yml_path":           {"codecov_yml_path", false, false, ""},
			"commit_parent":              {"commit_parent", false, false, ""},
			"directory":                  {"directory", false, false, ""},
			"disable_file_fixes":         {"disable_file_fixes", false, false, ""},
			"disable_safe_directory":     {"disable_safe_directory", false, false, ""},
			"disable_search":             {"disable_search", false, false, ""},
			"disable_telem":              {"disable_telem", false, false, ""},
			"dry_run":                    {"dry_run", false, false, ""},
			"env_vars":                   {"env_vars", false, false, ""},
			"exclude":                    {"exclude", false, false, ""},
			"fail_ci_if_error":           {"fail_ci_if_error", false, false, ""},
			"files":                      {"files", false, false, ""},
			"flags":                      {"flags", false, false, ""},
			"force":                      {"force", false, false, ""},
			"gcov_args":                  {"gcov_args", false, false, ""},
			"gcov_executable":            {"gcov_executable", false, false, ""},
			"gcov_ignore":                {"gcov_ignore", false, false, ""},
			"gcov_include":               {"gcov_include", false, false, ""},
			"git_service":                {"git_service", false, false, ""},
			"handle_no_reports_found":    {"handle_no_reports_found", false, false, ""},
			"job_code":                   {"job_code", false, false, ""},
			"name":                       {"name", false, false, ""},
			"network_filter":             {"network_filter", false, false, ""},
			"network_prefix":             {"network_prefix", false, false, ""},
			"os":                         {"os", false, false, ""},
			"override_branch":            {"override_branch", false, false, ""},
			"override_build":             {"override_build", false, false, ""},
			"override_build_url":         {"override_build_url", false, false, ""},
			"override_commit":            {"override_commit", false, false, ""},
			"override_pr":                {"override_pr", false, false, ""},
			"plugins":                    {"plugins", false, false, ""},
			"recurse_submodules":         {"recurse_submodules", false, false, ""},
			"report_code":                {"report_code", false, false, ""},
			"report_type":                {"report_type", false, false, ""},
			"root_dir":                   {"root_dir", false, false, ""},
			"run_command":                {"run_command", false, false, ""},
			"skip_validation":            {"skip_validation", false, false, ""},
			"slug":                       {"slug", false, false, ""},
			"swift_project":              {"swift_project", false, false, ""},
			"token":                      {"token", false, false, ""},
			"url":                        {"url", false, false, ""},
			"use_legacy_upload_endpoint": {"use_legacy_upload_endpoint", false, false, ""},
			"use_oidc":                   {"use_oidc", false, false, ""},
			"use_pypi":                   {"use_pypi", false, false, ""},
			"verbose":                    {"verbose", false, false, ""},
			"version":                    {"version", false, false, ""},
			"working-directory":          {"working-directory", false, false, ""},
		},
	},
	"dawidd6/action-download-artifact@v10": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"merge_multiple":       {"merge_multiple", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"ref":                  {"ref", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"use_unzip":            {"use_unzip", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v11": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"merge_multiple":       {"merge_multiple", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"ref":                  {"ref", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"use_unzip":            {"use_unzip", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v3": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v5": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v6": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v7": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v8": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"use_unzip":            {"use_unzip", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-download-artifact@v9": {
		Name: "Download workflow artifact",
		Inputs: ActionMetadataInputs{
			"allow_forks":          {"allow_forks", false, false, ""},
			"branch":               {"branch", false, false, ""},
			"check_artifacts":      {"check_artifacts", false, false, ""},
			"commit":               {"commit", false, false, ""},
			"dry_run":              {"dry_run", false, false, ""},
			"event":                {"event", false, false, ""},
			"github_token":         {"github_token", false, false, ""},
			"if_no_artifact_found": {"if_no_artifact_found", false, false, ""},
			"merge_multiple":       {"merge_multiple", false, false, ""},
			"name":                 {"name", false, false, ""},
			"name_is_regexp":       {"name_is_regexp", false, false, ""},
			"path":                 {"path", false, false, ""},
			"pr":                   {"pr", false, false, ""},
			"repo":                 {"repo", false, false, ""},
			"run_id":               {"run_id", false, false, ""},
			"run_number":           {"run_number", false, false, ""},
			"search_artifacts":     {"search_artifacts", false, false, ""},
			"skip_unpack":          {"skip_unpack", false, false, ""},
			"use_unzip":            {"use_unzip", false, false, ""},
			"workflow":             {"workflow", false, false, ""},
			"workflow_conclusion":  {"workflow_conclusion", false, false, ""},
			"workflow_search":      {"workflow_search", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts":      {"artifacts"},
			"dry_run":        {"dry_run"},
			"error_message":  {"error_message"},
			"found_artifact": {"found_artifact"},
		},
	},
	"dawidd6/action-send-mail@v1": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"body":           {"body", true, false, ""},
			"content_type":   {"content_type", false, false, ""},
			"from":           {"from", true, false, ""},
			"password":       {"password", true, false, ""},
			"server_address": {"server_address", true, false, ""},
			"server_port":    {"server_port", true, false, ""},
			"subject":        {"subject", true, false, ""},
			"to":             {"to", true, false, ""},
			"username":       {"username", true, false, ""},
		},
	},
	"dawidd6/action-send-mail@v3": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"attachments":      {"attachments", false, false, ""},
			"bcc":              {"bcc", false, false, ""},
			"body":             {"body", false, false, ""},
			"cc":               {"cc", false, false, ""},
			"connection_url":   {"connection_url", false, false, ""},
			"convert_markdown": {"convert_markdown", false, false, ""},
			"from":             {"from", true, false, ""},
			"html_body":        {"html_body", false, false, ""},
			"ignore_cert":      {"ignore_cert", false, false, ""},
			"in_reply_to":      {"in_reply_to", false, false, ""},
			"nodemailerdebug":  {"nodemailerdebug", false, false, ""},
			"nodemailerlog":    {"nodemailerlog", false, false, ""},
			"password":         {"password", false, false, ""},
			"priority":         {"priority", false, false, ""},
			"reply_to":         {"reply_to", false, false, ""},
			"secure":           {"secure", false, false, ""},
			"server_address":   {"server_address", false, false, ""},
			"server_port":      {"server_port", false, false, ""},
			"subject":          {"subject", true, false, ""},
			"to":               {"to", false, false, ""},
			"username":         {"username", false, false, ""},
		},
	},
	"dawidd6/action-send-mail@v4": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"attachments":      {"attachments", false, false, ""},
			"bcc":              {"bcc", false, false, ""},
			"body":             {"body", false, false, ""},
			"cc":               {"cc", false, false, ""},
			"connection_url":   {"connection_url", false, false, ""},
			"convert_markdown": {"convert_markdown", false, false, ""},
			"from":             {"from", true, false, ""},
			"html_body":        {"html_body", false, false, ""},
			"ignore_cert":      {"ignore_cert", false, false, ""},
			"in_reply_to":      {"in_reply_to", false, false, ""},
			"nodemailerdebug":  {"nodemailerdebug", false, false, ""},
			"nodemailerlog":    {"nodemailerlog", false, false, ""},
			"password":         {"password", false, false, ""},
			"priority":         {"priority", false, false, ""},
			"reply_to":         {"reply_to", false, false, ""},
			"secure":           {"secure", false, false, ""},
			"server_address":   {"server_address", false, false, ""},
			"server_port":      {"server_port", false, false, ""},
			"subject":          {"subject", true, false, ""},
			"to":               {"to", false, false, ""},
			"username":         {"username", false, false, ""},
		},
	},
	"dawidd6/action-send-mail@v5": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"attachments":      {"attachments", false, false, ""},
			"bcc":              {"bcc", false, false, ""},
			"body":             {"body", false, false, ""},
			"cc":               {"cc", false, false, ""},
			"connection_url":   {"connection_url", false, false, ""},
			"convert_markdown": {"convert_markdown", false, false, ""},
			"envelope_from":    {"envelope_from", false, false, ""},
			"envelope_to":      {"envelope_to", false, false, ""},
			"from":             {"from", true, false, ""},
			"html_body":        {"html_body", false, false, ""},
			"ignore_cert":      {"ignore_cert", false, false, ""},
			"in_reply_to":      {"in_reply_to", false, false, ""},
			"nodemailerdebug":  {"nodemailerdebug", false, false, ""},
			"nodemailerlog":    {"nodemailerlog", false, false, ""},
			"password":         {"password", false, false, ""},
			"priority":         {"priority", false, false, ""},
			"reply_to":         {"reply_to", false, false, ""},
			"secure":           {"secure", false, false, ""},
			"server_address":   {"server_address", false, false, ""},
			"server_port":      {"server_port", false, false, ""},
			"subject":          {"subject", true, false, ""},
			"to":               {"to", false, false, ""},
			"username":         {"username", false, false, ""},
		},
	},
	"dawidd6/action-send-mail@v6": {
		Name: "Send email",
		Inputs: ActionMetadataInputs{
			"attachments":      {"attachments", false, false, ""},
			"bcc":              {"bcc", false, false, ""},
			"body":             {"body", false, false, ""},
			"cc":               {"cc", false, false, ""},
			"connection_url":   {"connection_url", false, false, ""},
			"convert_markdown": {"convert_markdown", false, false, ""},
			"envelope_from":    {"envelope_from", false, false, ""},
			"envelope_to":      {"envelope_to", false, false, ""},
			"from":             {"from", true, false, ""},
			"html_body":        {"html_body", false, false, ""},
			"ignore_cert":      {"ignore_cert", false, false, ""},
			"in_reply_to":      {"in_reply_to", false, false, ""},
			"nodemailerdebug":  {"nodemailerdebug", false, false, ""},
			"nodemailerlog":    {"nodemailerlog", false, false, ""},
			"password":         {"password", false, false, ""},
			"priority":         {"priority", false, false, ""},
			"reply_to":         {"reply_to", false, false, ""},
			"secure":           {"secure", false, false, ""},
			"server_address":   {"server_address", false, false, ""},
			"server_port":      {"server_port", false, false, ""},
			"subject":          {"subject", true, false, ""},
			"to":               {"to", false, false, ""},
			"username":         {"username", false, false, ""},
		},
	},
	"dessant/lock-threads@v5": {
		Name: "Lock Threads",
		Inputs: ActionMetadataInputs{
			"add-discussion-labels":              {"add-discussion-labels", false, false, ""},
			"add-issue-labels":                   {"add-issue-labels", false, false, ""},
			"add-pr-labels":                      {"add-pr-labels", false, false, ""},
			"discussion-comment":                 {"discussion-comment", false, false, ""},
			"discussion-inactive-days":           {"discussion-inactive-days", false, false, ""},
			"exclude-any-discussion-labels":      {"exclude-any-discussion-labels", false, false, ""},
			"exclude-any-issue-labels":           {"exclude-any-issue-labels", false, false, ""},
			"exclude-any-pr-labels":              {"exclude-any-pr-labels", false, false, ""},
			"exclude-discussion-closed-after":    {"exclude-discussion-closed-after", false, false, ""},
			"exclude-discussion-closed-before":   {"exclude-discussion-closed-before", false, false, ""},
			"exclude-discussion-closed-between":  {"exclude-discussion-closed-between", false, false, ""},
			"exclude-discussion-created-after":   {"exclude-discussion-created-after", false, false, ""},
			"exclude-discussion-created-before":  {"exclude-discussion-created-before", false, false, ""},
			"exclude-discussion-created-between": {"exclude-discussion-created-between", false, false, ""},
			"exclude-issue-closed-after":         {"exclude-issue-closed-after", false, false, ""},
			"exclude-issue-closed-before":        {"exclude-issue-closed-before", false, false, ""},
			"exclude-issue-closed-between":       {"exclude-issue-closed-between", false, false, ""},
			"exclude-issue-created-after":        {"exclude-issue-created-after", false, false, ""},
			"exclude-issue-created-before":       {"exclude-issue-created-before", false, false, ""},
			"exclude-issue-created-between":      {"exclude-issue-created-between", false, false, ""},
			"exclude-pr-closed-after":            {"exclude-pr-closed-after", false, false, ""},
			"exclude-pr-closed-before":           {"exclude-pr-closed-before", false, false, ""},
			"exclude-pr-closed-between":          {"exclude-pr-closed-between", false, false, ""},
			"exclude-pr-created-after":           {"exclude-pr-created-after", false, false, ""},
			"exclude-pr-created-before":          {"exclude-pr-created-before", false, false, ""},
			"exclude-pr-created-between":         {"exclude-pr-created-between", false, false, ""},
			"github-token":                       {"github-token", false, false, ""},
			"include-all-discussion-labels":      {"include-all-discussion-labels", false, false, ""},
			"include-all-issue-labels":           {"include-all-issue-labels", false, false, ""},
			"include-all-pr-labels":              {"include-all-pr-labels", false, false, ""},
			"include-any-discussion-labels":      {"include-any-discussion-labels", false, false, ""},
			"include-any-issue-labels":           {"include-any-issue-labels", false, false, ""},
			"include-any-pr-labels":              {"include-any-pr-labels", false, false, ""},
			"issue-comment":                      {"issue-comment", false, false, ""},
			"issue-inactive-days":                {"issue-inactive-days", false, false, ""},
			"issue-lock-reason":                  {"issue-lock-reason", false, false, ""},
			"log-output":                         {"log-output", false, false, ""},
			"pr-comment":                         {"pr-comment", false, false, ""},
			"pr-inactive-days":                   {"pr-inactive-days", false, false, ""},
			"pr-lock-reason":                     {"pr-lock-reason", false, false, ""},
			"process-only":                       {"process-only", false, false, ""},
			"remove-discussion-labels":           {"remove-discussion-labels", false, false, ""},
			"remove-issue-labels":                {"remove-issue-labels", false, false, ""},
			"remove-pr-labels":                   {"remove-pr-labels", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"discussions": {"discussions"},
			"issues":      {"issues"},
			"prs":         {"prs"},
		},
	},
	"docker/build-push-action@v1": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add_git_labels": {"add_git_labels", false, false, ""},
			"always_pull":    {"always_pull", false, false, ""},
			"build_args":     {"build_args", false, false, ""},
			"cache_froms":    {"cache_froms", false, false, ""},
			"dockerfile":     {"dockerfile", false, false, ""},
			"labels":         {"labels", false, false, ""},
			"password":       {"password", false, false, ""},
			"path":           {"path", false, false, ""},
			"push":           {"push", false, false, ""},
			"registry":       {"registry", false, false, ""},
			"repository":     {"repository", true, true, "v2 is now available through docker/build-push-action@v2"},
			"tag_with_ref":   {"tag_with_ref", false, false, ""},
			"tag_with_sha":   {"tag_with_sha", false, false, ""},
			"tags":           {"tags", false, false, ""},
			"target":         {"target", false, false, ""},
			"username":       {"username", false, false, ""},
		},
	},
	"docker/build-push-action@v5": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add-hosts":        {"add-hosts", false, false, ""},
			"allow":            {"allow", false, false, ""},
			"annotations":      {"annotations", false, false, ""},
			"attests":          {"attests", false, false, ""},
			"build-args":       {"build-args", false, false, ""},
			"build-contexts":   {"build-contexts", false, false, ""},
			"builder":          {"builder", false, false, ""},
			"cache-from":       {"cache-from", false, false, ""},
			"cache-to":         {"cache-to", false, false, ""},
			"cgroup-parent":    {"cgroup-parent", false, false, ""},
			"context":          {"context", false, false, ""},
			"file":             {"file", false, false, ""},
			"github-token":     {"github-token", false, false, ""},
			"labels":           {"labels", false, false, ""},
			"load":             {"load", false, false, ""},
			"network":          {"network", false, false, ""},
			"no-cache":         {"no-cache", false, false, ""},
			"no-cache-filters": {"no-cache-filters", false, false, ""},
			"outputs":          {"outputs", false, false, ""},
			"platforms":        {"platforms", false, false, ""},
			"provenance":       {"provenance", false, false, ""},
			"pull":             {"pull", false, false, ""},
			"push":             {"push", false, false, ""},
			"sbom":             {"sbom", false, false, ""},
			"secret-envs":      {"secret-envs", false, false, ""},
			"secret-files":     {"secret-files", false, false, ""},
			"secrets":          {"secrets", false, false, ""},
			"shm-size":         {"shm-size", false, false, ""},
			"ssh":              {"ssh", false, false, ""},
			"tags":             {"tags", false, false, ""},
			"target":           {"target", false, false, ""},
			"ulimit":           {"ulimit", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"digest":   {"digest"},
			"imageid":  {"imageid"},
			"metadata": {"metadata"},
		},
	},
	"docker/build-push-action@v6": {
		Name: "Build and push Docker images",
		Inputs: ActionMetadataInputs{
			"add-hosts":        {"add-hosts", false, false, ""},
			"allow":            {"allow", false, false, ""},
			"annotations":      {"annotations", false, false, ""},
			"attests":          {"attests", false, false, ""},
			"build-args":       {"build-args", false, false, ""},
			"build-contexts":   {"build-contexts", false, false, ""},
			"builder":          {"builder", false, false, ""},
			"cache-from":       {"cache-from", false, false, ""},
			"cache-to":         {"cache-to", false, false, ""},
			"call":             {"call", false, false, ""},
			"cgroup-parent":    {"cgroup-parent", false, false, ""},
			"context":          {"context", false, false, ""},
			"file":             {"file", false, false, ""},
			"github-token":     {"github-token", false, false, ""},
			"labels":           {"labels", false, false, ""},
			"load":             {"load", false, false, ""},
			"network":          {"network", false, false, ""},
			"no-cache":         {"no-cache", false, false, ""},
			"no-cache-filters": {"no-cache-filters", false, false, ""},
			"outputs":          {"outputs", false, false, ""},
			"platforms":        {"platforms", false, false, ""},
			"provenance":       {"provenance", false, false, ""},
			"pull":             {"pull", false, false, ""},
			"push":             {"push", false, false, ""},
			"sbom":             {"sbom", false, false, ""},
			"secret-envs":      {"secret-envs", false, false, ""},
			"secret-files":     {"secret-files", false, false, ""},
			"secrets":          {"secrets", false, false, ""},
			"shm-size":         {"shm-size", false, false, ""},
			"ssh":              {"ssh", false, false, ""},
			"tags":             {"tags", false, false, ""},
			"target":           {"target", false, false, ""},
			"ulimit":           {"ulimit", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"digest":   {"digest"},
			"imageid":  {"imageid"},
			"metadata": {"metadata"},
		},
	},
	"docker/login-action@v3": {
		Name: "Docker Login",
		Inputs: ActionMetadataInputs{
			"ecr":           {"ecr", false, false, ""},
			"logout":        {"logout", false, false, ""},
			"password":      {"password", false, false, ""},
			"registry":      {"registry", false, false, ""},
			"registry-auth": {"registry-auth", false, false, ""},
			"username":      {"username", false, false, ""},
		},
	},
	"docker/metadata-action@v5": {
		Name: "Docker Metadata action",
		Inputs: ActionMetadataInputs{
			"annotations":     {"annotations", false, false, ""},
			"bake-target":     {"bake-target", false, false, ""},
			"context":         {"context", false, false, ""},
			"flavor":          {"flavor", false, false, ""},
			"github-token":    {"github-token", false, false, ""},
			"images":          {"images", false, false, ""},
			"labels":          {"labels", false, false, ""},
			"sep-annotations": {"sep-annotations", false, false, ""},
			"sep-labels":      {"sep-labels", false, false, ""},
			"sep-tags":        {"sep-tags", false, false, ""},
			"tags":            {"tags", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"annotations":           {"annotations"},
			"bake-file":             {"bake-file"},
			"bake-file-annotations": {"bake-file-annotations"},
			"bake-file-labels":      {"bake-file-labels"},
			"bake-file-tags":        {"bake-file-tags"},
			"json":                  {"json"},
			"labels":                {"labels"},
			"tags":                  {"tags"},
			"version":               {"version"},
		},
	},
	"docker/setup-buildx-action@v3": {
		Name: "Docker Setup Buildx",
		Inputs: ActionMetadataInputs{
			"append":                  {"append", false, false, ""},
			"buildkitd-config":        {"buildkitd-config", false, false, ""},
			"buildkitd-config-inline": {"buildkitd-config-inline", false, false, ""},
			"buildkitd-flags":         {"buildkitd-flags", false, false, ""},
			"cache-binary":            {"cache-binary", false, false, ""},
			"cleanup":                 {"cleanup", false, false, ""},
			"config":                  {"config", false, true, "Use buildkitd-config instead"},
			"config-inline":           {"config-inline", false, true, "Use buildkitd-config-inline instead"},
			"driver":                  {"driver", false, false, ""},
			"driver-opts":             {"driver-opts", false, false, ""},
			"endpoint":                {"endpoint", false, false, ""},
			"install":                 {"install", false, false, ""},
			"keep-state":              {"keep-state", false, false, ""},
			"name":                    {"name", false, false, ""},
			"platforms":               {"platforms", false, false, ""},
			"use":                     {"use", false, false, ""},
			"version":                 {"version", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"driver":    {"driver"},
			"endpoint":  {"endpoint"},
			"flags":     {"flags"},
			"name":      {"name"},
			"nodes":     {"nodes"},
			"platforms": {"platforms"},
			"status":    {"status"},
		},
	},
	"docker/setup-qemu-action@v3": {
		Name: "Docker Setup QEMU",
		Inputs: ActionMetadataInputs{
			"cache-image": {"cache-image", false, false, ""},
			"image":       {"image", false, false, ""},
			"platforms":   {"platforms", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"platforms": {"platforms"},
		},
	},
	"dorny/paths-filter@v3": {
		Name: "Paths Changes Filter",
		Inputs: ActionMetadataInputs{
			"base":                 {"base", false, false, ""},
			"filters":              {"filters", true, false, ""},
			"initial-fetch-depth":  {"initial-fetch-depth", false, false, ""},
			"list-files":           {"list-files", false, false, ""},
			"predicate-quantifier": {"predicate-quantifier", false, false, ""},
			"ref":                  {"ref", false, false, ""},
			"token":                {"token", false, false, ""},
			"working-directory":    {"working-directory", false, false, ""},
		},
		SkipOutputs: true,
	},
	"dtolnay/rust-toolchain@beta": {
		Name: "rustup toolchain install",
		Inputs: ActionMetadataInputs{
			"components": {"components", false, false, ""},
			"target":     {"target", false, false, ""},
			"targets":    {"targets", false, false, ""},
			"toolchain":  {"toolchain", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cachekey": {"cachekey"},
			"name":     {"name"},
		},
	},
	"dtolnay/rust-toolchain@nightly": {
		Name: "rustup toolchain install",
		Inputs: ActionMetadataInputs{
			"components": {"components", false, false, ""},
			"target":     {"target", false, false, ""},
			"targets":    {"targets", false, false, ""},
			"toolchain":  {"toolchain", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cachekey": {"cachekey"},
			"name":     {"name"},
		},
	},
	"dtolnay/rust-toolchain@stable": {
		Name: "rustup toolchain install",
		Inputs: ActionMetadataInputs{
			"components": {"components", false, false, ""},
			"target":     {"target", false, false, ""},
			"targets":    {"targets", false, false, ""},
			"toolchain":  {"toolchain", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cachekey": {"cachekey"},
			"name":     {"name"},
		},
	},
	"erlef/setup-beam@v1": {
		Name: "setup-beam",
		Inputs: ActionMetadataInputs{
			"disable_problem_matchers": {"disable_problem_matchers", false, false, ""},
			"elixir-version":           {"elixir-version", false, false, ""},
			"github-token":             {"github-token", false, false, ""},
			"gleam-version":            {"gleam-version", false, false, ""},
			"hexpm-mirrors":            {"hexpm-mirrors", false, false, ""},
			"install-hex":              {"install-hex", false, false, ""},
			"install-rebar":            {"install-rebar", false, false, ""},
			"otp-architecture":         {"otp-architecture", false, false, ""},
			"otp-version":              {"otp-version", false, false, ""},
			"rebar3-version":           {"rebar3-version", false, false, ""},
			"version-file":             {"version-file", false, false, ""},
			"version-type":             {"version-type", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"elixir-version":     {"elixir-version"},
			"gleam-version":      {"gleam-version"},
			"otp-version":        {"otp-version"},
			"rebar3-version":     {"rebar3-version"},
			"setup-beam-version": {"setup-beam-version"},
		},
	},
	"game-ci/unity-builder@v4": {
		Name: "Unity - Builder",
		Inputs: ActionMetadataInputs{
			"allowdirtybuild":               {"allowDirtyBuild", false, false, ""},
			"androidexporttype":             {"androidExportType", false, false, ""},
			"androidkeyaliasname":           {"androidKeyaliasName", false, false, ""},
			"androidkeyaliaspass":           {"androidKeyaliasPass", false, false, ""},
			"androidkeystorebase64":         {"androidKeystoreBase64", false, false, ""},
			"androidkeystorename":           {"androidKeystoreName", false, false, ""},
			"androidkeystorepass":           {"androidKeystorePass", false, false, ""},
			"androidsymboltype":             {"androidSymbolType", false, false, ""},
			"androidtargetsdkversion":       {"androidTargetSdkVersion", false, false, ""},
			"androidversioncode":            {"androidVersionCode", false, false, ""},
			"awsstackname":                  {"awsStackName", false, false, ""},
			"buildmethod":                   {"buildMethod", false, false, ""},
			"buildname":                     {"buildName", false, false, ""},
			"buildprofile":                  {"buildProfile", false, false, ""},
			"buildspath":                    {"buildsPath", false, false, ""},
			"cachekey":                      {"cacheKey", false, false, ""},
			"cacheunityinstallationonmac":   {"cacheUnityInstallationOnMac", false, false, ""},
			"chownfilesto":                  {"chownFilesTo", false, false, ""},
			"containercpu":                  {"containerCpu", false, false, ""},
			"containerhookfiles":            {"containerHookFiles", false, false, ""},
			"containermemory":               {"containerMemory", false, false, ""},
			"containerregistryimageversion": {"containerRegistryImageVersion", false, false, ""},
			"containerregistryrepository":   {"containerRegistryRepository", false, false, ""},
			"customcommandhooks":            {"customCommandHooks", false, false, ""},
			"customhookfiles":               {"customHookFiles", false, false, ""},
			"customimage":                   {"customImage", false, false, ""},
			"customjob":                     {"customJob", false, false, ""},
			"customparameters":              {"customParameters", false, false, ""},
			"dockercpulimit":                {"dockerCpuLimit", false, false, ""},
			"dockerisolationmode":           {"dockerIsolationMode", false, false, ""},
			"dockermemorylimit":             {"dockerMemoryLimit", false, false, ""},
			"dockerworkspacepath":           {"dockerWorkspacePath", false, false, ""},
			"enablegpu":                     {"enableGpu", false, false, ""},
			"githubowner":                   {"githubOwner", false, false, ""},
			"gitprivatetoken":               {"gitPrivateToken", false, false, ""},
			"kubeconfig":                    {"kubeConfig", false, false, ""},
			"kubestorageclass":              {"kubeStorageClass", false, false, ""},
			"kubevolume":                    {"kubeVolume", false, false, ""},
			"kubevolumesize":                {"kubeVolumeSize", false, false, ""},
			"manualexit":                    {"manualExit", false, false, ""},
			"postbuildsteps":                {"postBuildSteps", false, false, ""},
			"prebuildsteps":                 {"preBuildSteps", false, false, ""},
			"projectpath":                   {"projectPath", false, false, ""},
			"providerstrategy":              {"providerStrategy", false, false, ""},
			"readinputfromoverridelist":     {"readInputFromOverrideList", false, false, ""},
			"readinputoverridecommand":      {"readInputOverrideCommand", false, false, ""},
			"runashostuser":                 {"runAsHostUser", false, false, ""},
			"skipactivation":                {"skipActivation", false, false, ""},
			"sshagent":                      {"sshAgent", false, false, ""},
			"sshpublickeysdirectorypath":    {"sshPublicKeysDirectoryPath", false, false, ""},
			"targetplatform":                {"targetPlatform", false, false, ""},
			"unityhubversiononmac":          {"unityHubVersionOnMac", false, false, ""},
			"unitylicensingserver":          {"unityLicensingServer", false, false, ""},
			"unityversion":                  {"unityVersion", false, false, ""},
			"version":                       {"version", false, false, ""},
			"versioning":                    {"versioning", false, false, ""},
			"watchtoend":                    {"watchToEnd", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"androidversioncode": {"androidVersionCode"},
			"buildversion":       {"buildVersion"},
			"engineexitcode":     {"engineExitCode"},
			"volume":             {"volume"},
		},
	},
	"github/codeql-action/analyze@v3": {
		Name: "CodeQL: Finish",
		Inputs: ActionMetadataInputs{
			"add-snippets":        {"add-snippets", false, true, "The input \"add-snippets\" is deprecated and will be removed on the first release in August 2025. When this input is set to true it is expected to add code snippets with an alert to the SARIF file. However, since Code Scanning ignores code snippets provided as part of a SARIF file this is currently a no operation. No alternative is available."},
			"category":            {"category", false, false, ""},
			"check_name":          {"check_name", false, false, ""},
			"checkout_path":       {"checkout_path", false, false, ""},
			"cleanup-level":       {"cleanup-level", false, false, ""},
			"expect-error":        {"expect-error", false, false, ""},
			"matrix":              {"matrix", false, false, ""},
			"output":              {"output", false, false, ""},
			"ram":                 {"ram", false, false, ""},
			"ref":                 {"ref", false, false, ""},
			"sha":                 {"sha", false, false, ""},
			"skip-queries":        {"skip-queries", false, false, ""},
			"threads":             {"threads", false, false, ""},
			"token":               {"token", false, false, ""},
			"upload":              {"upload", false, false, ""},
			"upload-database":     {"upload-database", false, false, ""},
			"wait-for-processing": {"wait-for-processing", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"db-locations": {"db-locations"},
			"sarif-id":     {"sarif-id"},
			"sarif-output": {"sarif-output"},
		},
	},
	"github/codeql-action/analyze@v4": {
		Name: "CodeQL: Finish",
		Inputs: ActionMetadataInputs{
			"add-snippets":        {"add-snippets", false, true, "The input \"add-snippets\" is deprecated and will be removed on the first release in August 2025. When this input is set to true it is expected to add code snippets with an alert to the SARIF file. However, since Code Scanning ignores code snippets provided as part of a SARIF file this is currently a no operation. No alternative is available."},
			"category":            {"category", false, false, ""},
			"check_name":          {"check_name", false, false, ""},
			"checkout_path":       {"checkout_path", false, false, ""},
			"cleanup-level":       {"cleanup-level", false, false, ""},
			"expect-error":        {"expect-error", false, false, ""},
			"matrix":              {"matrix", false, false, ""},
			"output":              {"output", false, false, ""},
			"ram":                 {"ram", false, false, ""},
			"ref":                 {"ref", false, false, ""},
			"sha":                 {"sha", false, false, ""},
			"skip-queries":        {"skip-queries", false, false, ""},
			"threads":             {"threads", false, false, ""},
			"token":               {"token", false, false, ""},
			"upload":              {"upload", false, false, ""},
			"upload-database":     {"upload-database", false, false, ""},
			"wait-for-processing": {"wait-for-processing", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"db-locations": {"db-locations"},
			"sarif-id":     {"sarif-id"},
			"sarif-output": {"sarif-output"},
		},
	},
	"github/codeql-action/autobuild@v3": {
		Name: "CodeQL: Autobuild",
		Inputs: ActionMetadataInputs{
			"matrix":            {"matrix", false, false, ""},
			"token":             {"token", false, false, ""},
			"working-directory": {"working-directory", false, false, ""},
		},
	},
	"github/codeql-action/autobuild@v4": {
		Name: "CodeQL: Autobuild",
		Inputs: ActionMetadataInputs{
			"matrix":            {"matrix", false, false, ""},
			"token":             {"token", false, false, ""},
			"working-directory": {"working-directory", false, false, ""},
		},
	},
	"github/codeql-action/init@v3": {
		Name: "CodeQL: Init",
		Inputs: ActionMetadataInputs{
			"analysis-kinds":            {"analysis-kinds", false, false, ""},
			"build-mode":                {"build-mode", false, false, ""},
			"config":                    {"config", false, false, ""},
			"config-file":               {"config-file", false, false, ""},
			"db-location":               {"db-location", false, false, ""},
			"debug":                     {"debug", false, false, ""},
			"debug-artifact-name":       {"debug-artifact-name", false, false, ""},
			"debug-database-name":       {"debug-database-name", false, false, ""},
			"dependency-caching":        {"dependency-caching", false, false, ""},
			"external-repository-token": {"external-repository-token", false, false, ""},
			"languages":                 {"languages", false, false, ""},
			"matrix":                    {"matrix", false, false, ""},
			"packs":                     {"packs", false, false, ""},
			"quality-queries":           {"quality-queries", false, false, ""},
			"queries":                   {"queries", false, false, ""},
			"ram":                       {"ram", false, false, ""},
			"registries":                {"registries", false, false, ""},
			"setup-python-dependencies": {"setup-python-dependencies", false, false, ""},
			"source-root":               {"source-root", false, false, ""},
			"threads":                   {"threads", false, false, ""},
			"token":                     {"token", false, false, ""},
			"tools":                     {"tools", false, false, ""},
			"trap-caching":              {"trap-caching", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"codeql-path":    {"codeql-path"},
			"codeql-version": {"codeql-version"},
		},
	},
	"github/codeql-action/init@v4": {
		Name: "CodeQL: Init",
		Inputs: ActionMetadataInputs{
			"analysis-kinds":            {"analysis-kinds", false, false, ""},
			"build-mode":                {"build-mode", false, false, ""},
			"config":                    {"config", false, false, ""},
			"config-file":               {"config-file", false, false, ""},
			"db-location":               {"db-location", false, false, ""},
			"debug":                     {"debug", false, false, ""},
			"debug-artifact-name":       {"debug-artifact-name", false, false, ""},
			"debug-database-name":       {"debug-database-name", false, false, ""},
			"dependency-caching":        {"dependency-caching", false, false, ""},
			"external-repository-token": {"external-repository-token", false, false, ""},
			"languages":                 {"languages", false, false, ""},
			"matrix":                    {"matrix", false, false, ""},
			"packs":                     {"packs", false, false, ""},
			"quality-queries":           {"quality-queries", false, false, ""},
			"queries":                   {"queries", false, false, ""},
			"ram":                       {"ram", false, false, ""},
			"registries":                {"registries", false, false, ""},
			"setup-python-dependencies": {"setup-python-dependencies", false, false, ""},
			"source-root":               {"source-root", false, false, ""},
			"threads":                   {"threads", false, false, ""},
			"token":                     {"token", false, false, ""},
			"tools":                     {"tools", false, false, ""},
			"trap-caching":              {"trap-caching", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"codeql-path":    {"codeql-path"},
			"codeql-version": {"codeql-version"},
		},
	},
	"github/super-linter@v3": {
		Name: "Super-Linter",
	},
	"github/super-linter@v4": {
		Name: "Super-Linter",
	},
	"github/super-linter@v5": {
		Name: "Super-Linter",
	},
	"github/super-linter@v6": {
		Name: "Super-Linter",
	},
	"github/super-linter@v7": {
		Name: "Super-Linter",
	},
	"golangci/golangci-lint-action@v4": {
		Name: "Run golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":              {"args", false, false, ""},
			"github-token":      {"github-token", false, false, ""},
			"install-mode":      {"install-mode", false, false, ""},
			"only-new-issues":   {"only-new-issues", false, false, ""},
			"skip-build-cache":  {"skip-build-cache", false, false, ""},
			"skip-cache":        {"skip-cache", false, false, ""},
			"skip-pkg-cache":    {"skip-pkg-cache", false, false, ""},
			"version":           {"version", false, false, ""},
			"working-directory": {"working-directory", false, false, ""},
		},
	},
	"golangci/golangci-lint-action@v5": {
		Name: "Golangci-lint",
		Inputs: ActionMetadataInputs{
			"annotations":                 {"annotations", false, false, ""},
			"args":                        {"args", false, false, ""},
			"cache-invalidation-interval": {"cache-invalidation-interval", false, false, ""},
			"github-token":                {"github-token", false, false, ""},
			"install-mode":                {"install-mode", false, false, ""},
			"only-new-issues":             {"only-new-issues", false, false, ""},
			"skip-cache":                  {"skip-cache", false, false, ""},
			"skip-save-cache":             {"skip-save-cache", false, false, ""},
			"version":                     {"version", false, false, ""},
			"working-directory":           {"working-directory", false, false, ""},
		},
	},
	"golangci/golangci-lint-action@v6": {
		Name: "Golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":                        {"args", false, false, ""},
			"cache-invalidation-interval": {"cache-invalidation-interval", false, false, ""},
			"github-token":                {"github-token", false, false, ""},
			"install-mode":                {"install-mode", false, false, ""},
			"only-new-issues":             {"only-new-issues", false, false, ""},
			"problem-matchers":            {"problem-matchers", false, false, ""},
			"skip-cache":                  {"skip-cache", false, false, ""},
			"skip-save-cache":             {"skip-save-cache", false, false, ""},
			"verify":                      {"verify", false, false, ""},
			"version":                     {"version", false, false, ""},
			"working-directory":           {"working-directory", false, false, ""},
		},
	},
	"golangci/golangci-lint-action@v7": {
		Name: "Golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":                        {"args", false, false, ""},
			"cache-invalidation-interval": {"cache-invalidation-interval", false, false, ""},
			"github-token":                {"github-token", false, false, ""},
			"install-mode":                {"install-mode", false, false, ""},
			"only-new-issues":             {"only-new-issues", false, false, ""},
			"problem-matchers":            {"problem-matchers", false, false, ""},
			"skip-cache":                  {"skip-cache", false, false, ""},
			"skip-save-cache":             {"skip-save-cache", false, false, ""},
			"verify":                      {"verify", false, false, ""},
			"version":                     {"version", false, false, ""},
			"working-directory":           {"working-directory", false, false, ""},
		},
	},
	"golangci/golangci-lint-action@v8": {
		Name: "Golangci-lint",
		Inputs: ActionMetadataInputs{
			"args":                        {"args", false, false, ""},
			"cache-invalidation-interval": {"cache-invalidation-interval", false, false, ""},
			"github-token":                {"github-token", false, false, ""},
			"install-mode":                {"install-mode", false, false, ""},
			"only-new-issues":             {"only-new-issues", false, false, ""},
			"problem-matchers":            {"problem-matchers", false, false, ""},
			"skip-cache":                  {"skip-cache", false, false, ""},
			"skip-save-cache":             {"skip-save-cache", false, false, ""},
			"verify":                      {"verify", false, false, ""},
			"version":                     {"version", false, false, ""},
			"working-directory":           {"working-directory", false, false, ""},
		},
	},
	"google-github-actions/auth@v2": {
		Name: "Authenticate to Google Cloud",
		Inputs: ActionMetadataInputs{
			"access_token_lifetime":        {"access_token_lifetime", false, false, ""},
			"access_token_scopes":          {"access_token_scopes", false, false, ""},
			"access_token_subject":         {"access_token_subject", false, false, ""},
			"audience":                     {"audience", false, false, ""},
			"backoff":                      {"backoff", false, true, "This field is no longer used and will be removed in a future release."},
			"backoff_limit":                {"backoff_limit", false, true, "This field is no longer used and will be removed in a future release."},
			"cleanup_credentials":          {"cleanup_credentials", false, false, ""},
			"create_credentials_file":      {"create_credentials_file", false, false, ""},
			"credentials_json":             {"credentials_json", false, false, ""},
			"delegates":                    {"delegates", false, false, ""},
			"export_environment_variables": {"export_environment_variables", false, false, ""},
			"id_token_audience":            {"id_token_audience", false, false, ""},
			"id_token_include_email":       {"id_token_include_email", false, false, ""},
			"project_id":                   {"project_id", false, false, ""},
			"request_reason":               {"request_reason", false, false, ""},
			"retries":                      {"retries", false, true, "This field is no longer used and will be removed in a future release."},
			"service_account":              {"service_account", false, false, ""},
			"token_format":                 {"token_format", false, false, ""},
			"universe":                     {"universe", false, false, ""},
			"workload_identity_provider":   {"workload_identity_provider", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"access_token":          {"access_token"},
			"auth_token":            {"auth_token"},
			"credentials_file_path": {"credentials_file_path"},
			"id_token":              {"id_token"},
			"project_id":            {"project_id"},
		},
	},
	"google-github-actions/auth@v3": {
		Name: "Authenticate to Google Cloud",
		Inputs: ActionMetadataInputs{
			"access_token_lifetime":        {"access_token_lifetime", false, false, ""},
			"access_token_scopes":          {"access_token_scopes", false, false, ""},
			"access_token_subject":         {"access_token_subject", false, false, ""},
			"audience":                     {"audience", false, false, ""},
			"cleanup_credentials":          {"cleanup_credentials", false, false, ""},
			"create_credentials_file":      {"create_credentials_file", false, false, ""},
			"credentials_json":             {"credentials_json", false, false, ""},
			"delegates":                    {"delegates", false, false, ""},
			"export_environment_variables": {"export_environment_variables", false, false, ""},
			"id_token_audience":            {"id_token_audience", false, false, ""},
			"id_token_include_email":       {"id_token_include_email", false, false, ""},
			"project_id":                   {"project_id", false, false, ""},
			"request_reason":               {"request_reason", false, false, ""},
			"service_account":              {"service_account", false, false, ""},
			"token_format":                 {"token_format", false, false, ""},
			"universe":                     {"universe", false, false, ""},
			"workload_identity_provider":   {"workload_identity_provider", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"access_token":          {"access_token"},
			"auth_token":            {"auth_token"},
			"credentials_file_path": {"credentials_file_path"},
			"id_token":              {"id_token"},
			"project_id":            {"project_id"},
		},
	},
	"google-github-actions/get-secretmanager-secrets@v2": {
		Name: "Get Secret Manager secrets",
		Inputs: ActionMetadataInputs{
			"encoding":              {"encoding", false, false, ""},
			"export_to_environment": {"export_to_environment", false, false, ""},
			"min_mask_length":       {"min_mask_length", false, false, ""},
			"secrets":               {"secrets", true, false, ""},
			"universe":              {"universe", false, false, ""},
		},
		SkipOutputs: true,
	},
	"google-github-actions/get-secretmanager-secrets@v3": {
		Name: "Get Secret Manager secrets",
		Inputs: ActionMetadataInputs{
			"encoding":              {"encoding", false, false, ""},
			"export_to_environment": {"export_to_environment", false, false, ""},
			"min_mask_length":       {"min_mask_length", false, false, ""},
			"secrets":               {"secrets", true, false, ""},
			"universe":              {"universe", false, false, ""},
		},
		SkipOutputs: true,
	},
	"google-github-actions/setup-gcloud@v2": {
		Name: "Set up gcloud Cloud SDK environment",
		Inputs: ActionMetadataInputs{
			"install_components": {"install_components", false, false, ""},
			"project_id":         {"project_id", false, false, ""},
			"skip_install":       {"skip_install", false, false, ""},
			"skip_tool_cache":    {"skip_tool_cache", false, false, ""},
			"version":            {"version", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"version": {"version"},
		},
	},
	"google-github-actions/setup-gcloud@v3": {
		Name: "Set up gcloud Cloud SDK environment",
		Inputs: ActionMetadataInputs{
			"cache":              {"cache", false, false, ""},
			"install_components": {"install_components", false, false, ""},
			"project_id":         {"project_id", false, false, ""},
			"skip_install":       {"skip_install", false, false, ""},
			"version":            {"version", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"version": {"version"},
		},
	},
	"google-github-actions/upload-cloud-storage@v2": {
		Name: "Cloud Storage Uploader",
		Inputs: ActionMetadataInputs{
			"concurrency":          {"concurrency", false, false, ""},
			"destination":          {"destination", true, false, ""},
			"gcloudignore_path":    {"gcloudignore_path", false, false, ""},
			"glob":                 {"glob", false, false, ""},
			"gzip":                 {"gzip", false, false, ""},
			"headers":              {"headers", false, false, ""},
			"parent":               {"parent", false, false, ""},
			"path":                 {"path", true, false, ""},
			"predefinedacl":        {"predefinedAcl", false, false, ""},
			"process_gcloudignore": {"process_gcloudignore", false, false, ""},
			"project_id":           {"project_id", false, false, ""},
			"resumable":            {"resumable", false, false, ""},
			"universe":             {"universe", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"uploaded": {"uploaded"},
		},
	},
	"google-github-actions/upload-cloud-storage@v3": {
		Name: "Cloud Storage Uploader",
		Inputs: ActionMetadataInputs{
			"concurrency":          {"concurrency", false, false, ""},
			"destination":          {"destination", true, false, ""},
			"gcloudignore_path":    {"gcloudignore_path", false, false, ""},
			"glob":                 {"glob", false, false, ""},
			"gzip":                 {"gzip", false, false, ""},
			"headers":              {"headers", false, false, ""},
			"parent":               {"parent", false, false, ""},
			"path":                 {"path", true, false, ""},
			"predefinedacl":        {"predefinedAcl", false, false, ""},
			"process_gcloudignore": {"process_gcloudignore", false, false, ""},
			"project_id":           {"project_id", false, false, ""},
			"resumable":            {"resumable", false, false, ""},
			"universe":             {"universe", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"uploaded": {"uploaded"},
		},
	},
	"goreleaser/goreleaser-action@v5": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":         {"args", false, false, ""},
			"distribution": {"distribution", false, false, ""},
			"install-only": {"install-only", false, false, ""},
			"version":      {"version", false, false, ""},
			"workdir":      {"workdir", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts": {"artifacts"},
			"metadata":  {"metadata"},
		},
	},
	"goreleaser/goreleaser-action@v6": {
		Name: "GoReleaser Action",
		Inputs: ActionMetadataInputs{
			"args":         {"args", false, false, ""},
			"distribution": {"distribution", false, false, ""},
			"install-only": {"install-only", false, false, ""},
			"version":      {"version", false, false, ""},
			"workdir":      {"workdir", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"artifacts": {"artifacts"},
			"metadata":  {"metadata"},
		},
	},
	"gradle/wrapper-validation-action@v2": {
		Name: "Gradle Wrapper Validation",
		Inputs: ActionMetadataInputs{
			"allow-checksums":   {"allow-checksums", false, false, ""},
			"allow-snapshots":   {"allow-snapshots", false, false, ""},
			"min-wrapper-count": {"min-wrapper-count", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"failed-wrapper": {"failed-wrapper"},
		},
	},
	"gradle/wrapper-validation-action@v3": {
		Name: "Gradle Wrapper Validation",
		Inputs: ActionMetadataInputs{
			"allow-checksums":   {"allow-checksums", false, false, ""},
			"allow-snapshots":   {"allow-snapshots", false, false, ""},
			"min-wrapper-count": {"min-wrapper-count", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"failed-wrapper": {"failed-wrapper"},
		},
	},
	"microsoft/playwright-github-action@v1": {
		Name: "Run Playwright tests",
	},
	"mikepenz/release-changelog-builder-action@v4": {
		Name: "Release Changelog Builder",
		Inputs: ActionMetadataInputs{
			"baseurl":                 {"baseUrl", false, false, ""},
			"cache":                   {"cache", false, false, ""},
			"commitmode":              {"commitMode", false, false, ""},
			"configuration":           {"configuration", false, false, ""},
			"configurationjson":       {"configurationJson", false, false, ""},
			"exportcache":             {"exportCache", false, false, ""},
			"exportonly":              {"exportOnly", false, false, ""},
			"failonerror":             {"failOnError", false, false, ""},
			"fetchreleaseinformation": {"fetchReleaseInformation", false, false, ""},
			"fetchreviewers":          {"fetchReviewers", false, false, ""},
			"fetchreviews":            {"fetchReviews", false, false, ""},
			"fetchviacommits":         {"fetchViaCommits", false, false, ""},
			"fromtag":                 {"fromTag", false, false, ""},
			"ignoreprereleases":       {"ignorePreReleases", false, false, ""},
			"includeopen":             {"includeOpen", false, false, ""},
			"outputfile":              {"outputFile", false, false, ""},
			"owner":                   {"owner", false, false, ""},
			"path":                    {"path", false, false, ""},
			"platform":                {"platform", false, false, ""},
			"repo":                    {"repo", false, false, ""},
			"token":                   {"token", false, false, ""},
			"totag":                   {"toTag", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache":             {"cache"},
			"categorized_prs":   {"categorized_prs"},
			"changelog":         {"changelog"},
			"failed":            {"failed"},
			"fromtag":           {"fromTag"},
			"open_prs":          {"open_prs"},
			"owner":             {"owner"},
			"pull_requests":     {"pull_requests"},
			"repo":              {"repo"},
			"totag":             {"toTag"},
			"uncategorized_prs": {"uncategorized_prs"},
		},
	},
	"mikepenz/release-changelog-builder-action@v5": {
		Name: "Release Changelog Builder",
		Inputs: ActionMetadataInputs{
			"baseurl":                 {"baseUrl", false, false, ""},
			"cache":                   {"cache", false, false, ""},
			"commitmode":              {"commitMode", false, false, ""},
			"configuration":           {"configuration", false, false, ""},
			"configurationjson":       {"configurationJson", false, false, ""},
			"exportcache":             {"exportCache", false, false, ""},
			"exportonly":              {"exportOnly", false, false, ""},
			"failonerror":             {"failOnError", false, false, ""},
			"fetchreleaseinformation": {"fetchReleaseInformation", false, false, ""},
			"fetchreviewers":          {"fetchReviewers", false, false, ""},
			"fetchreviews":            {"fetchReviews", false, false, ""},
			"fetchviacommits":         {"fetchViaCommits", false, false, ""},
			"fromtag":                 {"fromTag", false, false, ""},
			"ignoreprereleases":       {"ignorePreReleases", false, false, ""},
			"includeopen":             {"includeOpen", false, false, ""},
			"mode":                    {"mode", false, false, ""},
			"offlinemode":             {"offlineMode", false, false, ""},
			"outputfile":              {"outputFile", false, false, ""},
			"owner":                   {"owner", false, false, ""},
			"path":                    {"path", false, false, ""},
			"platform":                {"platform", false, false, ""},
			"repo":                    {"repo", false, false, ""},
			"token":                   {"token", false, false, ""},
			"totag":                   {"toTag", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"cache":             {"cache"},
			"categorized_prs":   {"categorized_prs"},
			"changelog":         {"changelog"},
			"failed":            {"failed"},
			"fromtag":           {"fromTag"},
			"open_prs":          {"open_prs"},
			"owner":             {"owner"},
			"pull_requests":     {"pull_requests"},
			"repo":              {"repo"},
			"totag":             {"toTag"},
			"uncategorized_prs": {"uncategorized_prs"},
		},
	},
	"msys2/setup-msys2@v2": {
		Name: "Setup MSYS2",
		Inputs: ActionMetadataInputs{
			"cache":                   {"cache", false, false, ""},
			"install":                 {"install", false, false, ""},
			"location":                {"location", false, false, ""},
			"msystem":                 {"msystem", false, false, ""},
			"pacboy":                  {"pacboy", false, false, ""},
			"path-type":               {"path-type", false, false, ""},
			"platform-check-severity": {"platform-check-severity", false, false, ""},
			"release":                 {"release", false, false, ""},
			"update":                  {"update", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"msys2-location": {"msys2-location"},
		},
	},
	"ncipollo/release-action@v1": {
		Name: "Create Release",
		Inputs: ActionMetadataInputs{
			"allowupdates":                    {"allowUpdates", false, false, ""},
			"artifact":                        {"artifact", false, true, "Use 'artifacts' instead."},
			"artifactcontenttype":             {"artifactContentType", false, false, ""},
			"artifacterrorsfailbuild":         {"artifactErrorsFailBuild", false, false, ""},
			"artifacts":                       {"artifacts", false, false, ""},
			"body":                            {"body", false, false, ""},
			"bodyfile":                        {"bodyFile", false, false, ""},
			"commit":                          {"commit", false, false, ""},
			"discussioncategory":              {"discussionCategory", false, false, ""},
			"draft":                           {"draft", false, false, ""},
			"generatereleasenotes":            {"generateReleaseNotes", false, false, ""},
			"generatereleasenotesprevioustag": {"generateReleaseNotesPreviousTag", false, false, ""},
			"immutablecreate":                 {"immutableCreate", false, false, ""},
			"makelatest":                      {"makeLatest", false, false, ""},
			"name":                            {"name", false, false, ""},
			"omitbody":                        {"omitBody", false, false, ""},
			"omitbodyduringupdate":            {"omitBodyDuringUpdate", false, false, ""},
			"omitdraftduringupdate":           {"omitDraftDuringUpdate", false, false, ""},
			"omitname":                        {"omitName", false, false, ""},
			"omitnameduringupdate":            {"omitNameDuringUpdate", false, false, ""},
			"omitprereleaseduringupdate":      {"omitPrereleaseDuringUpdate", false, false, ""},
			"owner":                           {"owner", false, false, ""},
			"prerelease":                      {"prerelease", false, false, ""},
			"removeartifacts":                 {"removeArtifacts", false, false, ""},
			"replacesartifacts":               {"replacesArtifacts", false, false, ""},
			"repo":                            {"repo", false, false, ""},
			"skipifreleaseexists":             {"skipIfReleaseExists", false, false, ""},
			"tag":                             {"tag", false, false, ""},
			"token":                           {"token", false, false, ""},
			"updateonlyunreleased":            {"updateOnlyUnreleased", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"assets":      {"assets"},
			"html_url":    {"html_url"},
			"id":          {"id"},
			"tarball_url": {"tarball_url"},
			"upload_url":  {"upload_url"},
			"zipball_url": {"zipball_url"},
		},
	},
	"nwtgck/actions-netlify@v3": {
		Name: "Netlify Actions",
		Inputs: ActionMetadataInputs{
			"alias":                           {"alias", false, false, ""},
			"deploy-message":                  {"deploy-message", false, false, ""},
			"enable-commit-comment":           {"enable-commit-comment", false, false, ""},
			"enable-commit-status":            {"enable-commit-status", false, false, ""},
			"enable-github-deployment":        {"enable-github-deployment", false, false, ""},
			"enable-pull-request-comment":     {"enable-pull-request-comment", false, false, ""},
			"fails-without-credentials":       {"fails-without-credentials", false, false, ""},
			"functions-dir":                   {"functions-dir", false, false, ""},
			"github-deployment-description":   {"github-deployment-description", false, false, ""},
			"github-deployment-environment":   {"github-deployment-environment", false, false, ""},
			"github-token":                    {"github-token", false, false, ""},
			"netlify-config-path":             {"netlify-config-path", false, false, ""},
			"overwrites-pull-request-comment": {"overwrites-pull-request-comment", false, false, ""},
			"production-branch":               {"production-branch", false, false, ""},
			"production-deploy":               {"production-deploy", false, false, ""},
			"publish-dir":                     {"publish-dir", true, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"deploy-url": {"deploy-url"},
		},
	},
	"octokit/graphql-action@v2.x": {
		Name: "GitHub GraphQL API Query",
		Inputs: ActionMetadataInputs{
			"mediatype": {"mediaType", false, false, ""},
			"query":     {"query", true, false, ""},
			"variables": {"variables", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"data": {"data"},
		},
	},
	"octokit/request-action@v2.x": {
		Name:       "GitHub API Request",
		SkipInputs: true,
		Outputs: ActionMetadataOutputs{
			"data":    {"data"},
			"headers": {"headers"},
			"status":  {"status"},
		},
	},
	"peaceiris/actions-gh-pages@v2": {
		Name: "GitHub Pages action",
		Inputs: ActionMetadataInputs{
			"commitmessage": {"commitMessage", false, false, ""},
			"emptycommits":  {"emptyCommits", false, false, ""},
			"forceorphan":   {"forceOrphan", false, false, ""},
			"keepfiles":     {"keepFiles", false, false, ""},
			"tagmessage":    {"tagMessage", false, false, ""},
			"tagname":       {"tagName", false, false, ""},
			"tagoverwrite":  {"tagOverwrite", false, false, ""},
			"useremail":     {"useremail", false, false, ""},
			"username":      {"username", false, false, ""},
		},
	},
	"peaceiris/actions-gh-pages@v4": {
		Name: "GitHub Pages action",
		Inputs: ActionMetadataInputs{
			"allow_empty_commit":  {"allow_empty_commit", false, false, ""},
			"cname":               {"cname", false, false, ""},
			"commit_message":      {"commit_message", false, false, ""},
			"deploy_key":          {"deploy_key", false, false, ""},
			"destination_dir":     {"destination_dir", false, false, ""},
			"disable_nojekyll":    {"disable_nojekyll", false, false, ""},
			"enable_jekyll":       {"enable_jekyll", false, false, ""},
			"exclude_assets":      {"exclude_assets", false, false, ""},
			"external_repository": {"external_repository", false, false, ""},
			"force_orphan":        {"force_orphan", false, false, ""},
			"full_commit_message": {"full_commit_message", false, false, ""},
			"github_token":        {"github_token", false, false, ""},
			"keep_files":          {"keep_files", false, false, ""},
			"personal_token":      {"personal_token", false, false, ""},
			"publish_branch":      {"publish_branch", false, false, ""},
			"publish_dir":         {"publish_dir", false, false, ""},
			"tag_message":         {"tag_message", false, false, ""},
			"tag_name":            {"tag_name", false, false, ""},
			"user_email":          {"user_email", false, false, ""},
			"user_name":           {"user_name", false, false, ""},
		},
	},
	"peaceiris/actions-hugo@v3": {
		Name: "Hugo setup",
		Inputs: ActionMetadataInputs{
			"extended":     {"extended", false, false, ""},
			"hugo-version": {"hugo-version", false, false, ""},
		},
	},
	"peter-evans/create-or-update-comment@v4": {
		Name: "Create or Update Comment",
		Inputs: ActionMetadataInputs{
			"append-separator":    {"append-separator", false, false, ""},
			"body":                {"body", false, false, ""},
			"body-file":           {"body-file", false, false, ""},
			"body-path":           {"body-path", false, false, ""},
			"comment-id":          {"comment-id", false, false, ""},
			"edit-mode":           {"edit-mode", false, false, ""},
			"issue-number":        {"issue-number", false, false, ""},
			"reactions":           {"reactions", false, false, ""},
			"reactions-edit-mode": {"reactions-edit-mode", false, false, ""},
			"repository":          {"repository", false, false, ""},
			"token":               {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"comment-id": {"comment-id"},
		},
	},
	"peter-evans/create-or-update-comment@v5": {
		Name: "Create or Update Comment",
		Inputs: ActionMetadataInputs{
			"append-separator":    {"append-separator", false, false, ""},
			"body":                {"body", false, false, ""},
			"body-file":           {"body-file", false, false, ""},
			"body-path":           {"body-path", false, false, ""},
			"comment-id":          {"comment-id", false, false, ""},
			"edit-mode":           {"edit-mode", false, false, ""},
			"issue-number":        {"issue-number", false, false, ""},
			"reactions":           {"reactions", false, false, ""},
			"reactions-edit-mode": {"reactions-edit-mode", false, false, ""},
			"repository":          {"repository", false, false, ""},
			"token":               {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"comment-id": {"comment-id"},
		},
	},
	"peter-evans/create-pull-request@v6": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"add-paths":      {"add-paths", false, false, ""},
			"assignees":      {"assignees", false, false, ""},
			"author":         {"author", false, false, ""},
			"base":           {"base", false, false, ""},
			"body":           {"body", false, false, ""},
			"body-path":      {"body-path", false, false, ""},
			"branch":         {"branch", false, false, ""},
			"branch-suffix":  {"branch-suffix", false, false, ""},
			"commit-message": {"commit-message", false, false, ""},
			"committer":      {"committer", false, false, ""},
			"delete-branch":  {"delete-branch", false, false, ""},
			"draft":          {"draft", false, false, ""},
			"git-token":      {"git-token", false, false, ""},
			"labels":         {"labels", false, false, ""},
			"milestone":      {"milestone", false, false, ""},
			"path":           {"path", false, false, ""},
			"push-to-fork":   {"push-to-fork", false, false, ""},
			"reviewers":      {"reviewers", false, false, ""},
			"signoff":        {"signoff", false, false, ""},
			"team-reviewers": {"team-reviewers", false, false, ""},
			"title":          {"title", false, false, ""},
			"token":          {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"pull-request-branch":    {"pull-request-branch"},
			"pull-request-head-sha":  {"pull-request-head-sha"},
			"pull-request-number":    {"pull-request-number"},
			"pull-request-operation": {"pull-request-operation"},
			"pull-request-url":       {"pull-request-url"},
		},
	},
	"peter-evans/create-pull-request@v7": {
		Name: "Create Pull Request",
		Inputs: ActionMetadataInputs{
			"add-paths":             {"add-paths", false, false, ""},
			"assignees":             {"assignees", false, false, ""},
			"author":                {"author", false, false, ""},
			"base":                  {"base", false, false, ""},
			"body":                  {"body", false, false, ""},
			"body-path":             {"body-path", false, false, ""},
			"branch":                {"branch", false, false, ""},
			"branch-suffix":         {"branch-suffix", false, false, ""},
			"branch-token":          {"branch-token", false, false, ""},
			"commit-message":        {"commit-message", false, false, ""},
			"committer":             {"committer", false, false, ""},
			"delete-branch":         {"delete-branch", false, false, ""},
			"draft":                 {"draft", false, false, ""},
			"labels":                {"labels", false, false, ""},
			"maintainer-can-modify": {"maintainer-can-modify", false, false, ""},
			"milestone":             {"milestone", false, false, ""},
			"path":                  {"path", false, false, ""},
			"push-to-fork":          {"push-to-fork", false, false, ""},
			"reviewers":             {"reviewers", false, false, ""},
			"sign-commits":          {"sign-commits", false, false, ""},
			"signoff":               {"signoff", false, false, ""},
			"team-reviewers":        {"team-reviewers", false, false, ""},
			"title":                 {"title", false, false, ""},
			"token":                 {"token", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"pull-request-branch":    {"pull-request-branch"},
			"pull-request-head-sha":  {"pull-request-head-sha"},
			"pull-request-number":    {"pull-request-number"},
			"pull-request-operation": {"pull-request-operation"},
			"pull-request-url":       {"pull-request-url"},
		},
	},
	"preactjs/compressed-size-action@v2": {
		Name: "compressed-size-action",
		Inputs: ActionMetadataInputs{
			"build-script":             {"build-script", false, false, ""},
			"clean-script":             {"clean-script", false, false, ""},
			"collapse-unchanged":       {"collapse-unchanged", false, false, ""},
			"comment-key":              {"comment-key", false, false, ""},
			"compression":              {"compression", false, false, ""},
			"cwd":                      {"cwd", false, false, ""},
			"exclude":                  {"exclude", false, false, ""},
			"install-script":           {"install-script", false, false, ""},
			"minimum-change-threshold": {"minimum-change-threshold", false, false, ""},
			"omit-unchanged":           {"omit-unchanged", false, false, ""},
			"pattern":                  {"pattern", false, false, ""},
			"repo-token":               {"repo-token", false, false, ""},
			"show-total":               {"show-total", false, false, ""},
			"strip-hash":               {"strip-hash", false, false, ""},
			"use-check":                {"use-check", false, false, ""},
		},
	},
	"pulumi/actions@v1": {
		Name: "Pulumi CLI Action",
		Inputs: ActionMetadataInputs{
			"command": {"command", true, false, ""},
		},
	},
	"pulumi/actions@v5": {
		Name: "Pulumi CLI Action",
		Inputs: ActionMetadataInputs{
			"always-include-summary": {"always-include-summary", false, false, ""},
			"cloud-url":              {"cloud-url", false, false, ""},
			"color":                  {"color", false, false, ""},
			"command":                {"command", false, false, ""},
			"comment-on-pr":          {"comment-on-pr", false, false, ""},
			"comment-on-pr-number":   {"comment-on-pr-number", false, false, ""},
			"comment-on-summary":     {"comment-on-summary", false, false, ""},
			"config-map":             {"config-map", false, false, ""},
			"diff":                   {"diff", false, false, ""},
			"edit-pr-comment":        {"edit-pr-comment", false, false, ""},
			"exclude-protected":      {"exclude-protected", false, false, ""},
			"expect-no-changes":      {"expect-no-changes", false, false, ""},
			"github-token":           {"github-token", false, false, ""},
			"message":                {"message", false, false, ""},
			"parallel":               {"parallel", false, false, ""},
			"plan":                   {"plan", false, false, ""},
			"policypackconfigs":      {"policyPackConfigs", false, false, ""},
			"policypacks":            {"policyPacks", false, false, ""},
			"pulumi-version":         {"pulumi-version", false, false, ""},
			"pulumi-version-file":    {"pulumi-version-file", false, false, ""},
			"refresh":                {"refresh", false, false, ""},
			"remove":                 {"remove", false, false, ""},
			"replace":                {"replace", false, false, ""},
			"secrets-provider":       {"secrets-provider", false, false, ""},
			"stack-name":             {"stack-name", false, false, ""},
			"suppress-outputs":       {"suppress-outputs", false, false, ""},
			"suppress-progress":      {"suppress-progress", false, false, ""},
			"target":                 {"target", false, false, ""},
			"target-dependents":      {"target-dependents", false, false, ""},
			"upsert":                 {"upsert", false, false, ""},
			"work-dir":               {"work-dir", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"output": {"output"},
		},
	},
	"pulumi/actions@v6": {
		Name: "Pulumi CLI Action",
		Inputs: ActionMetadataInputs{
			"always-include-summary": {"always-include-summary", false, false, ""},
			"cloud-url":              {"cloud-url", false, false, ""},
			"color":                  {"color", false, false, ""},
			"command":                {"command", false, false, ""},
			"comment-on-pr":          {"comment-on-pr", false, false, ""},
			"comment-on-pr-number":   {"comment-on-pr-number", false, false, ""},
			"comment-on-summary":     {"comment-on-summary", false, false, ""},
			"config-map":             {"config-map", false, false, ""},
			"continue-on-error":      {"continue-on-error", false, false, ""},
			"debug":                  {"debug", false, false, ""},
			"diff":                   {"diff", false, false, ""},
			"edit-pr-comment":        {"edit-pr-comment", false, false, ""},
			"exclude":                {"exclude", false, false, ""},
			"exclude-dependents":     {"exclude-dependents", false, false, ""},
			"exclude-protected":      {"exclude-protected", false, false, ""},
			"expect-no-changes":      {"expect-no-changes", false, false, ""},
			"github-token":           {"github-token", false, false, ""},
			"log-flow":               {"log-flow", false, false, ""},
			"log-verbosity":          {"log-verbosity", false, false, ""},
			"message":                {"message", false, false, ""},
			"parallel":               {"parallel", false, false, ""},
			"plan":                   {"plan", false, false, ""},
			"policypackconfigs":      {"policyPackConfigs", false, false, ""},
			"policypacks":            {"policyPacks", false, false, ""},
			"pulumi-version":         {"pulumi-version", false, false, ""},
			"pulumi-version-file":    {"pulumi-version-file", false, false, ""},
			"refresh":                {"refresh", false, false, ""},
			"remove":                 {"remove", false, false, ""},
			"replace":                {"replace", false, false, ""},
			"secrets-provider":       {"secrets-provider", false, false, ""},
			"stack-name":             {"stack-name", false, false, ""},
			"suppress-outputs":       {"suppress-outputs", false, false, ""},
			"suppress-progress":      {"suppress-progress", false, false, ""},
			"target":                 {"target", false, false, ""},
			"target-dependents":      {"target-dependents", false, false, ""},
			"upsert":                 {"upsert", false, false, ""},
			"work-dir":               {"work-dir", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"output": {"output"},
		},
	},
	"pypa/gh-action-pypi-publish@release/v1": {
		Name: "pypi-publish",
		Inputs: ActionMetadataInputs{
			"attestations":    {"attestations", false, false, ""},
			"packages-dir":    {"packages-dir", false, false, ""},
			"packages_dir":    {"packages_dir", false, true, "The inputs have been normalized to use kebab-case. Use `packages-dir` instead."},
			"password":        {"password", false, false, ""},
			"print-hash":      {"print-hash", false, false, ""},
			"print_hash":      {"print_hash", false, true, "The inputs have been normalized to use kebab-case. Use `print-hash` instead."},
			"repository-url":  {"repository-url", false, false, ""},
			"repository_url":  {"repository_url", false, true, "The inputs have been normalized to use kebab-case. Use `repository-url` instead."},
			"skip-existing":   {"skip-existing", false, false, ""},
			"skip_existing":   {"skip_existing", false, true, "The inputs have been normalized to use kebab-case. Use `skip-existing` instead."},
			"user":            {"user", false, false, ""},
			"verbose":         {"verbose", false, false, ""},
			"verify-metadata": {"verify-metadata", false, false, ""},
			"verify_metadata": {"verify_metadata", false, true, "The inputs have been normalized to use kebab-case. Use `verify-metadata` instead."},
		},
	},
	"release-drafter/release-drafter@v6": {
		Name: "Release Drafter",
		Inputs: ActionMetadataInputs{
			"commitish":             {"commitish", false, false, ""},
			"config-name":           {"config-name", false, false, ""},
			"disable-autolabeler":   {"disable-autolabeler", false, false, ""},
			"disable-releaser":      {"disable-releaser", false, false, ""},
			"footer":                {"footer", false, false, ""},
			"header":                {"header", false, false, ""},
			"latest":                {"latest", false, false, ""},
			"name":                  {"name", false, false, ""},
			"prerelease":            {"prerelease", false, false, ""},
			"prerelease-identifier": {"prerelease-identifier", false, false, ""},
			"publish":               {"publish", false, false, ""},
			"tag":                   {"tag", false, false, ""},
			"version":               {"version", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"body":             {"body"},
			"html_url":         {"html_url"},
			"id":               {"id"},
			"major_version":    {"major_version"},
			"minor_version":    {"minor_version"},
			"name":             {"name"},
			"patch_version":    {"patch_version"},
			"resolved_version": {"resolved_version"},
			"tag_name":         {"tag_name"},
			"upload_url":       {"upload_url"},
		},
	},
	"reviewdog/action-actionlint@v1": {
		Name: "actionlint with reviewdog",
		Inputs: ActionMetadataInputs{
			"actionlint_flags": {"actionlint_flags", false, false, ""},
			"fail_level":       {"fail_level", false, false, ""},
			"fail_on_error":    {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":      {"filter_mode", false, false, ""},
			"github_token":     {"github_token", false, false, ""},
			"level":            {"level", false, false, ""},
			"reporter":         {"reporter", false, false, ""},
			"reviewdog_flags":  {"reviewdog_flags", false, false, ""},
			"tool_name":        {"tool_name", false, false, ""},
		},
	},
	"reviewdog/action-eslint@v1": {
		Name: "Run eslint with reviewdog",
		Inputs: ActionMetadataInputs{
			"eslint_flags":    {"eslint_flags", false, false, ""},
			"fail_level":      {"fail_level", false, false, ""},
			"fail_on_error":   {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":     {"filter_mode", false, false, ""},
			"github_token":    {"github_token", false, false, ""},
			"level":           {"level", false, false, ""},
			"node_options":    {"node_options", false, false, ""},
			"reporter":        {"reporter", false, false, ""},
			"reviewdog_flags": {"reviewdog_flags", false, false, ""},
			"tool_name":       {"tool_name", false, false, ""},
			"workdir":         {"workdir", false, false, ""},
		},
	},
	"reviewdog/action-golangci-lint@v1": {
		Name: "Run golangci-lint with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_on_error":       {"fail_on_error", false, false, ""},
			"filter_mode":         {"filter_mode", false, false, ""},
			"github_token":        {"github_token", false, false, ""},
			"golangci_lint_flags": {"golangci_lint_flags", false, false, ""},
			"level":               {"level", false, false, ""},
			"reporter":            {"reporter", false, false, ""},
			"reviewdog_flags":     {"reviewdog_flags", false, false, ""},
			"tool_name":           {"tool_name", false, false, ""},
			"workdir":             {"workdir", false, false, ""},
		},
	},
	"reviewdog/action-golangci-lint@v2": {
		Name: "Run golangci-lint with reviewdog",
		Inputs: ActionMetadataInputs{
			"cache":                 {"cache", false, false, ""},
			"fail_level":            {"fail_level", false, false, ""},
			"fail_on_error":         {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":           {"filter_mode", false, false, ""},
			"github_token":          {"github_token", false, false, ""},
			"go_version":            {"go_version", false, false, ""},
			"go_version_file":       {"go_version_file", false, false, ""},
			"golangci_lint_flags":   {"golangci_lint_flags", false, false, ""},
			"golangci_lint_version": {"golangci_lint_version", false, false, ""},
			"level":                 {"level", false, false, ""},
			"reporter":              {"reporter", false, false, ""},
			"reviewdog_flags":       {"reviewdog_flags", false, false, ""},
			"reviewdog_version":     {"reviewdog_version", false, false, ""},
			"tool_name":             {"tool_name", false, false, ""},
			"workdir":               {"workdir", false, false, ""},
		},
	},
	"reviewdog/action-hadolint@v1": {
		Name: "Run hadolint with reviewdog",
		Inputs: ActionMetadataInputs{
			"exclude":         {"exclude", false, false, ""},
			"fail_level":      {"fail_level", false, false, ""},
			"fail_on_error":   {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":     {"filter_mode", false, false, ""},
			"github_token":    {"github_token", false, false, ""},
			"hadolint_flags":  {"hadolint_flags", false, false, ""},
			"hadolint_ignore": {"hadolint_ignore", false, false, ""},
			"include":         {"include", false, false, ""},
			"level":           {"level", false, false, ""},
			"reporter":        {"reporter", false, false, ""},
			"reviewdog_flags": {"reviewdog_flags", false, false, ""},
			"tool_name":       {"tool_name", false, false, ""},
		},
	},
	"reviewdog/action-misspell@v1": {
		Name: "Run misspell with reviewdog",
		Inputs: ActionMetadataInputs{
			"exclude":       {"exclude", false, false, ""},
			"fail_level":    {"fail_level", false, false, ""},
			"fail_on_error": {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":   {"filter_mode", false, false, ""},
			"github_token":  {"github_token", false, false, ""},
			"ignore":        {"ignore", false, false, ""},
			"level":         {"level", false, false, ""},
			"locale":        {"locale", false, false, ""},
			"path":          {"path", false, false, ""},
			"pattern":       {"pattern", false, false, ""},
			"reporter":      {"reporter", false, false, ""},
		},
	},
	"reviewdog/action-rubocop@v1": {
		Name: "Run rubocop with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_on_error":      {"fail_on_error", false, false, ""},
			"filter_mode":        {"filter_mode", false, false, ""},
			"github_token":       {"github_token", true, false, ""},
			"level":              {"level", false, false, ""},
			"reporter":           {"reporter", false, false, ""},
			"reviewdog_flags":    {"reviewdog_flags", false, false, ""},
			"rubocop_extensions": {"rubocop_extensions", false, false, ""},
			"rubocop_flags":      {"rubocop_flags", false, false, ""},
			"rubocop_version":    {"rubocop_version", false, false, ""},
			"skip_install":       {"skip_install", false, false, ""},
			"tool_name":          {"tool_name", false, false, ""},
			"use_bundler":        {"use_bundler", false, false, ""},
			"workdir":            {"workdir", false, false, ""},
		},
	},
	"reviewdog/action-rubocop@v2": {
		Name: "Run rubocop with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_level":         {"fail_level", false, false, ""},
			"fail_on_error":      {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":        {"filter_mode", false, false, ""},
			"github_token":       {"github_token", false, false, ""},
			"level":              {"level", false, false, ""},
			"only_changed":       {"only_changed", false, false, ""},
			"reporter":           {"reporter", false, false, ""},
			"reviewdog_flags":    {"reviewdog_flags", false, false, ""},
			"rubocop_extensions": {"rubocop_extensions", false, false, ""},
			"rubocop_flags":      {"rubocop_flags", false, false, ""},
			"rubocop_version":    {"rubocop_version", false, false, ""},
			"skip_install":       {"skip_install", false, false, ""},
			"tool_name":          {"tool_name", false, false, ""},
			"use_bundler":        {"use_bundler", false, false, ""},
			"workdir":            {"workdir", false, false, ""},
		},
	},
	"reviewdog/action-shellcheck@v1": {
		Name: "Run shellcheck with reviewdog",
		Inputs: ActionMetadataInputs{
			"check_all_files_with_shebangs": {"check_all_files_with_shebangs", false, false, ""},
			"exclude":                       {"exclude", false, false, ""},
			"fail_level":                    {"fail_level", false, false, ""},
			"fail_on_error":                 {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":                   {"filter_mode", false, false, ""},
			"github_token":                  {"github_token", false, false, ""},
			"level":                         {"level", false, false, ""},
			"path":                          {"path", false, false, ""},
			"pattern":                       {"pattern", false, false, ""},
			"reporter":                      {"reporter", false, false, ""},
			"reviewdog_flags":               {"reviewdog_flags", false, false, ""},
			"shellcheck_flags":              {"shellcheck_flags", false, false, ""},
		},
	},
	"reviewdog/action-tflint@v1": {
		Name: "Run tflint with reviewdog",
		Inputs: ActionMetadataInputs{
			"fail_level":        {"fail_level", false, false, ""},
			"fail_on_error":     {"fail_on_error", false, true, "Deprecated, use `fail_level` instead."},
			"filter_mode":       {"filter_mode", false, false, ""},
			"flags":             {"flags", false, false, ""},
			"github_token":      {"github_token", false, false, ""},
			"level":             {"level", false, false, ""},
			"reporter":          {"reporter", false, false, ""},
			"tflint_config":     {"tflint_config", false, false, ""},
			"tflint_init":       {"tflint_init", false, false, ""},
			"tflint_rulesets":   {"tflint_rulesets", false, false, ""},
			"tflint_target_dir": {"tflint_target_dir", false, false, ""},
			"tflint_version":    {"tflint_version", false, false, ""},
			"working_directory": {"working_directory", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"reviewdog-return-code": {"reviewdog-return-code"},
			"tflint-return-code":    {"tflint-return-code"},
		},
	},
	"rhysd/action-setup-vim@v1": {
		Name: "Setup Vim",
		Inputs: ActionMetadataInputs{
			"configure-args": {"configure-args", false, false, ""},
			"neovim":         {"neovim", false, false, ""},
			"token":          {"token", false, false, ""},
			"version":        {"version", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"executable": {"executable"},
		},
	},
	"ridedott/merge-me-action@v2": {
		Name: "Merge me!",
		Inputs: ActionMetadataInputs{
			"enable_github_api_preview":  {"ENABLE_GITHUB_API_PREVIEW", false, false, ""},
			"enabled_for_manual_changes": {"ENABLED_FOR_MANUAL_CHANGES", false, false, ""},
			"github_login":               {"GITHUB_LOGIN", false, false, ""},
			"github_token":               {"GITHUB_TOKEN", true, false, ""},
			"maximum_retries":            {"MAXIMUM_RETRIES", false, false, ""},
			"merge_method":               {"MERGE_METHOD", false, false, ""},
			"preset":                     {"PRESET", false, false, ""},
		},
	},
	"rtCamp/action-slack-notify@v2": {
		Name: "Slack Notify",
	},
	"ruby/setup-ruby@v1": {
		Name: "Setup Ruby, JRuby and TruffleRuby",
		Inputs: ActionMetadataInputs{
			"bundler":           {"bundler", false, false, ""},
			"bundler-cache":     {"bundler-cache", false, false, ""},
			"cache-version":     {"cache-version", false, false, ""},
			"ruby-version":      {"ruby-version", false, false, ""},
			"rubygems":          {"rubygems", false, false, ""},
			"self-hosted":       {"self-hosted", false, false, ""},
			"windows-toolchain": {"windows-toolchain", false, false, ""},
			"working-directory": {"working-directory", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"ruby-prefix": {"ruby-prefix"},
		},
	},
	"shivammathur/setup-php@v2": {
		Name: "Setup PHP Action",
		Inputs: ActionMetadataInputs{
			"coverage":         {"coverage", false, false, ""},
			"extensions":       {"extensions", false, false, ""},
			"github-token":     {"github-token", false, false, ""},
			"ini-file":         {"ini-file", false, false, ""},
			"ini-values":       {"ini-values", false, false, ""},
			"php-version":      {"php-version", false, false, ""},
			"php-version-file": {"php-version-file", false, false, ""},
			"tools":            {"tools", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"php-version": {"php-version"},
		},
	},
	"softprops/action-gh-release@v2": {
		Name: "GH Release",
		Inputs: ActionMetadataInputs{
			"append_body":              {"append_body", false, false, ""},
			"body":                     {"body", false, false, ""},
			"body_path":                {"body_path", false, false, ""},
			"discussion_category_name": {"discussion_category_name", false, false, ""},
			"draft":                    {"draft", false, false, ""},
			"fail_on_unmatched_files":  {"fail_on_unmatched_files", false, false, ""},
			"files":                    {"files", false, false, ""},
			"generate_release_notes":   {"generate_release_notes", false, false, ""},
			"make_latest":              {"make_latest", false, false, ""},
			"name":                     {"name", false, false, ""},
			"overwrite_files":          {"overwrite_files", false, false, ""},
			"prerelease":               {"prerelease", false, false, ""},
			"preserve_order":           {"preserve_order", false, false, ""},
			"repository":               {"repository", false, false, ""},
			"tag_name":                 {"tag_name", false, false, ""},
			"target_commitish":         {"target_commitish", false, false, ""},
			"token":                    {"token", false, false, ""},
			"working_directory":        {"working_directory", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"assets":     {"assets"},
			"id":         {"id"},
			"upload_url": {"upload_url"},
			"url":        {"url"},
		},
	},
	"subosito/flutter-action@v2": {
		Name: "Set up Flutter",
		Inputs: ActionMetadataInputs{
			"architecture":         {"architecture", false, false, ""},
			"cache":                {"cache", false, false, ""},
			"cache-key":            {"cache-key", false, false, ""},
			"cache-path":           {"cache-path", false, false, ""},
			"channel":              {"channel", false, false, ""},
			"dry-run":              {"dry-run", false, false, ""},
			"flutter-version":      {"flutter-version", false, false, ""},
			"flutter-version-file": {"flutter-version-file", false, false, ""},
			"git-source":           {"git-source", false, false, ""},
			"pub-cache-key":        {"pub-cache-key", false, false, ""},
			"pub-cache-path":       {"pub-cache-path", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"architecture":   {"ARCHITECTURE"},
			"cache-hit":      {"CACHE-HIT"},
			"cache-key":      {"CACHE-KEY"},
			"cache-path":     {"CACHE-PATH"},
			"channel":        {"CHANNEL"},
			"git_source":     {"GIT_SOURCE"},
			"pub-cache-hit":  {"PUB-CACHE-HIT"},
			"pub-cache-key":  {"PUB-CACHE-KEY"},
			"pub-cache-path": {"PUB-CACHE-PATH"},
			"version":        {"VERSION"},
		},
	},
	"treosh/lighthouse-ci-action@v11": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"artifactname":           {"artifactName", false, false, ""},
			"basicauthpassword":      {"basicAuthPassword", false, false, ""},
			"basicauthusername":      {"basicAuthUsername", false, false, ""},
			"budgetpath":             {"budgetPath", false, false, ""},
			"configpath":             {"configPath", false, false, ""},
			"runs":                   {"runs", false, false, ""},
			"serverbaseurl":          {"serverBaseUrl", false, false, ""},
			"servertoken":            {"serverToken", false, false, ""},
			"temporarypublicstorage": {"temporaryPublicStorage", false, false, ""},
			"uploadartifacts":        {"uploadArtifacts", false, false, ""},
			"uploadextraargs":        {"uploadExtraArgs", false, false, ""},
			"urls":                   {"urls", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
	"treosh/lighthouse-ci-action@v12": {
		Name: "Lighthouse CI Action",
		Inputs: ActionMetadataInputs{
			"artifactname":           {"artifactName", false, false, ""},
			"basicauthpassword":      {"basicAuthPassword", false, false, ""},
			"basicauthusername":      {"basicAuthUsername", false, false, ""},
			"budgetpath":             {"budgetPath", false, false, ""},
			"configpath":             {"configPath", false, false, ""},
			"runs":                   {"runs", false, false, ""},
			"serverbaseurl":          {"serverBaseUrl", false, false, ""},
			"servertoken":            {"serverToken", false, false, ""},
			"temporarypublicstorage": {"temporaryPublicStorage", false, false, ""},
			"uploadartifacts":        {"uploadArtifacts", false, false, ""},
			"uploadextraargs":        {"uploadExtraArgs", false, false, ""},
			"urls":                   {"urls", false, false, ""},
		},
		Outputs: ActionMetadataOutputs{
			"assertionresults": {"assertionResults"},
			"links":            {"links"},
			"resultspath":      {"resultsPath"},
		},
	},
}

// OutdatedPopularActionSpecs is a spec set of known outdated popular actions. The word 'outdated'
// means that the runner used by the action is no longer available such as "node12", "node16".
var OutdatedPopularActionSpecs = map[string]struct{}{
	"8398a7/action-slack@v1":                             {},
	"8398a7/action-slack@v2":                             {},
	"Azure/container-scan@v0":                            {},
	"JamesIves/github-pages-deploy-action@releases/v3":   {},
	"ReactiveCircus/android-emulator-runner@v1":          {},
	"Swatinem/rust-cache@v1":                             {},
	"actions-cool/issues-helper@v1":                      {},
	"actions-cool/issues-helper@v2":                      {},
	"actions-rs/audit-check@v1":                          {},
	"actions-rs/cargo@v1":                                {},
	"actions-rs/clippy-check@v1":                         {},
	"actions-rs/toolchain@v1":                            {},
	"actions/cache@v1":                                   {},
	"actions/cache@v2":                                   {},
	"actions/cache@v3":                                   {},
	"actions/checkout@v1":                                {},
	"actions/checkout@v2":                                {},
	"actions/checkout@v3":                                {},
	"actions/configure-pages@v1":                         {},
	"actions/configure-pages@v2":                         {},
	"actions/configure-pages@v3":                         {},
	"actions/delete-package-versions@v1":                 {},
	"actions/delete-package-versions@v2":                 {},
	"actions/delete-package-versions@v3":                 {},
	"actions/delete-package-versions@v4":                 {},
	"actions/dependency-review-action@v3":                {},
	"actions/deploy-pages@v1":                            {},
	"actions/deploy-pages@v2":                            {},
	"actions/download-artifact@v1":                       {},
	"actions/download-artifact@v2":                       {},
	"actions/download-artifact@v3":                       {},
	"actions/github-script@v1":                           {},
	"actions/github-script@v2":                           {},
	"actions/github-script@v3":                           {},
	"actions/github-script@v4":                           {},
	"actions/github-script@v5":                           {},
	"actions/github-script@v6":                           {},
	"actions/labeler@v2":                                 {},
	"actions/labeler@v3":                                 {},
	"actions/labeler@v4":                                 {},
	"actions/setup-dotnet@v1":                            {},
	"actions/setup-dotnet@v2":                            {},
	"actions/setup-dotnet@v3":                            {},
	"actions/setup-go@v1":                                {},
	"actions/setup-go@v2":                                {},
	"actions/setup-go@v3":                                {},
	"actions/setup-go@v4":                                {},
	"actions/setup-java@v1":                              {},
	"actions/setup-java@v2":                              {},
	"actions/setup-java@v3":                              {},
	"actions/setup-node@v1":                              {},
	"actions/setup-node@v2":                              {},
	"actions/setup-node@v3":                              {},
	"actions/setup-python@v1":                            {},
	"actions/setup-python@v2":                            {},
	"actions/setup-python@v3":                            {},
	"actions/setup-python@v4":                            {},
	"actions/stale@v1":                                   {},
	"actions/stale@v2":                                   {},
	"actions/stale@v3":                                   {},
	"actions/stale@v4":                                   {},
	"actions/stale@v5":                                   {},
	"actions/stale@v6":                                   {},
	"actions/stale@v7":                                   {},
	"actions/stale@v8":                                   {},
	"actions/upload-artifact@v1":                         {},
	"actions/upload-artifact@v2":                         {},
	"actions/upload-artifact@v3":                         {},
	"aws-actions/configure-aws-credentials@v1":           {},
	"aws-actions/configure-aws-credentials@v2":           {},
	"aws-actions/configure-aws-credentials@v3":           {},
	"azure/aks-set-context@v1":                           {},
	"azure/aks-set-context@v2":                           {},
	"azure/aks-set-context@v3":                           {},
	"azure/login@v1":                                     {},
	"codecov/codecov-action@v1":                          {},
	"codecov/codecov-action@v2":                          {},
	"codecov/codecov-action@v3":                          {},
	"dawidd6/action-download-artifact@v2":                {},
	"dawidd6/action-send-mail@v2":                        {},
	"dessant/lock-threads@v2":                            {},
	"dessant/lock-threads@v3":                            {},
	"dessant/lock-threads@v4":                            {},
	"docker/build-push-action@v2":                        {},
	"docker/build-push-action@v3":                        {},
	"docker/build-push-action@v4":                        {},
	"docker/login-action@v1":                             {},
	"docker/login-action@v2":                             {},
	"docker/metadata-action@v1":                          {},
	"docker/metadata-action@v2":                          {},
	"docker/metadata-action@v3":                          {},
	"docker/metadata-action@v4":                          {},
	"docker/setup-buildx-action@v1":                      {},
	"docker/setup-buildx-action@v2":                      {},
	"docker/setup-qemu-action@v1":                        {},
	"docker/setup-qemu-action@v2":                        {},
	"dorny/paths-filter@v1":                              {},
	"dorny/paths-filter@v2":                              {},
	"enriikke/gatsby-gh-pages-action@v2":                 {},
	"game-ci/unity-builder@v2":                           {},
	"game-ci/unity-builder@v3":                           {},
	"github/codeql-action/analyze@v1":                    {},
	"github/codeql-action/analyze@v2":                    {},
	"github/codeql-action/autobuild@v1":                  {},
	"github/codeql-action/autobuild@v2":                  {},
	"github/codeql-action/init@v1":                       {},
	"github/codeql-action/init@v2":                       {},
	"githubocto/flat@v1":                                 {},
	"githubocto/flat@v2":                                 {},
	"githubocto/flat@v3":                                 {},
	"golangci/golangci-lint-action@v1":                   {},
	"golangci/golangci-lint-action@v2":                   {},
	"golangci/golangci-lint-action@v3":                   {},
	"google-github-actions/auth@v1":                      {},
	"google-github-actions/get-secretmanager-secrets@v1": {},
	"google-github-actions/setup-gcloud@v1":              {},
	"google-github-actions/upload-cloud-storage@v1":      {},
	"goreleaser/goreleaser-action@v1":                    {},
	"goreleaser/goreleaser-action@v2":                    {},
	"goreleaser/goreleaser-action@v3":                    {},
	"goreleaser/goreleaser-action@v4":                    {},
	"gradle/wrapper-validation-action@v1":                {},
	"haskell/actions/setup@v1":                           {},
	"haskell/actions/setup@v2":                           {},
	"marvinpinto/action-automatic-releases@latest":       {},
	"mikepenz/release-changelog-builder-action@v1":       {},
	"mikepenz/release-changelog-builder-action@v2":       {},
	"mikepenz/release-changelog-builder-action@v3":       {},
	"msys2/setup-msys2@v1":                               {},
	"nwtgck/actions-netlify@v1":                          {},
	"nwtgck/actions-netlify@v2":                          {},
	"octokit/request-action@v1.x":                        {},
	"peaceiris/actions-gh-pages@v3":                      {},
	"peter-evans/create-or-update-comment@v3":            {},
	"peter-evans/create-pull-request@v1":                 {},
	"peter-evans/create-pull-request@v2":                 {},
	"peter-evans/create-pull-request@v3":                 {},
	"peter-evans/create-pull-request@v4":                 {},
	"peter-evans/create-pull-request@v5":                 {},
	"preactjs/compressed-size-action@v1":                 {},
	"pulumi/actions@v2":                                  {},
	"pulumi/actions@v3":                                  {},
	"pulumi/actions@v4":                                  {},
	"release-drafter/release-drafter@v5":                 {},
	"ridedott/merge-me-action@v1":                        {},
	"shivammathur/setup-php@v1":                          {},
	"softprops/action-gh-release@v1":                     {},
	"treosh/lighthouse-ci-action@v1":                     {},
	"treosh/lighthouse-ci-action@v10":                    {},
	"treosh/lighthouse-ci-action@v2":                     {},
	"treosh/lighthouse-ci-action@v3":                     {},
	"treosh/lighthouse-ci-action@v7":                     {},
	"treosh/lighthouse-ci-action@v8":                     {},
	"treosh/lighthouse-ci-action@v9":                     {},
	"wearerequired/lint-action@v1":                       {},
	"wearerequired/lint-action@v2":                       {},
}
